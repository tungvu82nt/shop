{"version":3,"file":"EmailVerificationPage-BR4swlOf.js","sources":["../../src/pages/auth/EmailVerificationPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSearchParams, useNavigate, Link } from 'react-router-dom'\nimport { CheckCircle, XCircle, Mail, RefreshCw } from 'lucide-react'\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Alert, AlertDescription } from '@/components/ui/alert'\nimport { useAuth } from '@/contexts/AuthContext'\nimport { authService } from '@/services/authService'\nimport { toast } from 'sonner'\nimport AuthLayout from '@/components/layout/AuthLayout'\n\nexport default function EmailVerificationPage() {\n  const [searchParams] = useSearchParams()\n  const navigate = useNavigate()\n  const { user } = useAuth()\n  const [verificationStatus, setVerificationStatus] = useState<'pending' | 'success' | 'error'>('pending')\n  const [isResending, setIsResending] = useState(false)\n  const [message, setMessage] = useState('')\n\n  const token = searchParams.get('token')\n  const email = searchParams.get('email')\n\n  useEffect(() => {\n    if (token) {\n      verifyEmail(token)\n    }\n  }, [token])\n\n  const verifyEmail = async (verificationToken: string) => {\n    try {\n      const { error } = await authService.verifyEmail(verificationToken)\n      \n      if (error) {\n        setVerificationStatus('error')\n        setMessage(error)\n      } else {\n        setVerificationStatus('success')\n        setMessage('Email đã được xác thực thành công!')\n        toast.success('Email đã được xác thực thành công!')\n        \n        // Chuyển hướng sau 3 giây\n        setTimeout(() => {\n          navigate('/login')\n        }, 3000)\n      }\n    } catch (error) {\n      setVerificationStatus('error')\n      setMessage('Có lỗi xảy ra khi xác thực email')\n    }\n  }\n\n  const resendVerificationEmail = async () => {\n    if (!email && !user?.email) {\n      toast.error('Không tìm thấy email để gửi lại xác thực')\n      return\n    }\n\n    setIsResending(true)\n    try {\n      const { error } = await authService.sendVerificationEmail(email || user!.email)\n      \n      if (error) {\n        toast.error(error)\n      } else {\n        toast.success('Email xác thực đã được gửi lại!')\n      }\n    } catch (error) {\n      toast.error('Có lỗi xảy ra khi gửi email xác thực')\n    } finally {\n      setIsResending(false)\n    }\n  }\n\n  const renderContent = () => {\n    if (token) {\n      // Đang xác thực với token\n      switch (verificationStatus) {\n        case 'pending':\n          return (\n            <div className=\"text-center\">\n              <RefreshCw className=\"h-12 w-12 mx-auto mb-4 animate-spin text-blue-500\" />\n              <h2 className=\"text-xl font-semibold mb-2\">Đang xác thực email...</h2>\n              <p className=\"text-gray-600\">Vui lòng đợi trong giây lát</p>\n            </div>\n          )\n        \n        case 'success':\n          return (\n            <div className=\"text-center\">\n              <CheckCircle className=\"h-12 w-12 mx-auto mb-4 text-green-500\" />\n              <h2 className=\"text-xl font-semibold mb-2 text-green-700\">Xác thực thành công!</h2>\n              <p className=\"text-gray-600 mb-4\">{message}</p>\n              <p className=\"text-sm text-gray-500\">Bạn sẽ được chuyển hướng đến trang đăng nhập...</p>\n              <Button asChild className=\"mt-4\">\n                <Link to=\"/login\">Đăng nhập ngay</Link>\n              </Button>\n            </div>\n          )\n        \n        case 'error':\n          return (\n            <div className=\"text-center\">\n              <XCircle className=\"h-12 w-12 mx-auto mb-4 text-red-500\" />\n              <h2 className=\"text-xl font-semibold mb-2 text-red-700\">Xác thực thất bại</h2>\n              <p className=\"text-gray-600 mb-4\">{message}</p>\n              <div className=\"space-y-2\">\n                <Button \n                  onClick={resendVerificationEmail}\n                  disabled={isResending}\n                  className=\"w-full\"\n                >\n                  {isResending ? (\n                    <>\n                      <RefreshCw className=\"h-4 w-4 mr-2 animate-spin\" />\n                      Đang gửi...\n                    </>\n                  ) : (\n                    <>\n                      <Mail className=\"h-4 w-4 mr-2\" />\n                      Gửi lại email xác thực\n                    </>\n                  )}\n                </Button>\n                <Button variant=\"outline\" asChild className=\"w-full\">\n                  <Link to=\"/login\">Quay lại đăng nhập</Link>\n                </Button>\n              </div>\n            </div>\n          )\n      }\n    } else {\n      // Trang hướng dẫn xác thực email\n      return (\n        <div className=\"text-center\">\n          <Mail className=\"h-12 w-12 mx-auto mb-4 text-blue-500\" />\n          <h2 className=\"text-xl font-semibold mb-2\">Xác thực email của bạn</h2>\n          <p className=\"text-gray-600 mb-4\">\n            Chúng tôi đã gửi một email xác thực đến địa chỉ email của bạn. \n            Vui lòng kiểm tra hộp thư và nhấp vào liên kết xác thực.\n          </p>\n          \n          <Alert className=\"mb-4\">\n            <AlertDescription>\n              Nếu bạn không thấy email, hãy kiểm tra thư mục spam hoặc thư rác.\n            </AlertDescription>\n          </Alert>\n\n          <div className=\"space-y-2\">\n            <Button \n              onClick={resendVerificationEmail}\n              disabled={isResending}\n              className=\"w-full\"\n            >\n              {isResending ? (\n                <>\n                  <RefreshCw className=\"h-4 w-4 mr-2 animate-spin\" />\n                  Đang gửi...\n                </>\n              ) : (\n                <>\n                  <Mail className=\"h-4 w-4 mr-2\" />\n                  Gửi lại email xác thực\n                </>\n              )}\n            </Button>\n            <Button variant=\"outline\" asChild className=\"w-full\">\n              <Link to=\"/login\">Quay lại đăng nhập</Link>\n            </Button>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  return (\n    <AuthLayout>\n      <Card className=\"w-full max-w-md mx-auto\">\n        <CardHeader>\n          <CardTitle className=\"text-center\">Xác thực Email</CardTitle>\n          <CardDescription className=\"text-center\">\n            Hoàn tất quá trình đăng ký tài khoản\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {renderContent()}\n        </CardContent>\n      </Card>\n    </AuthLayout>\n  )\n}"],"names":["EmailVerificationPage","searchParams","useSearchParams","navigate","useNavigate","user","useAuth","verificationStatus","setVerificationStatus","useState","isResending","setIsResending","message","setMessage","token","email","useEffect","verifyEmail","verificationToken","error","authService","toast","resendVerificationEmail","renderContent","jsxs","jsx","RefreshCw","CheckCircle","Button","Link","XCircle","Fragment","Mail","Alert","AlertDescription","AuthLayout","Card","CardHeader","CardTitle","CardDescription","CardContent"],"mappings":"+lBAWA,SAAwBA,GAAwB,CACxC,KAAA,CAACC,CAAY,EAAIC,IACjBC,EAAWC,IACX,CAAE,KAAAC,GAASC,IACX,CAACC,EAAoBC,CAAqB,EAAIC,WAA0C,SAAS,EACjG,CAACC,EAAaC,CAAc,EAAIF,WAAS,EAAK,EAC9C,CAACG,EAASC,CAAU,EAAIJ,WAAS,EAAE,EAEnCK,EAAQb,EAAa,IAAI,OAAO,EAChCc,EAAQd,EAAa,IAAI,OAAO,EAEtCe,EAAAA,UAAU,IAAM,CACVF,GACFG,EAAYH,CAAK,CACnB,EACC,CAACA,CAAK,CAAC,EAEJ,MAAAG,EAAc,MAAOC,GAA8B,CACnD,GAAA,CACF,KAAM,CAAE,MAAAC,CAAM,EAAI,MAAMC,EAAY,YAAYF,CAAiB,EAE7DC,GACFX,EAAsB,OAAO,EAC7BK,EAAWM,CAAK,IAEhBX,EAAsB,SAAS,EAC/BK,EAAW,oCAAoC,EAC/CQ,EAAM,QAAQ,oCAAoC,EAGlD,WAAW,IAAM,CACflB,EAAS,QAAQ,GAChB,GAAI,QAEK,CACdK,EAAsB,OAAO,EAC7BK,EAAW,kCAAkC,CAC/C,CAAA,EAGIS,EAA0B,SAAY,CAC1C,GAAI,CAACP,GAAS,EAACV,GAAA,MAAAA,EAAM,OAAO,CAC1BgB,EAAM,MAAM,0CAA0C,EACtD,MACF,CAEAV,EAAe,EAAI,EACf,GAAA,CACI,KAAA,CAAE,MAAAQ,CAAU,EAAA,MAAMC,EAAY,sBAAsBL,GAASV,EAAM,KAAK,EAE1Ec,EACFE,EAAM,MAAMF,CAAK,EAEjBE,EAAM,QAAQ,iCAAiC,OAEnC,CACdA,EAAM,MAAM,sCAAsC,CAAA,QAClD,CACAV,EAAe,EAAK,CACtB,CAAA,EAGIY,EAAgB,IAAM,CAC1B,GAAIT,EAEF,OAAQP,EAAoB,CAC1B,IAAK,UAED,OAAAiB,EAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACC,EAAAA,IAAAC,EAAA,CAAU,UAAU,mDAAoD,CAAA,EACxED,EAAA,IAAA,KAAA,CAAG,UAAU,6BAA6B,SAAsB,yBAAA,EAChEA,EAAA,IAAA,IAAA,CAAE,UAAU,gBAAgB,SAA2B,8BAAA,CAC1D,CAAA,CAAA,EAGJ,IAAK,UAED,OAAAD,EAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACC,EAAAA,IAAAE,EAAA,CAAY,UAAU,uCAAwC,CAAA,EAC9DF,EAAA,IAAA,KAAA,CAAG,UAAU,4CAA4C,SAAoB,uBAAA,EAC7EA,EAAA,IAAA,IAAA,CAAE,UAAU,qBAAsB,SAAQb,EAAA,EAC1Ca,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAA+C,kDAAA,EACpFA,EAAA,IAACG,EAAO,CAAA,QAAO,GAAC,UAAU,OACxB,SAAAH,EAAA,IAACI,EAAK,CAAA,GAAG,SAAS,SAAA,gBAAc,CAAA,EAClC,CACF,CAAA,CAAA,EAGJ,IAAK,QAED,OAAAL,EAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACC,EAAAA,IAAAK,EAAA,CAAQ,UAAU,qCAAsC,CAAA,EACxDL,EAAA,IAAA,KAAA,CAAG,UAAU,0CAA0C,SAAiB,oBAAA,EACxEA,EAAA,IAAA,IAAA,CAAE,UAAU,qBAAsB,SAAQb,EAAA,EAC3CY,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAC,EAAA,IAACG,EAAA,CACC,QAASN,EACT,SAAUZ,EACV,UAAU,SAET,WAEGc,EAAAA,KAAAO,EAAA,SAAA,CAAA,SAAA,CAACN,EAAAA,IAAAC,EAAA,CAAU,UAAU,2BAA4B,CAAA,EAAE,aAAA,CAAA,CAErD,EAGEF,EAAAA,KAAAO,EAAA,SAAA,CAAA,SAAA,CAACN,EAAAA,IAAAO,EAAA,CAAK,UAAU,cAAe,CAAA,EAAE,wBAAA,EAEnC,CAAA,CAEJ,EACCP,EAAA,IAAAG,EAAA,CAAO,QAAQ,UAAU,QAAO,GAAC,UAAU,SAC1C,SAACH,EAAA,IAAAI,EAAA,CAAK,GAAG,SAAS,6BAAkB,CAAA,EACtC,CAAA,EACF,CACF,CAAA,CAAA,CAEN,KAIE,QAAAL,EAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACC,EAAAA,IAAAO,EAAA,CAAK,UAAU,sCAAuC,CAAA,EACtDP,EAAA,IAAA,KAAA,CAAG,UAAU,6BAA6B,SAAsB,yBAAA,EAChEA,EAAA,IAAA,IAAA,CAAE,UAAU,qBAAqB,SAGlC,0HAAA,QAECQ,EAAM,CAAA,UAAU,OACf,SAACR,MAAAS,EAAA,CAAiB,6EAElB,CACF,CAAA,EAEAV,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAC,EAAA,IAACG,EAAA,CACC,QAASN,EACT,SAAUZ,EACV,UAAU,SAET,WAEGc,EAAAA,KAAAO,EAAA,SAAA,CAAA,SAAA,CAACN,EAAAA,IAAAC,EAAA,CAAU,UAAU,2BAA4B,CAAA,EAAE,aAAA,CAAA,CAErD,EAGEF,EAAAA,KAAAO,EAAA,SAAA,CAAA,SAAA,CAACN,EAAAA,IAAAO,EAAA,CAAK,UAAU,cAAe,CAAA,EAAE,wBAAA,EAEnC,CAAA,CAEJ,EACCP,EAAA,IAAAG,EAAA,CAAO,QAAQ,UAAU,QAAO,GAAC,UAAU,SAC1C,SAACH,EAAA,IAAAI,EAAA,CAAK,GAAG,SAAS,6BAAkB,CAAA,EACtC,CAAA,EACF,CACF,CAAA,CAAA,CAEJ,EAGF,OACGJ,EAAA,IAAAU,EAAA,CACC,SAACX,EAAAA,KAAAY,EAAA,CAAK,UAAU,0BACd,SAAA,CAAAZ,OAACa,EACC,CAAA,SAAA,CAACZ,EAAA,IAAAa,EAAA,CAAU,UAAU,cAAc,SAAc,iBAAA,EAChDb,EAAA,IAAAc,EAAA,CAAgB,UAAU,cAAc,SAEzC,uCAAA,CAAA,EACF,EACAd,EAAAA,IAACe,EACE,CAAA,SAAAjB,EACH,CAAA,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAEJ"}