{"version":3,"file":"Admin-CeHPOWg7.js","sources":["../../node_modules/lucide-react/dist/esm/icons/activity.js","../../node_modules/lucide-react/dist/esm/icons/ban.js","../../node_modules/lucide-react/dist/esm/icons/bug.js","../../node_modules/lucide-react/dist/esm/icons/copy.js","../../node_modules/lucide-react/dist/esm/icons/image.js","../../node_modules/lucide-react/dist/esm/icons/network.js","../../node_modules/lucide-react/dist/esm/icons/trending-down.js","../../node_modules/lucide-react/dist/esm/icons/user-check.js","../../src/components/ErrorLoggerDashboard.tsx","../../src/components/SentryTestPage.tsx","../../src/components/ui/table.tsx","../../src/components/admin/UserManagement.tsx","../../src/components/admin/OrderManagement.tsx","../../src/components/admin/ProductForm.tsx","../../src/components/admin/ProductManagement.tsx","../../src/components/admin/Analytics.tsx","../../src/pages/Admin.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Activity = createLucideIcon(\"Activity\", [\n  [\n    \"path\",\n    {\n      d: \"M22 12h-2.48a2 2 0 0 0-1.93 1.46l-2.35 8.36a.25.25 0 0 1-.48 0L9.24 2.18a.25.25 0 0 0-.48 0l-2.35 8.36A2 2 0 0 1 4.49 12H2\",\n      key: \"169zse\"\n    }\n  ]\n]);\n\nexport { Activity as default };\n//# sourceMappingURL=activity.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Ban = createLucideIcon(\"Ban\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"m4.9 4.9 14.2 14.2\", key: \"1m5liu\" }]\n]);\n\nexport { Ban as default };\n//# sourceMappingURL=ban.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Bug = createLucideIcon(\"Bug\", [\n  [\"path\", { d: \"m8 2 1.88 1.88\", key: \"fmnt4t\" }],\n  [\"path\", { d: \"M14.12 3.88 16 2\", key: \"qol33r\" }],\n  [\"path\", { d: \"M9 7.13v-1a3.003 3.003 0 1 1 6 0v1\", key: \"d7y7pr\" }],\n  [\n    \"path\",\n    {\n      d: \"M12 20c-3.3 0-6-2.7-6-6v-3a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v3c0 3.3-2.7 6-6 6\",\n      key: \"xs1cw7\"\n    }\n  ],\n  [\"path\", { d: \"M12 20v-9\", key: \"1qisl0\" }],\n  [\"path\", { d: \"M6.53 9C4.6 8.8 3 7.1 3 5\", key: \"32zzws\" }],\n  [\"path\", { d: \"M6 13H2\", key: \"82j7cp\" }],\n  [\"path\", { d: \"M3 21c0-2.1 1.7-3.9 3.8-4\", key: \"4p0ekp\" }],\n  [\"path\", { d: \"M20.97 5c0 2.1-1.6 3.8-3.5 4\", key: \"18gb23\" }],\n  [\"path\", { d: \"M22 13h-4\", key: \"1jl80f\" }],\n  [\"path\", { d: \"M17.2 17c2.1.1 3.8 1.9 3.8 4\", key: \"k3fwyw\" }]\n]);\n\nexport { Bug as default };\n//# sourceMappingURL=bug.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Copy = createLucideIcon(\"Copy\", [\n  [\"rect\", { width: \"14\", height: \"14\", x: \"8\", y: \"8\", rx: \"2\", ry: \"2\", key: \"17jyea\" }],\n  [\"path\", { d: \"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\", key: \"zix9uf\" }]\n]);\n\nexport { Copy as default };\n//# sourceMappingURL=copy.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Image = createLucideIcon(\"Image\", [\n  [\"rect\", { width: \"18\", height: \"18\", x: \"3\", y: \"3\", rx: \"2\", ry: \"2\", key: \"1m3agn\" }],\n  [\"circle\", { cx: \"9\", cy: \"9\", r: \"2\", key: \"af1f0g\" }],\n  [\"path\", { d: \"m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21\", key: \"1xmnt7\" }]\n]);\n\nexport { Image as default };\n//# sourceMappingURL=image.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Network = createLucideIcon(\"Network\", [\n  [\"rect\", { x: \"16\", y: \"16\", width: \"6\", height: \"6\", rx: \"1\", key: \"4q2zg0\" }],\n  [\"rect\", { x: \"2\", y: \"16\", width: \"6\", height: \"6\", rx: \"1\", key: \"8cvhb9\" }],\n  [\"rect\", { x: \"9\", y: \"2\", width: \"6\", height: \"6\", rx: \"1\", key: \"1egb70\" }],\n  [\"path\", { d: \"M5 16v-3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3\", key: \"1jsf9p\" }],\n  [\"path\", { d: \"M12 12V8\", key: \"2874zd\" }]\n]);\n\nexport { Network as default };\n//# sourceMappingURL=network.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst TrendingDown = createLucideIcon(\"TrendingDown\", [\n  [\"polyline\", { points: \"22 17 13.5 8.5 8.5 13.5 2 7\", key: \"1r2t7k\" }],\n  [\"polyline\", { points: \"16 17 22 17 22 11\", key: \"11uiuu\" }]\n]);\n\nexport { TrendingDown as default };\n//# sourceMappingURL=trending-down.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst UserCheck = createLucideIcon(\"UserCheck\", [\n  [\"path\", { d: \"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\", key: \"1yyitq\" }],\n  [\"circle\", { cx: \"9\", cy: \"7\", r: \"4\", key: \"nufk8\" }],\n  [\"polyline\", { points: \"16 11 18 13 22 9\", key: \"1pwet4\" }]\n]);\n\nexport { UserCheck as default };\n//# sourceMappingURL=user-check.js.map\n","import React, { useState, useEffect } from 'react';\nimport { AlertTriangle, Download, Trash2, RefreshCw, Eye, EyeOff } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { errorLogger, ErrorLog, ErrorStats } from '@/services/errorLogger';\n\ninterface ErrorLoggerDashboardProps {\n  className?: string;\n}\n\nexport const ErrorLoggerDashboard: React.FC<ErrorLoggerDashboardProps> = ({ className }) => {\n  const [logs, setLogs] = useState<ErrorLog[]>([]);\n  const [stats, setStats] = useState<ErrorStats | null>(null);\n  const [selectedLog, setSelectedLog] = useState<ErrorLog | null>(null);\n  const [showDetails, setShowDetails] = useState<{ [key: string]: boolean }>({});\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = () => {\n    setLogs(errorLogger.getLogs());\n    setStats(errorLogger.getStats());\n  };\n\n  const handleClearLogs = () => {\n    if (window.confirm('Bạn có chắc chắn muốn xóa tất cả logs?')) {\n      errorLogger.clearLogs();\n      loadData();\n    }\n  };\n\n  const handleExportLogs = () => {\n    errorLogger.exportLogs();\n  };\n\n  const toggleDetails = (logId: string) => {\n    setShowDetails(prev => ({\n      ...prev,\n      [logId]: !prev[logId]\n    }));\n  };\n\n  const getErrorTypeColor = (type: string) => {\n    switch (type) {\n      case 'error': return 'destructive';\n      case 'react': return 'destructive';\n      case 'network': return 'secondary';\n      case 'auth': return 'outline';\n      case 'payment': return 'default';\n      default: return 'secondary';\n    }\n  };\n\n  const formatTimestamp = (timestamp: string) => {\n    return new Date(timestamp).toLocaleString('vi-VN');\n  };\n\n  if (!stats) {\n    return (\n      <Card className={className}>\n        <CardContent className=\"flex items-center justify-center p-6\">\n          <RefreshCw className=\"h-4 w-4 animate-spin mr-2\" />\n          Đang tải dữ liệu...\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className={className}>\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <CardTitle className=\"flex items-center gap-2\">\n                <AlertTriangle className=\"h-5 w-5\" />\n                Error Logger Dashboard\n              </CardTitle>\n              <CardDescription>\n                Theo dõi và quản lý các lỗi trong ứng dụng\n              </CardDescription>\n            </div>\n            <div className=\"flex gap-2\">\n              <Button variant=\"outline\" size=\"sm\" onClick={loadData}>\n                <RefreshCw className=\"h-4 w-4 mr-2\" />\n                Làm mới\n              </Button>\n              <Button variant=\"outline\" size=\"sm\" onClick={handleExportLogs}>\n                <Download className=\"h-4 w-4 mr-2\" />\n                Xuất logs\n              </Button>\n              <Button variant=\"destructive\" size=\"sm\" onClick={handleClearLogs}>\n                <Trash2 className=\"h-4 w-4 mr-2\" />\n                Xóa tất cả\n              </Button>\n            </div>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <Tabs defaultValue=\"overview\" className=\"w-full\">\n            <TabsList className=\"grid w-full grid-cols-3\">\n              <TabsTrigger value=\"overview\">Tổng quan</TabsTrigger>\n              <TabsTrigger value=\"logs\">Chi tiết logs</TabsTrigger>\n              <TabsTrigger value=\"stats\">Thống kê</TabsTrigger>\n            </TabsList>\n            \n            <TabsContent value=\"overview\" className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <Card>\n                  <CardContent className=\"p-4\">\n                    <div className=\"text-2xl font-bold\">{stats.totalErrors}</div>\n                    <p className=\"text-xs text-muted-foreground\">Tổng số lỗi</p>\n                  </CardContent>\n                </Card>\n                <Card>\n                  <CardContent className=\"p-4\">\n                    <div className=\"text-2xl font-bold\">{stats.errorsByType.error || 0}</div>\n                    <p className=\"text-xs text-muted-foreground\">Lỗi chung</p>\n                  </CardContent>\n                </Card>\n                <Card>\n                  <CardContent className=\"p-4\">\n                    <div className=\"text-2xl font-bold\">{stats.errorsByType.react || 0}</div>\n                    <p className=\"text-xs text-muted-foreground\">Lỗi React</p>\n                  </CardContent>\n                </Card>\n                <Card>\n                  <CardContent className=\"p-4\">\n                    <div className=\"text-2xl font-bold\">{stats.errorsByType.network || 0}</div>\n                    <p className=\"text-xs text-muted-foreground\">Lỗi mạng</p>\n                  </CardContent>\n                </Card>\n              </div>\n              \n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"text-lg\">Lỗi gần đây</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  {logs.slice(0, 5).map((log) => (\n                    <div key={log.id} className=\"flex items-center justify-between py-2 border-b last:border-b-0\">\n                      <div className=\"flex items-center gap-3\">\n                        <Badge variant={getErrorTypeColor(log.type) as any}>\n                          {log.type}\n                        </Badge>\n                        <div>\n                          <p className=\"font-medium text-sm\">{log.message}</p>\n                          <p className=\"text-xs text-muted-foreground\">{formatTimestamp(log.timestamp)}</p>\n                        </div>\n                      </div>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={() => setSelectedLog(log)}\n                      >\n                        <Eye className=\"h-4 w-4\" />\n                      </Button>\n                    </div>\n                  ))}\n                  {logs.length === 0 && (\n                    <p className=\"text-center text-muted-foreground py-4\">\n                      Không có lỗi nào được ghi lại\n                    </p>\n                  )}\n                </CardContent>\n              </Card>\n            </TabsContent>\n            \n            <TabsContent value=\"logs\" className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                {logs.map((log) => (\n                  <Card key={log.id}>\n                    <CardContent className=\"p-4\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <div className=\"flex items-center gap-3\">\n                          <Badge variant={getErrorTypeColor(log.type) as any}>\n                            {log.type}\n                          </Badge>\n                          <span className=\"font-medium\">{log.message}</span>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <span className=\"text-xs text-muted-foreground\">\n                            {formatTimestamp(log.timestamp)}\n                          </span>\n                          <Button\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            onClick={() => toggleDetails(log.id)}\n                          >\n                            {showDetails[log.id] ? (\n                              <EyeOff className=\"h-4 w-4\" />\n                            ) : (\n                              <Eye className=\"h-4 w-4\" />\n                            )}\n                          </Button>\n                        </div>\n                      </div>\n                      \n                      {showDetails[log.id] && (\n                        <div className=\"mt-3 space-y-2\">\n                          {log.context && (\n                            <div>\n                              <strong className=\"text-xs\">Context:</strong>\n                              <p className=\"text-xs text-muted-foreground\">{log.context}</p>\n                            </div>\n                          )}\n                          {log.stack && (\n                            <div>\n                              <strong className=\"text-xs\">Stack Trace:</strong>\n                              <pre className=\"text-xs bg-muted p-2 rounded mt-1 overflow-x-auto\">\n                                {log.stack}\n                              </pre>\n                            </div>\n                          )}\n                          {log.componentStack && (\n                            <div>\n                              <strong className=\"text-xs\">Component Stack:</strong>\n                              <pre className=\"text-xs bg-muted p-2 rounded mt-1 overflow-x-auto\">\n                                {log.componentStack}\n                              </pre>\n                            </div>\n                          )}\n                          <div className=\"grid grid-cols-2 gap-4 text-xs\">\n                            <div>\n                              <strong>URL:</strong>\n                              <p className=\"text-muted-foreground break-all\">{log.url}</p>\n                            </div>\n                            <div>\n                              <strong>User Agent:</strong>\n                              <p className=\"text-muted-foreground break-all\">{log.userAgent}</p>\n                            </div>\n                          </div>\n                          {log.userId && (\n                            <div>\n                              <strong className=\"text-xs\">User ID:</strong>\n                              <p className=\"text-xs text-muted-foreground\">{log.userId}</p>\n                            </div>\n                          )}\n                        </div>\n                      )}\n                    </CardContent>\n                  </Card>\n                ))}\n                {logs.length === 0 && (\n                  <Card>\n                    <CardContent className=\"p-8 text-center\">\n                      <AlertTriangle className=\"h-12 w-12 mx-auto text-muted-foreground mb-4\" />\n                      <p className=\"text-muted-foreground\">Không có lỗi nào được ghi lại</p>\n                    </CardContent>\n                  </Card>\n                )}\n              </div>\n            </TabsContent>\n            \n            <TabsContent value=\"stats\" className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"text-lg\">Phân loại lỗi</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-2\">\n                      {Object.entries(stats.errorsByType).map(([type, count]) => (\n                        <div key={type} className=\"flex justify-between items-center\">\n                          <Badge variant={getErrorTypeColor(type) as any}>{type}</Badge>\n                          <span className=\"font-medium\">{count}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n                \n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"text-lg\">Thông tin hệ thống</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-2 text-sm\">\n                      <div>\n                        <strong>Tổng số lỗi:</strong> {stats.totalErrors}\n                      </div>\n                      <div>\n                        <strong>Lỗi đầu tiên:</strong> {stats.firstError ? formatTimestamp(stats.firstError) : 'N/A'}\n                      </div>\n                      <div>\n                        <strong>Lỗi gần nhất:</strong> {stats.lastError ? formatTimestamp(stats.lastError) : 'N/A'}\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n            </TabsContent>\n          </Tabs>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default ErrorLoggerDashboard;","import React, { useState } from 'react';\nimport { AlertTriangle, Bug, Zap, Network, CreditCard } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { captureError, captureMessage, addBreadcrumb, setUserContext } from '@/lib/sentry';\nimport { errorLogger } from '@/services/errorLogger';\nimport { useErrorHandler } from '@/components/ErrorBoundary';\n\nconst SentryTestPage: React.FC = () => {\n  const [testResults, setTestResults] = useState<string[]>([]);\n  const handleError = useErrorHandler();\n\n  const addResult = (message: string) => {\n    setTestResults(prev => [...prev, `${new Date().toLocaleTimeString()}: ${message}`]);\n  };\n\n  // Test 1: Lỗi JavaScript thông thường\n  const testJavaScriptError = () => {\n    try {\n      addResult('Đang test lỗi JavaScript...');\n      throw new Error('Test JavaScript Error - Đây là lỗi test từ Sentry');\n    } catch (error) {\n      handleError(error as Error, { testType: 'javascript', source: 'SentryTestPage' });\n      addResult('✅ Lỗi JavaScript đã được gửi lên Sentry');\n    }\n  };\n\n  // Test 2: Lỗi React Component\n  const testReactError = () => {\n    addResult('Đang test lỗi React Component...');\n    const error = new Error('Test React Component Error - Lỗi trong quá trình render');\n    errorLogger.logReactError(error, {\n      componentStack: 'SentryTestPage > TestButton',\n      props: { testType: 'react' }\n    }, 'SentryTestPage');\n    addResult('✅ Lỗi React Component đã được gửi lên Sentry');\n  };\n\n  // Test 3: Lỗi Network\n  const testNetworkError = () => {\n    addResult('Đang test lỗi Network...');\n    const error = new Error('Test Network Error - Không thể kết nối đến API');\n    errorLogger.logNetworkError(error, {\n      url: 'https://api.example.com/test',\n      method: 'POST',\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n    addResult('✅ Lỗi Network đã được gửi lên Sentry');\n  };\n\n  // Test 4: Lỗi Authentication\n  const testAuthError = () => {\n    addResult('Đang test lỗi Authentication...');\n    const error = new Error('Test Auth Error - Token không hợp lệ');\n    errorLogger.logAuthError(error, {\n      userId: 'test-user-123',\n      action: 'login',\n      provider: 'email'\n    });\n    addResult('✅ Lỗi Authentication đã được gửi lên Sentry');\n  };\n\n  // Test 5: Lỗi Payment\n  const testPaymentError = () => {\n    addResult('Đang test lỗi Payment...');\n    const error = new Error('Test Payment Error - Thanh toán thất bại');\n    errorLogger.logPaymentError(error, {\n      orderId: 'ORDER-123',\n      amount: 500000,\n      paymentMethod: 'vnpay',\n      currency: 'VND'\n    });\n    addResult('✅ Lỗi Payment đã được gửi lên Sentry');\n  };\n\n  // Test 6: Capture Message\n  const testCaptureMessage = () => {\n    addResult('Đang test Capture Message...');\n    captureMessage('Test Info Message - Thông tin debug từ Sentry Test', 'info', {\n      feature: 'sentry-test',\n      user: 'test-user'\n    });\n    addResult('✅ Message đã được gửi lên Sentry');\n  };\n\n  // Test 7: Breadcrumbs\n  const testBreadcrumbs = () => {\n    addResult('Đang test Breadcrumbs...');\n    addBreadcrumb('User clicked test button', 'user', 'info');\n    addBreadcrumb('Starting breadcrumb test', 'navigation', 'info');\n    addBreadcrumb('Test breadcrumb added', 'debug', 'debug');\n    \n    // Sau đó tạo một lỗi để xem breadcrumbs\n    const error = new Error('Test Error with Breadcrumbs');\n    captureError(error, { testType: 'breadcrumbs' });\n    addResult('✅ Breadcrumbs và Error đã được gửi lên Sentry');\n  };\n\n  // Test 8: User Context\n  const testUserContext = () => {\n    addResult('Đang test User Context...');\n    setUserContext({\n      id: 'test-user-123',\n      email: 'test@example.com',\n      username: 'testuser'\n    });\n    \n    const error = new Error('Test Error with User Context');\n    captureError(error, { testType: 'user-context' });\n    addResult('✅ User Context và Error đã được gửi lên Sentry');\n  };\n\n  // Clear test results\n  const clearResults = () => {\n    setTestResults([]);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Bug className=\"h-5 w-5\" />\n            Sentry Error Monitoring Test\n          </CardTitle>\n          <CardDescription>\n            Test các tính năng error monitoring và logging với Sentry integration\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {/* Test Buttons */}\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3\">\n            <Button \n              onClick={testJavaScriptError}\n              variant=\"destructive\"\n              size=\"sm\"\n              className=\"flex items-center gap-2\"\n            >\n              <AlertTriangle className=\"h-4 w-4\" />\n              JS Error\n            </Button>\n            \n            <Button \n              onClick={testReactError}\n              variant=\"destructive\"\n              size=\"sm\"\n              className=\"flex items-center gap-2\"\n            >\n              <Zap className=\"h-4 w-4\" />\n              React Error\n            </Button>\n            \n            <Button \n              onClick={testNetworkError}\n              variant=\"destructive\"\n              size=\"sm\"\n              className=\"flex items-center gap-2\"\n            >\n              <Network className=\"h-4 w-4\" />\n              Network Error\n            </Button>\n            \n            <Button \n              onClick={testAuthError}\n              variant=\"destructive\"\n              size=\"sm\"\n              className=\"flex items-center gap-2\"\n            >\n              <AlertTriangle className=\"h-4 w-4\" />\n              Auth Error\n            </Button>\n            \n            <Button \n              onClick={testPaymentError}\n              variant=\"destructive\"\n              size=\"sm\"\n              className=\"flex items-center gap-2\"\n            >\n              <CreditCard className=\"h-4 w-4\" />\n              Payment Error\n            </Button>\n            \n            <Button \n              onClick={testCaptureMessage}\n              variant=\"secondary\"\n              size=\"sm\"\n            >\n              Message\n            </Button>\n            \n            <Button \n              onClick={testBreadcrumbs}\n              variant=\"secondary\"\n              size=\"sm\"\n            >\n              Breadcrumbs\n            </Button>\n            \n            <Button \n              onClick={testUserContext}\n              variant=\"secondary\"\n              size=\"sm\"\n            >\n              User Context\n            </Button>\n          </div>\n\n          {/* Clear Button */}\n          <div className=\"flex justify-end\">\n            <Button \n              onClick={clearResults}\n              variant=\"outline\"\n              size=\"sm\"\n            >\n              Clear Results\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Test Results */}\n      {testResults.length > 0 && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-lg\">Test Results</CardTitle>\n            <CardDescription>\n              Kết quả test Sentry integration\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-2 max-h-60 overflow-y-auto\">\n              {testResults.map((result, index) => (\n                <div key={index} className=\"flex items-center gap-2 text-sm\">\n                  <Badge variant=\"outline\" className=\"text-xs\">\n                    {index + 1}\n                  </Badge>\n                  <span className=\"font-mono\">{result}</span>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Instructions */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-lg\">Hướng dẫn sử dụng</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-3\">\n          <div className=\"text-sm space-y-2\">\n            <p><strong>1. Cấu hình Sentry:</strong></p>\n            <ul className=\"list-disc list-inside ml-4 space-y-1\">\n              <li>Tạo tài khoản tại <a href=\"https://sentry.io\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-600 hover:underline\">sentry.io</a></li>\n              <li>Tạo project mới cho React</li>\n              <li>Copy DSN và thêm vào file .env: <code className=\"bg-gray-100 px-1 rounded\">VITE_SENTRY_DSN=your_dsn_here</code></li>\n            </ul>\n            \n            <p><strong>2. Test các tính năng:</strong></p>\n            <ul className=\"list-disc list-inside ml-4 space-y-1\">\n              <li>Click các button để test các loại lỗi khác nhau</li>\n              <li>Kiểm tra Sentry dashboard để xem lỗi đã được ghi nhận</li>\n              <li>Xem chi tiết context, breadcrumbs, và user information</li>\n            </ul>\n            \n            <p><strong>3. Monitoring trong Production:</strong></p>\n            <ul className=\"list-disc list-inside ml-4 space-y-1\">\n              <li>Sentry sẽ tự động capture các lỗi JavaScript và React</li>\n              <li>Network errors sẽ được log qua errorLogger service</li>\n              <li>User context sẽ được set tự động khi user login</li>\n            </ul>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default SentryTestPage;","import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Table = React.forwardRef<\r\n  HTMLTableElement,\r\n  React.HTMLAttributes<HTMLTableElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div className=\"relative w-full overflow-auto\">\r\n    <table\r\n      ref={ref}\r\n      className={cn(\"w-full caption-bottom text-sm\", className)}\r\n      {...props}\r\n    />\r\n  </div>\r\n))\r\nTable.displayName = \"Table\"\r\n\r\nconst TableHeader = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\r\n))\r\nTableHeader.displayName = \"TableHeader\"\r\n\r\nconst TableBody = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tbody\r\n    ref={ref}\r\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableBody.displayName = \"TableBody\"\r\n\r\nconst TableFooter = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tfoot\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableFooter.displayName = \"TableFooter\"\r\n\r\nconst TableRow = React.forwardRef<\r\n  HTMLTableRowElement,\r\n  React.HTMLAttributes<HTMLTableRowElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tr\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableRow.displayName = \"TableRow\"\r\n\r\nconst TableHead = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.ThHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <th\r\n    ref={ref}\r\n    className={cn(\r\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableHead.displayName = \"TableHead\"\r\n\r\nconst TableCell = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.TdHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <td\r\n    ref={ref}\r\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCell.displayName = \"TableCell\"\r\n\r\nconst TableCaption = React.forwardRef<\r\n  HTMLTableCaptionElement,\r\n  React.HTMLAttributes<HTMLTableCaptionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <caption\r\n    ref={ref}\r\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCaption.displayName = \"TableCaption\"\r\n\r\nexport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableCaption,\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport { \n  Users, \n  Search, \n  Filter, \n  Eye, \n  Edit, \n  Trash2, \n  UserPlus, \n  Shield, \n  ShieldCheck, \n  ShieldX,\n  MoreHorizontal,\n  Download,\n  RefreshCw,\n  Mail,\n  Phone,\n  MapPin,\n  Calendar,\n  CreditCard,\n  ShoppingBag,\n  Star,\n  AlertTriangle,\n  CheckCircle,\n  XCircle,\n  Clock,\n  Ban,\n  UserCheck,\n  Settings\n} from 'lucide-react';\nimport { Button } from '../ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../ui/card';\nimport { Input } from '../ui/input';\nimport { Label } from '../ui/label';\nimport { Badge } from '../ui/badge';\nimport { Alert, AlertDescription } from '../ui/alert';\nimport { useToast } from '../ui/use-toast';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '../ui/table';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from '../ui/dropdown-menu';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '../ui/dialog';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '../ui/select';\nimport { Textarea } from '../ui/textarea';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '../ui/tabs';\nimport { Separator } from '../ui/separator';\nimport { Switch } from '../ui/switch';\nimport { Avatar, AvatarFallback, AvatarImage } from '../ui/avatar';\nimport { Checkbox } from '../ui/checkbox';\nimport { supabase } from '../../lib/supabase';\n\ninterface UserAddress {\n  id: string;\n  fullName: string;\n  phone: string;\n  address: string;\n  ward: string;\n  district: string;\n  province: string;\n  postalCode?: string;\n  isDefault: boolean;\n}\n\ninterface UserStats {\n  totalOrders: number;\n  totalSpent: number;\n  averageOrderValue: number;\n  lastOrderDate?: string;\n  favoriteCategories: string[];\n  loyaltyPoints: number;\n  reviewsCount: number;\n  averageRating: number;\n}\n\ninterface User {\n  id: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  fullName: string;\n  phone?: string;\n  avatar?: string;\n  dateOfBirth?: string;\n  gender?: 'male' | 'female' | 'other';\n  role: 'customer' | 'vendor' | 'admin' | 'super_admin';\n  status: 'active' | 'inactive' | 'suspended' | 'banned';\n  emailVerified: boolean;\n  phoneVerified: boolean;\n  twoFactorEnabled: boolean;\n  addresses: UserAddress[];\n  stats: UserStats;\n  preferences: {\n    language: string;\n    currency: string;\n    notifications: {\n      email: boolean;\n      sms: boolean;\n      push: boolean;\n    };\n    marketing: boolean;\n  };\n  lastLoginAt?: string;\n  lastActiveAt?: string;\n  registrationSource: 'web' | 'mobile' | 'social' | 'admin';\n  referralCode?: string;\n  referredBy?: string;\n  notes?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface UserManagementProps {\n  onUserSelect?: (user: User) => void;\n}\n\n// Mock data cho users\nconst mockUsers: User[] = [\n  {\n    id: '1',\n    email: 'nguyen.van.an@email.com',\n    firstName: 'An',\n    lastName: 'Nguyễn Văn',\n    fullName: 'Nguyễn Văn An',\n    phone: '0901234567',\n    avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=40&h=40&fit=crop&crop=face',\n    dateOfBirth: '1990-05-15',\n    gender: 'male',\n    role: 'customer',\n    status: 'active',\n    emailVerified: true,\n    phoneVerified: true,\n    twoFactorEnabled: false,\n    addresses: [],\n    stats: {\n      totalOrders: 12,\n      totalSpent: 2450000,\n      averageOrderValue: 204167,\n      lastOrderDate: '2024-03-10',\n      favoriteCategories: ['Điện thoại', 'Laptop'],\n      loyaltyPoints: 245,\n      reviewsCount: 8,\n      averageRating: 4.5\n    },\n    preferences: {\n      language: 'vi',\n      currency: 'VND',\n      notifications: {\n        email: true,\n        sms: true,\n        push: true\n      },\n      marketing: true\n    },\n    lastLoginAt: '2024-03-15T14:30:00Z',\n    lastActiveAt: '2024-03-15T15:45:00Z',\n    registrationSource: 'web',\n    createdAt: '2024-01-15T10:00:00Z',\n    updatedAt: '2024-03-15T15:45:00Z'\n  },\n  {\n    id: '2',\n    email: 'tran.thi.binh@email.com',\n    firstName: 'Bình',\n    lastName: 'Trần Thị',\n    fullName: 'Trần Thị Bình',\n    phone: '0912345678',\n    avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=40&h=40&fit=crop&crop=face',\n    dateOfBirth: '1985-08-22',\n    gender: 'female',\n    role: 'vendor',\n    status: 'active',\n    emailVerified: true,\n    phoneVerified: false,\n    twoFactorEnabled: true,\n    addresses: [],\n    stats: {\n      totalOrders: 8,\n      totalSpent: 1200000,\n      averageOrderValue: 150000,\n      lastOrderDate: '2024-03-12',\n      favoriteCategories: ['Thời trang', 'Mỹ phẩm'],\n      loyaltyPoints: 120,\n      reviewsCount: 5,\n      averageRating: 4.2\n    },\n    preferences: {\n      language: 'vi',\n      currency: 'VND',\n      notifications: {\n        email: true,\n        sms: false,\n        push: true\n      },\n      marketing: false\n    },\n    lastLoginAt: '2024-03-15T09:15:00Z',\n    lastActiveAt: '2024-03-15T10:30:00Z',\n    registrationSource: 'mobile',\n    createdAt: '2024-02-20T08:00:00Z',\n    updatedAt: '2024-03-15T10:30:00Z'\n  },\n  {\n    id: '3',\n    email: 'le.minh.cuong@email.com',\n    firstName: 'Cường',\n    lastName: 'Lê Minh',\n    fullName: 'Lê Minh Cường',\n    phone: '0923456789',\n    avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=40&h=40&fit=crop&crop=face',\n    dateOfBirth: '1992-12-03',\n    gender: 'male',\n    role: 'customer',\n    status: 'suspended',\n    emailVerified: false,\n    phoneVerified: true,\n    twoFactorEnabled: false,\n    addresses: [],\n    stats: {\n      totalOrders: 3,\n      totalSpent: 450000,\n      averageOrderValue: 150000,\n      lastOrderDate: '2024-02-15',\n      favoriteCategories: ['Điện tử'],\n      loyaltyPoints: 45,\n      reviewsCount: 1,\n      averageRating: 3.0\n    },\n    preferences: {\n      language: 'vi',\n      currency: 'VND',\n      notifications: {\n        email: false,\n        sms: true,\n        push: false\n      },\n      marketing: false\n    },\n    lastLoginAt: '2024-03-10T16:45:00Z',\n    lastActiveAt: '2024-03-10T17:00:00Z',\n    registrationSource: 'social',\n    notes: 'Tài khoản bị tạm khóa do vi phạm chính sách',\n    createdAt: '2024-01-10T12:00:00Z',\n    updatedAt: '2024-03-10T17:00:00Z'\n  },\n  {\n    id: '4',\n    email: 'pham.thi.dung@email.com',\n    firstName: 'Dung',\n    lastName: 'Phạm Thị',\n    fullName: 'Phạm Thị Dung',\n    phone: '0934567890',\n    avatar: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=40&h=40&fit=crop&crop=face',\n    dateOfBirth: '1995-06-18',\n    gender: 'female',\n    role: 'customer',\n    status: 'inactive',\n    emailVerified: true,\n    phoneVerified: true,\n    twoFactorEnabled: false,\n    addresses: [],\n    stats: {\n      totalOrders: 1,\n      totalSpent: 150000,\n      averageOrderValue: 150000,\n      lastOrderDate: '2024-03-02',\n      favoriteCategories: ['Sách'],\n      loyaltyPoints: 15,\n      reviewsCount: 0,\n      averageRating: 0\n    },\n    preferences: {\n      language: 'vi',\n      currency: 'VND',\n      notifications: {\n        email: true,\n        sms: true,\n        push: false\n      },\n      marketing: true\n    },\n    lastLoginAt: '2024-03-05T11:20:00Z',\n    lastActiveAt: '2024-03-05T11:45:00Z',\n    registrationSource: 'web',\n    createdAt: '2024-03-01T09:00:00Z',\n    updatedAt: '2024-03-05T11:45:00Z'\n  },\n  {\n    id: '5',\n    email: 'hoang.van.em@email.com',\n    firstName: 'Em',\n    lastName: 'Hoàng Văn',\n    fullName: 'Hoàng Văn Em',\n    phone: '0945678901',\n    avatar: 'https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=40&h=40&fit=crop&crop=face',\n    dateOfBirth: '1988-03-25',\n    gender: 'male',\n    role: 'admin',\n    status: 'active',\n    emailVerified: true,\n    phoneVerified: true,\n    twoFactorEnabled: true,\n    addresses: [],\n    stats: {\n      totalOrders: 0,\n      totalSpent: 0,\n      averageOrderValue: 0,\n      favoriteCategories: [],\n      loyaltyPoints: 0,\n      reviewsCount: 0,\n      averageRating: 0\n    },\n    preferences: {\n      language: 'vi',\n      currency: 'VND',\n      notifications: {\n        email: true,\n        sms: true,\n        push: true\n      },\n      marketing: false\n    },\n    lastLoginAt: '2024-03-15T15:00:00Z',\n    lastActiveAt: '2024-03-15T16:30:00Z',\n    registrationSource: 'admin',\n    createdAt: '2023-12-01T08:00:00Z',\n    updatedAt: '2024-03-15T16:30:00Z'\n  }\n];\n\n// Utility functions\nconst formatCurrency = (amount: number): string => {\n  return new Intl.NumberFormat('vi-VN', {\n    style: 'currency',\n    currency: 'VND'\n  }).format(amount);\n};\n\nconst formatDate = (dateString: string): string => {\n  return new Intl.DateTimeFormat('vi-VN', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit'\n  }).format(new Date(dateString));\n};\n\nconst getInitials = (fullName: string): string => {\n  return fullName\n    .split(' ')\n    .map(name => name.charAt(0))\n    .join('')\n    .toUpperCase()\n    .slice(0, 2);\n};\n\nconst getStatusBadgeVariant = (status: User['status']) => {\n  switch (status) {\n    case 'active':\n      return 'default';\n    case 'inactive':\n      return 'secondary';\n    case 'suspended':\n      return 'destructive';\n    case 'banned':\n      return 'destructive';\n    default:\n      return 'secondary';\n  }\n};\n\nconst getRoleBadgeVariant = (role: User['role']) => {\n  switch (role) {\n    case 'super_admin':\n      return 'destructive';\n    case 'admin':\n      return 'destructive';\n    case 'vendor':\n      return 'default';\n    case 'customer':\n      return 'secondary';\n    default:\n      return 'secondary';\n  }\n};\n\n// Custom hook for user management\nconst useUserManagement = () => {\n  const [users, setUsers] = useState<User[]>(mockUsers);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchUsers = async () => {\n    setLoading(true);\n    try {\n      // NOTE: Cần tích hợp với API backend để lấy danh sách người dùng thực tế\n      // Ví dụ: const response = await fetch('/api/users');\n      // const users = await response.json();\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      setUsers(mockUsers);\n      setError(null);\n    } catch (err) {\n      setError('Không thể tải danh sách người dùng');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateUserStatus = async (userId: string, status: User['status']) => {\n    try {\n      // NOTE: Cần tích hợp với API backend để cập nhật trạng thái người dùng\n      // Ví dụ: await fetch(`/api/users/${userId}/status`, { method: 'PATCH', body: JSON.stringify({ status }) });\n      setUsers(prev => prev.map(user => \n        user.id === userId ? { ...user, status, updatedAt: new Date().toISOString() } : user\n      ));\n    } catch (err) {\n      throw new Error('Không thể cập nhật trạng thái người dùng');\n    }\n  };\n\n  const updateUserRole = async (userId: string, role: User['role']) => {\n    try {\n      // NOTE: Cần tích hợp với API backend để cập nhật vai trò người dùng\n      // Ví dụ: await fetch(`/api/users/${userId}/role`, { method: 'PATCH', body: JSON.stringify({ role }) });\n      setUsers(prev => prev.map(user => \n        user.id === userId ? { ...user, role, updatedAt: new Date().toISOString() } : user\n      ));\n    } catch (err) {\n      throw new Error('Không thể cập nhật vai trò người dùng');\n    }\n  };\n\n  const deleteUser = async (userId: string) => {\n    try {\n      // NOTE: Cần tích hợp với API backend để xóa người dùng\n      // Ví dụ: await fetch(`/api/users/${userId}`, { method: 'DELETE' });\n      setUsers(prev => prev.filter(user => user.id !== userId));\n    } catch (err) {\n      throw new Error('Không thể xóa người dùng');\n    }\n  };\n\n  const exportUsers = async (format: 'csv' | 'excel') => {\n    try {\n      // NOTE: Cần tích hợp với API backend để xuất dữ liệu người dùng\n      // Ví dụ: const response = await fetch(`/api/users/export?format=${format}`);\n      // const blob = await response.blob();\n      // Tạo link download và trigger download\n      console.log(`Exporting users as ${format}`);\n    } catch (err) {\n      throw new Error('Không thể xuất dữ liệu người dùng');\n    }\n  };\n\n  return {\n    users,\n    loading,\n    error,\n    fetchUsers,\n    updateUserStatus,\n    updateUserRole,\n    deleteUser,\n    exportUsers\n  };\n};\n\nconst UserManagement: React.FC<UserManagementProps> = ({ onUserSelect }) => {\n  const { toast } = useToast();\n  const {\n    users,\n    loading,\n    error,\n    fetchUsers,\n    updateUserStatus,\n    updateUserRole,\n    deleteUser,\n    exportUsers\n  } = useUserManagement();\n\n  // State management\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState<User['status'] | 'all'>('all');\n  const [roleFilter, setRoleFilter] = useState<User['role'] | 'all'>('all');\n  const [sortBy, setSortBy] = useState<'name' | 'email' | 'createdAt' | 'lastLoginAt'>('createdAt');\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n  const [selectedUsers, setSelectedUsers] = useState<string[]>([]);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [isViewDialogOpen, setIsViewDialogOpen] = useState(false);\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n  const [isBulkActionDialogOpen, setIsBulkActionDialogOpen] = useState(false);\n  const [bulkAction, setBulkAction] = useState<'activate' | 'deactivate' | 'suspend' | 'delete'>('activate');\n  const [isExporting, setIsExporting] = useState(false);\n  const [isExportDialogOpen, setIsExportDialogOpen] = useState(false);\n  const [exportFormat, setExportFormat] = useState<'csv' | 'excel' | 'json'>('csv');\n  const [exportRange, setExportRange] = useState<'all' | 'filtered' | 'selected'>('all');\n  const [bulkRole, setBulkRole] = useState<User['role']>('customer');\n\n  // Filter and sort users\n  const filteredAndSortedUsers = React.useMemo(() => {\n    const filtered = users.filter(user => {\n      const matchesSearch = \n        user.fullName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        user.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        (user.phone && user.phone.includes(searchTerm));\n      const matchesStatus = statusFilter === 'all' || user.status === statusFilter;\n      const matchesRole = roleFilter === 'all' || user.role === roleFilter;\n      \n      return matchesSearch && matchesStatus && matchesRole;\n    });\n\n    // Sort users\n    filtered.sort((a, b) => {\n      let aValue: any, bValue: any;\n      \n      switch (sortBy) {\n        case 'name':\n          aValue = a.fullName;\n          bValue = b.fullName;\n          break;\n        case 'email':\n          aValue = a.email;\n          bValue = b.email;\n          break;\n        case 'createdAt':\n          aValue = new Date(a.createdAt);\n          bValue = new Date(b.createdAt);\n          break;\n        case 'lastLoginAt':\n          aValue = a.lastLoginAt ? new Date(a.lastLoginAt) : new Date(0);\n          bValue = b.lastLoginAt ? new Date(b.lastLoginAt) : new Date(0);\n          break;\n        default:\n          return 0;\n      }\n      \n      if (aValue < bValue) return sortOrder === 'asc' ? -1 : 1;\n      if (aValue > bValue) return sortOrder === 'asc' ? 1 : -1;\n      return 0;\n    });\n\n    return filtered;\n  }, [users, searchTerm, statusFilter, roleFilter, sortBy, sortOrder]);\n\n  // Pagination\n  const totalPages = Math.ceil(filteredAndSortedUsers.length / itemsPerPage);\n  const paginatedUsers = filteredAndSortedUsers.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n\n  // Effects\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [searchTerm, statusFilter, roleFilter]);\n\n  // Event handlers\n  const handleSort = (field: typeof sortBy) => {\n    if (sortBy === field) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortBy(field);\n      setSortOrder('asc');\n    }\n  };\n\n  const handleSelectUser = (userId: string) => {\n    setSelectedUsers(prev => \n      prev.includes(userId) \n        ? prev.filter(id => id !== userId)\n        : [...prev, userId]\n    );\n  };\n\n  const handleSelectAllUsers = () => {\n    if (selectedUsers.length === paginatedUsers.length) {\n      setSelectedUsers([]);\n    } else {\n      setSelectedUsers(paginatedUsers.map(user => user.id));\n    }\n  };\n\n  const handleViewUser = (user: User) => {\n    setSelectedUser(user);\n    setIsViewDialogOpen(true);\n    onUserSelect?.(user);\n  };\n\n  const handleEditUser = (user: User) => {\n    setSelectedUser(user);\n    setIsEditDialogOpen(true);\n  };\n\n  const handleDeleteUser = (user: User) => {\n    setSelectedUser(user);\n    setIsDeleteDialogOpen(true);\n  };\n\n  const handleStatusChange = async (userId: string, newStatus: User['status']) => {\n    try {\n      await updateUserStatus(userId, newStatus);\n      toast({\n        title: 'Thành công',\n        description: 'Đã cập nhật trạng thái người dùng'\n      });\n    } catch (error) {\n      toast({\n        title: 'Lỗi',\n        description: error instanceof Error ? error.message : 'Có lỗi xảy ra',\n        variant: 'destructive'\n      });\n    }\n  };\n\n  const handleRoleChange = async (userId: string, newRole: User['role']) => {\n    try {\n      await updateUserRole(userId, newRole);\n      toast({\n        title: 'Thành công',\n        description: 'Đã cập nhật vai trò người dùng'\n      });\n    } catch (error) {\n      toast({\n        title: 'Lỗi',\n        description: error instanceof Error ? error.message : 'Có lỗi xảy ra',\n        variant: 'destructive'\n      });\n    }\n  };\n\n  const handleBulkAction = async () => {\n    try {\n      for (const userId of selectedUsers) {\n        switch (bulkAction) {\n          case 'activate':\n            await updateUserStatus(userId, 'active');\n            break;\n          case 'deactivate':\n            await updateUserStatus(userId, 'inactive');\n            break;\n          case 'suspend':\n            await updateUserStatus(userId, 'suspended');\n            break;\n          case 'delete':\n            await deleteUser(userId);\n            break;\n        }\n      }\n      setSelectedUsers([]);\n      setIsBulkActionDialogOpen(false);\n      toast({\n        title: 'Thành công',\n        description: `Đã thực hiện hành động cho ${selectedUsers.length} người dùng`\n      });\n    } catch (error) {\n      toast({\n        title: 'Lỗi',\n        description: error instanceof Error ? error.message : 'Có lỗi xảy ra',\n        variant: 'destructive'\n      });\n    }\n  };\n\n  const handleExport = async (format: 'csv' | 'excel') => {\n    setIsExporting(true);\n    try {\n      await exportUsers(format);\n      toast({\n        title: 'Thành công',\n        description: `Đã xuất dữ liệu người dùng dạng ${format.toUpperCase()}`\n      });\n    } catch (error) {\n      toast({\n        title: 'Lỗi',\n        description: error instanceof Error ? error.message : 'Có lỗi xảy ra',\n        variant: 'destructive'\n      });\n    } finally {\n      setIsExporting(false);\n    }\n  };\n\n  const confirmDeleteUser = async () => {\n    if (!selectedUser) return;\n    \n    try {\n      await deleteUser(selectedUser.id);\n      setIsDeleteDialogOpen(false);\n      setSelectedUser(null);\n      toast({\n        title: 'Thành công',\n        description: 'Đã xóa người dùng'\n      });\n    } catch (error) {\n      toast({\n        title: 'Lỗi',\n        description: error instanceof Error ? error.message : 'Có lỗi xảy ra',\n        variant: 'destructive'\n      });\n    }\n  };\n\n  // Thống kê users\n  const userStats = {\n    total: users.length,\n    active: users.filter(u => u.status === 'active').length,\n    inactive: users.filter(u => u.status === 'inactive').length,\n    suspended: users.filter(u => u.status === 'suspended').length,\n    banned: users.filter(u => u.status === 'banned').length,\n    customers: users.filter(u => u.role === 'customer').length,\n    vendors: users.filter(u => u.role === 'vendor').length,\n    admins: users.filter(u => u.role === 'admin').length\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <RefreshCw className=\"h-8 w-8 animate-spin\" />\n        <span className=\"ml-2\">Đang tải...</span>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert variant=\"destructive\">\n        <AlertTriangle className=\"h-4 w-4\" />\n        <AlertDescription>{error}</AlertDescription>\n      </Alert>\n    );\n  }\n\n\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">Quản lý người dùng</h1>\n          <p className=\"text-muted-foreground\">\n            Quản lý tài khoản và quyền hạn của người dùng\n          </p>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Button\n            variant=\"outline\"\n            onClick={() => handleExport('csv')}\n            disabled={isExporting}\n          >\n            <Download className=\"h-4 w-4 mr-2\" />\n            Xuất CSV\n          </Button>\n          <Button\n            variant=\"outline\"\n            onClick={() => handleExport('excel')}\n            disabled={isExporting}\n          >\n            <Download className=\"h-4 w-4 mr-2\" />\n            Xuất Excel\n          </Button>\n          <Button onClick={() => fetchUsers()}>\n            <RefreshCw className=\"h-4 w-4 mr-2\" />\n            Làm mới\n          </Button>\n        </div>\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Tổng người dùng</CardTitle>\n            <Users className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{userStats.total}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              +{userStats.active} đang hoạt động\n            </p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Khách hàng</CardTitle>\n            <UserCheck className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{userStats.customers}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {((userStats.customers / userStats.total) * 100).toFixed(1)}% tổng số\n            </p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Nhà bán hàng</CardTitle>\n            <ShoppingBag className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{userStats.vendors}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {((userStats.vendors / userStats.total) * 100).toFixed(1)}% tổng số\n            </p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Quản trị viên</CardTitle>\n            <Shield className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{userStats.admins}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {userStats.suspended} bị tạm khóa\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Filters and Search */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <CardTitle>Bộ lọc và tìm kiếm</CardTitle>\n            {selectedUsers.length > 0 && (\n              <Button\n                variant=\"outline\"\n                onClick={() => setIsBulkActionDialogOpen(true)}\n              >\n                Thao tác hàng loạt ({selectedUsers.length})\n              </Button>\n            )}\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex flex-col space-y-4\">\n            <div className=\"flex flex-col md:flex-row gap-4\">\n              <div className=\"flex-1\">\n                <div className=\"relative\">\n                  <Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\n                  <Input\n                    placeholder=\"Tìm kiếm theo tên, email hoặc số điện thoại...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"pl-8\"\n                  />\n                </div>\n              </div>\n              <Select value={statusFilter} onValueChange={setStatusFilter}>\n                <SelectTrigger className=\"w-[180px]\">\n                  <SelectValue placeholder=\"Trạng thái\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">Tất cả trạng thái</SelectItem>\n                  <SelectItem value=\"active\">Hoạt động</SelectItem>\n                  <SelectItem value=\"inactive\">Không hoạt động</SelectItem>\n                  <SelectItem value=\"suspended\">Bị tạm khóa</SelectItem>\n                  <SelectItem value=\"banned\">Bị cấm</SelectItem>\n                </SelectContent>\n              </Select>\n              <Select value={roleFilter} onValueChange={setRoleFilter}>\n                <SelectTrigger className=\"w-[180px]\">\n                  <SelectValue placeholder=\"Vai trò\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">Tất cả vai trò</SelectItem>\n                  <SelectItem value=\"customer\">Khách hàng</SelectItem>\n                  <SelectItem value=\"vendor\">Nhà bán hàng</SelectItem>\n                  <SelectItem value=\"admin\">Quản trị viên</SelectItem>\n                  <SelectItem value=\"super_admin\">Quản trị cấp cao</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-sm text-muted-foreground\">\n                  Hiển thị {paginatedUsers.length} trong tổng số {filteredAndSortedUsers.length} người dùng\n                </span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-sm text-muted-foreground\">Sắp xếp theo:</span>\n                <Select value={sortBy} onValueChange={(value) => setSortBy(value as typeof sortBy)}>\n                  <SelectTrigger className=\"w-[150px]\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"name\">Tên</SelectItem>\n                    <SelectItem value=\"email\">Email</SelectItem>\n                    <SelectItem value=\"createdAt\">Ngày tạo</SelectItem>\n                    <SelectItem value=\"lastLoginAt\">Lần cuối đăng nhập</SelectItem>\n                  </SelectContent>\n                </Select>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc')}\n                >\n                  {sortOrder === 'asc' ? '↑' : '↓'}\n                </Button>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Users Table */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Danh sách người dùng ({filteredAndSortedUsers.length})</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead className=\"w-[50px]\">\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedUsers.length === paginatedUsers.length && paginatedUsers.length > 0}\n                    onChange={handleSelectAllUsers}\n                    className=\"rounded border border-input\"\n                  />\n                </TableHead>\n                <TableHead>Người dùng</TableHead>\n                <TableHead>Vai trò</TableHead>\n                <TableHead>Trạng thái</TableHead>\n                <TableHead>Thống kê</TableHead>\n                <TableHead>Lần cuối đăng nhập</TableHead>\n                <TableHead className=\"text-right\">Thao tác</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {paginatedUsers.map((user) => (\n                <TableRow key={user.id}>\n                  <TableCell>\n                    <input\n                      type=\"checkbox\"\n                      checked={selectedUsers.includes(user.id)}\n                      onChange={() => handleSelectUser(user.id)}\n                      className=\"rounded border border-input\"\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"flex items-center space-x-3\">\n                      <Avatar className=\"h-8 w-8\">\n                        <AvatarImage src={user.avatar} />\n                        <AvatarFallback>{getInitials(user.fullName)}</AvatarFallback>\n                      </Avatar>\n                      <div>\n                        <div className=\"font-medium\">{user.fullName}</div>\n                        <div className=\"text-sm text-muted-foreground\">{user.email}</div>\n                        {user.phone && (\n                          <div className=\"text-sm text-muted-foreground\">{user.phone}</div>\n                        )}\n                      </div>\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <Badge variant={getRoleBadgeVariant(user.role)}>\n                      {user.role === 'customer' && 'Khách hàng'}\n                      {user.role === 'vendor' && 'Nhà bán hàng'}\n                      {user.role === 'admin' && 'Quản trị viên'}\n                      {user.role === 'super_admin' && 'Quản trị cấp cao'}\n                    </Badge>\n                  </TableCell>\n                  <TableCell>\n                    <Badge variant={getStatusBadgeVariant(user.status)}>\n                      {user.status === 'active' && (\n                        <><CheckCircle className=\"w-3 h-3 mr-1\" />Hoạt động</>\n                      )}\n                      {user.status === 'inactive' && (\n                        <><XCircle className=\"w-3 h-3 mr-1\" />Không hoạt động</>\n                      )}\n                      {user.status === 'suspended' && (\n                        <><Ban className=\"w-3 h-3 mr-1\" />Bị tạm khóa</>\n                      )}\n                      {user.status === 'banned' && (\n                        <><AlertTriangle className=\"w-3 h-3 mr-1\" />Bị cấm</>\n                      )}\n                    </Badge>\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"text-sm\">\n                      <div>{user.stats.totalOrders} đơn hàng</div>\n                      <div className=\"text-muted-foreground\">{formatCurrency(user.stats.totalSpent)}</div>\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    {user.lastLoginAt ? formatDate(user.lastLoginAt) : (\n                      <span className=\"text-muted-foreground\">Chưa đăng nhập</span>\n                    )}\n                  </TableCell>\n                  <TableCell className=\"text-right\">\n                    <DropdownMenu>\n                      <DropdownMenuTrigger asChild>\n                        <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n                          <MoreHorizontal className=\"h-4 w-4\" />\n                        </Button>\n                      </DropdownMenuTrigger>\n                      <DropdownMenuContent align=\"end\">\n                        <DropdownMenuItem onClick={() => handleViewUser(user)}>\n                          <Eye className=\"mr-2 h-4 w-4\" />\n                          Xem chi tiết\n                        </DropdownMenuItem>\n                        <DropdownMenuItem onClick={() => handleEditUser(user)}>\n                          <Edit className=\"mr-2 h-4 w-4\" />\n                          Chỉnh sửa\n                        </DropdownMenuItem>\n                        <DropdownMenuSeparator />\n                        <DropdownMenuItem onClick={() => {\n                          const newStatus = user.status === 'suspended' ? 'active' : 'suspended';\n                          handleStatusChange(user.id, newStatus);\n                        }}>\n                          {user.status === 'suspended' ? (\n                            <><UserCheck className=\"mr-2 h-4 w-4\" />Kích hoạt</>\n                          ) : (\n                            <><Ban className=\"mr-2 h-4 w-4\" />Tạm khóa</>\n                          )}\n                        </DropdownMenuItem>\n                        <DropdownMenuItem \n                          className=\"text-red-600\"\n                          onClick={() => handleDeleteUser(user)}\n                        >\n                          <Trash2 className=\"mr-2 h-4 w-4\" />\n                          Xóa\n                        </DropdownMenuItem>\n                      </DropdownMenuContent>\n                    </DropdownMenu>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n\n          {/* Pagination */}\n          <div className=\"flex items-center justify-between px-6 py-4\">\n            <div className=\"text-sm text-muted-foreground\">\n              Hiển thị {((currentPage - 1) * itemsPerPage) + 1} đến {Math.min(currentPage * itemsPerPage, filteredAndSortedUsers.length)} trong tổng số {filteredAndSortedUsers.length} người dùng\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\n                disabled={currentPage === 1}\n              >\n                Trước\n              </Button>\n              <div className=\"flex items-center space-x-1\">\n                {Array.from({ length: totalPages }, (_, i) => i + 1)\n                  .filter(page => {\n                    const distance = Math.abs(page - currentPage);\n                    return distance === 0 || distance === 1 || page === 1 || page === totalPages;\n                  })\n                  .map((page, index, array) => {\n                    const showEllipsis = index > 0 && array[index - 1] !== page - 1;\n                    return (\n                      <React.Fragment key={page}>\n                        {showEllipsis && <span className=\"px-2\">...</span>}\n                        <Button\n                          variant={currentPage === page ? \"default\" : \"outline\"}\n                          size=\"sm\"\n                          onClick={() => setCurrentPage(page)}\n                        >\n                          {page}\n                        </Button>\n                      </React.Fragment>\n                    );\n                  })}\n              </div>\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\n                disabled={currentPage === totalPages}\n              >\n                Sau\n              </Button>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* View User Dialog */}\n      <Dialog open={isViewDialogOpen} onOpenChange={setIsViewDialogOpen}>\n        <DialogContent className=\"max-w-4xl max-h-[80vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle>Chi tiết người dùng</DialogTitle>\n          </DialogHeader>\n          {selectedUser && (\n            <div className=\"space-y-6\">\n              <div className=\"flex items-center space-x-4\">\n                <Avatar className=\"h-16 w-16\">\n                  <AvatarImage src={selectedUser.avatar} />\n                  <AvatarFallback className=\"text-lg\">\n                    {getInitials(selectedUser.fullName)}\n                  </AvatarFallback>\n                </Avatar>\n                <div>\n                  <h3 className=\"text-xl font-semibold\">{selectedUser.fullName}</h3>\n                  <p className=\"text-muted-foreground\">{selectedUser.email}</p>\n                  <div className=\"flex items-center space-x-2 mt-2\">\n                    <Badge variant={getRoleBadgeVariant(selectedUser.role)}>\n                      {selectedUser.role === 'customer' && 'Khách hàng'}\n                      {selectedUser.role === 'vendor' && 'Nhà bán hàng'}\n                      {selectedUser.role === 'admin' && 'Quản trị viên'}\n                      {selectedUser.role === 'super_admin' && 'Quản trị cấp cao'}\n                    </Badge>\n                    <Badge variant={getStatusBadgeVariant(selectedUser.status)}>\n                      {selectedUser.status === 'active' && 'Hoạt động'}\n                      {selectedUser.status === 'inactive' && 'Không hoạt động'}\n                      {selectedUser.status === 'suspended' && 'Bị tạm khóa'}\n                      {selectedUser.status === 'banned' && 'Bị cấm'}\n                    </Badge>\n                  </div>\n                </div>\n              </div>\n\n              <Separator />\n\n              <Tabs defaultValue=\"info\" className=\"w-full\">\n                <TabsList>\n                  <TabsTrigger value=\"info\">Thông tin cơ bản</TabsTrigger>\n                  <TabsTrigger value=\"stats\">Thống kê</TabsTrigger>\n                  <TabsTrigger value=\"addresses\">Địa chỉ</TabsTrigger>\n                  <TabsTrigger value=\"activity\">Hoạt động</TabsTrigger>\n                </TabsList>\n\n                <TabsContent value=\"info\" className=\"space-y-4\">\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <Label className=\"text-sm font-medium\">Họ tên</Label>\n                      <p className=\"text-sm text-muted-foreground\">{selectedUser.fullName}</p>\n                    </div>\n                    <div>\n                      <Label className=\"text-sm font-medium\">Email</Label>\n                      <p className=\"text-sm text-muted-foreground\">{selectedUser.email}</p>\n                    </div>\n                    <div>\n                      <Label className=\"text-sm font-medium\">Số điện thoại</Label>\n                      <p className=\"text-sm text-muted-foreground\">{selectedUser.phone || 'Chưa cập nhật'}</p>\n                    </div>\n                    <div>\n                      <Label className=\"text-sm font-medium\">Ngày sinh</Label>\n                      <p className=\"text-sm text-muted-foreground\">\n                        {selectedUser.dateOfBirth ? formatDate(selectedUser.dateOfBirth) : 'Chưa cập nhật'}\n                      </p>\n                    </div>\n                    <div>\n                      <Label className=\"text-sm font-medium\">Giới tính</Label>\n                      <p className=\"text-sm text-muted-foreground\">\n                        {selectedUser.gender === 'male' && 'Nam'}\n                        {selectedUser.gender === 'female' && 'Nữ'}\n                        {selectedUser.gender === 'other' && 'Khác'}\n                        {!selectedUser.gender && 'Chưa cập nhật'}\n                      </p>\n                    </div>\n                    <div>\n                      <Label className=\"text-sm font-medium\">Ngày tham gia</Label>\n                      <p className=\"text-sm text-muted-foreground\">{formatDate(selectedUser.createdAt)}</p>\n                    </div>\n                    <div>\n                      <Label className=\"text-sm font-medium\">Lần cuối đăng nhập</Label>\n                      <p className=\"text-sm text-muted-foreground\">\n                        {selectedUser.lastLoginAt ? formatDate(selectedUser.lastLoginAt) : 'Chưa đăng nhập'}\n                      </p>\n                    </div>\n                    <div>\n                      <Label className=\"text-sm font-medium\">Email đã xác thực</Label>\n                      <p className=\"text-sm text-muted-foreground\">\n                        {selectedUser.emailVerified ? (\n                          <span className=\"text-green-600\">✓ Đã xác thực</span>\n                        ) : (\n                          <span className=\"text-red-600\">✗ Chưa xác thực</span>\n                        )}\n                      </p>\n                    </div>\n                  </div>\n                </TabsContent>\n\n                <TabsContent value=\"stats\" className=\"space-y-4\">\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <Card>\n                      <CardHeader className=\"pb-2\">\n                        <CardTitle className=\"text-sm\">Tổng đơn hàng</CardTitle>\n                      </CardHeader>\n                      <CardContent>\n                        <div className=\"text-2xl font-bold\">{selectedUser.stats.totalOrders}</div>\n                      </CardContent>\n                    </Card>\n                    <Card>\n                      <CardHeader className=\"pb-2\">\n                        <CardTitle className=\"text-sm\">Tổng chi tiêu</CardTitle>\n                      </CardHeader>\n                      <CardContent>\n                        <div className=\"text-2xl font-bold\">{formatCurrency(selectedUser.stats.totalSpent)}</div>\n                      </CardContent>\n                    </Card>\n                    <Card>\n                      <CardHeader className=\"pb-2\">\n                        <CardTitle className=\"text-sm\">Điểm tích lũy</CardTitle>\n                      </CardHeader>\n                      <CardContent>\n                        <div className=\"text-2xl font-bold\">{selectedUser.stats.loyaltyPoints}</div>\n                      </CardContent>\n                    </Card>\n                    <Card>\n                      <CardHeader className=\"pb-2\">\n                        <CardTitle className=\"text-sm\">Đánh giá trung bình</CardTitle>\n                      </CardHeader>\n                      <CardContent>\n                        <div className=\"text-2xl font-bold\">{selectedUser.stats.averageRating}/5</div>\n                      </CardContent>\n                    </Card>\n                  </div>\n                </TabsContent>\n\n                <TabsContent value=\"addresses\" className=\"space-y-4\">\n                  {selectedUser.addresses && selectedUser.addresses.length > 0 ? (\n                    <div className=\"space-y-3\">\n                      {selectedUser.addresses.map((address, index) => (\n                        <Card key={index}>\n                          <CardContent className=\"pt-4\">\n                            <div className=\"flex items-start justify-between\">\n                              <div>\n                                <div className=\"font-medium\">{address.fullName}</div>\n                                <div className=\"text-sm text-muted-foreground\">{address.phone}</div>\n                                <div className=\"text-sm text-muted-foreground mt-1\">\n                                  {address.address}, {address.ward}, {address.district}, {address.province}\n                                </div>\n                              </div>\n                              {address.isDefault && (\n                                <Badge variant=\"secondary\">Mặc định</Badge>\n                              )}\n                            </div>\n                          </CardContent>\n                        </Card>\n                      ))}\n                    </div>\n                  ) : (\n                    <div className=\"text-center py-8 text-muted-foreground\">\n                      Chưa có địa chỉ nào\n                    </div>\n                  )}\n                </TabsContent>\n\n                <TabsContent value=\"activity\" className=\"space-y-4\">\n                  <div className=\"text-center py-8 text-muted-foreground\">\n                    Lịch sử hoạt động sẽ được hiển thị ở đây\n                  </div>\n                </TabsContent>\n              </Tabs>\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n\n      {/* Edit User Dialog */}\n      <Dialog open={isEditDialogOpen} onOpenChange={setIsEditDialogOpen}>\n        <DialogContent className=\"max-w-2xl\">\n          <DialogHeader>\n            <DialogTitle>Chỉnh sửa người dùng</DialogTitle>\n          </DialogHeader>\n          {selectedUser && (\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <Label htmlFor=\"edit-name\">Họ tên</Label>\n                  <Input\n                    id=\"edit-name\"\n                    defaultValue={selectedUser.fullName}\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"edit-email\">Email</Label>\n                  <Input\n                    id=\"edit-email\"\n                    type=\"email\"\n                    defaultValue={selectedUser.email}\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"edit-phone\">Số điện thoại</Label>\n                  <Input\n                    id=\"edit-phone\"\n                    defaultValue={selectedUser.phone}\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"edit-role\">Vai trò</Label>\n                  <Select defaultValue={selectedUser.role}>\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"customer\">Khách hàng</SelectItem>\n                      <SelectItem value=\"vendor\">Nhà bán hàng</SelectItem>\n                      <SelectItem value=\"admin\">Quản trị viên</SelectItem>\n                      <SelectItem value=\"super_admin\">Quản trị cấp cao</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n                <div>\n                  <Label htmlFor=\"edit-status\">Trạng thái</Label>\n                  <Select defaultValue={selectedUser.status}>\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"active\">Hoạt động</SelectItem>\n                      <SelectItem value=\"inactive\">Không hoạt động</SelectItem>\n                      <SelectItem value=\"suspended\">Bị tạm khóa</SelectItem>\n                      <SelectItem value=\"banned\">Bị cấm</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n                <div>\n                  <Label htmlFor=\"edit-gender\">Giới tính</Label>\n                  <Select defaultValue={selectedUser.gender}>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Chọn giới tính\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"male\">Nam</SelectItem>\n                      <SelectItem value=\"female\">Nữ</SelectItem>\n                      <SelectItem value=\"other\">Khác</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n              <div>\n                <Label htmlFor=\"edit-notes\">Ghi chú</Label>\n                <Textarea\n                  id=\"edit-notes\"\n                  placeholder=\"Thêm ghi chú về người dùng...\"\n                  rows={3}\n                />\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Switch id=\"email-verified\" defaultChecked={selectedUser.emailVerified} />\n                <Label htmlFor=\"email-verified\">Email đã xác thực</Label>\n              </div>\n            </div>\n          )}\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => setIsEditDialogOpen(false)}>\n              Hủy\n            </Button>\n            <Button onClick={async () => {\n              if (!selectedUser) return;\n              \n              try {\n                setIsLoading(true);\n                \n                // Tích hợp với Supabase để cập nhật thông tin người dùng\n                const { data, error } = await supabase\n                  .from('users')\n                  .update({\n                    first_name: selectedUser.firstName,\n                    last_name: selectedUser.lastName,\n                    phone: selectedUser.phone,\n                    role: selectedUser.role,\n                    status: selectedUser.status,\n                    email_verified: selectedUser.emailVerified,\n                    phone_verified: selectedUser.phoneVerified,\n                    two_factor_enabled: selectedUser.twoFactorEnabled,\n                    notes: selectedUser.notes,\n                    updated_at: new Date().toISOString()\n                  })\n                  .eq('id', selectedUser.id);\n                \n                if (error) {\n                  throw error;\n                }\n                \n                // Cập nhật state local\n                setUsers(prev => prev.map(user => \n                  user.id === selectedUser.id ? selectedUser : user\n                ));\n                \n                toast({\n                  title: \"Thành công\",\n                  description: \"Đã cập nhật thông tin người dùng\"\n                });\n                \n                setIsEditDialogOpen(false);\n              } catch (error: any) {\n                toast({\n                  title: \"Lỗi\",\n                  description: error.message || \"Không thể cập nhật thông tin người dùng\",\n                  variant: \"destructive\"\n                });\n              } finally {\n                setIsLoading(false);\n              }\n            }}>\n              Lưu thay đổi\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* Delete User Dialog */}\n      <Dialog open={isDeleteDialogOpen} onOpenChange={setIsDeleteDialogOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Xác nhận xóa</DialogTitle>\n            <DialogDescription>\n              Bạn có chắc chắn muốn xóa người dùng này? Hành động này không thể hoàn tác.\n            </DialogDescription>\n          </DialogHeader>\n          {selectedUser && (\n            <div className=\"py-4\">\n              <div className=\"flex items-center space-x-3\">\n                <Avatar className=\"h-10 w-10\">\n                  <AvatarImage src={selectedUser.avatar} />\n                  <AvatarFallback>{getInitials(selectedUser.fullName)}</AvatarFallback>\n                </Avatar>\n                <div>\n                  <div className=\"font-medium\">{selectedUser.fullName}</div>\n                  <div className=\"text-sm text-muted-foreground\">{selectedUser.email}</div>\n                </div>\n              </div>\n            </div>\n          )}\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => setIsDeleteDialogOpen(false)}>\n              Hủy\n            </Button>\n            <Button variant=\"destructive\" onClick={() => {\n               if (selectedUser) {\n                 handleDeleteUser(selectedUser.id);\n               }\n               setIsDeleteDialogOpen(false);\n             }}>\n               Xóa\n             </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* Bulk Actions Dialog */}\n      <Dialog open={isBulkActionDialogOpen} onOpenChange={setIsBulkActionDialogOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Thao tác hàng loạt</DialogTitle>\n            <DialogDescription>\n              Áp dụng thao tác cho {selectedUsers.length} người dùng đã chọn\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <div>\n              <Label>Chọn thao tác</Label>\n              <Select value={bulkAction} onValueChange={setBulkAction}>\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Chọn thao tác\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"activate\">Kích hoạt</SelectItem>\n                  <SelectItem value=\"deactivate\">Vô hiệu hóa</SelectItem>\n                  <SelectItem value=\"suspend\">Tạm khóa</SelectItem>\n                  <SelectItem value=\"delete\">Xóa</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => setIsBulkActionDialogOpen(false)}>\n              Hủy\n            </Button>\n            <Button \n              onClick={handleBulkAction}\n              variant={bulkAction === 'delete' ? 'destructive' : 'default'}\n            >\n              Áp dụng\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* Export Dialog */}\n      <Dialog open={isExportDialogOpen} onOpenChange={setIsExportDialogOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Xuất dữ liệu người dùng</DialogTitle>\n            <DialogDescription>\n              Chọn định dạng và các trường dữ liệu muốn xuất\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <div>\n              <Label>Định dạng</Label>\n              <Select value={exportFormat} onValueChange={setExportFormat}>\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"csv\">CSV</SelectItem>\n                  <SelectItem value=\"excel\">Excel</SelectItem>\n                  <SelectItem value=\"json\">JSON</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n            <div>\n              <Label>Phạm vi dữ liệu</Label>\n              <Select value={exportRange} onValueChange={setExportRange}>\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">Tất cả người dùng</SelectItem>\n                  <SelectItem value=\"filtered\">Người dùng đã lọc</SelectItem>\n                  <SelectItem value=\"selected\">Người dùng đã chọn</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => setIsExportDialogOpen(false)}>\n              Hủy\n            </Button>\n            <Button onClick={() => {\n              handleExport(exportFormat);\n              setIsExportDialogOpen(false);\n            }}>\n              Xuất dữ liệu\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default UserManagement;","import React, { useState, useEffect } from 'react';\nimport { \n  ShoppingBag, \n  Search, \n  Filter, \n  Eye, \n  Edit, \n  Truck, \n  Package, \n  CheckCircle, \n  XCircle, \n  Clock, \n  AlertTriangle,\n  MoreHorizontal,\n  Download,\n  RefreshCw,\n  MapPin,\n  Phone,\n  Mail,\n  CreditCard,\n  Banknote,\n  Calendar,\n  User,\n  Hash,\n  DollarSign\n} from 'lucide-react';\nimport { Button } from '../ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../ui/card';\nimport { Input } from '../ui/input';\nimport { Label } from '../ui/label';\nimport { Badge } from '../ui/badge';\nimport { Alert, AlertDescription } from '../ui/alert';\nimport { useToast } from '../ui/use-toast';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '../ui/table';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from '../ui/dropdown-menu';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '../ui/dialog';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '../ui/select';\nimport { Textarea } from '../ui/textarea';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '../ui/tabs';\nimport { Separator } from '../ui/separator';\n\ninterface OrderItem {\n  id: string;\n  productId: string;\n  productName: string;\n  productImage?: string;\n  sku: string;\n  variantId?: string;\n  variantName?: string;\n  quantity: number;\n  price: number;\n  total: number;\n}\n\ninterface ShippingAddress {\n  fullName: string;\n  phone: string;\n  email?: string;\n  address: string;\n  ward: string;\n  district: string;\n  province: string;\n  postalCode?: string;\n  isDefault: boolean;\n}\n\ninterface Order {\n  id: string;\n  orderNumber: string;\n  customerId: string;\n  customerName: string;\n  customerEmail: string;\n  customerPhone: string;\n  items: OrderItem[];\n  subtotal: number;\n  shippingFee: number;\n  tax: number;\n  discount: number;\n  total: number;\n  currency: string;\n  status: 'pending' | 'confirmed' | 'processing' | 'shipped' | 'delivered' | 'cancelled' | 'refunded';\n  paymentStatus: 'pending' | 'paid' | 'failed' | 'refunded' | 'partially_refunded';\n  paymentMethod: 'cod' | 'bank_transfer' | 'credit_card' | 'e_wallet' | 'installment';\n  shippingAddress: ShippingAddress;\n  billingAddress?: ShippingAddress;\n  shippingMethod: string;\n  trackingNumber?: string;\n  notes?: string;\n  adminNotes?: string;\n  couponCode?: string;\n  refundAmount?: number;\n  refundReason?: string;\n  createdAt: string;\n  updatedAt: string;\n  confirmedAt?: string;\n  shippedAt?: string;\n  deliveredAt?: string;\n  cancelledAt?: string;\n  timeline: OrderTimeline[];\n}\n\ninterface OrderTimeline {\n  id: string;\n  status: string;\n  description: string;\n  createdAt: string;\n  createdBy?: string;\n}\n\ninterface OrderManagementProps {\n  onOrderSelect?: (order: Order) => void;\n}\n\nconst OrderManagement: React.FC<OrderManagementProps> = ({ onOrderSelect }) => {\n  const { toast } = useToast();\n  \n  const [orders, setOrders] = useState<Order[]>([]);\n  const [filteredOrders, setFilteredOrders] = useState<Order[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  \n  // Filters and search\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState<string>('all');\n  const [paymentStatusFilter, setPaymentStatusFilter] = useState<string>('all');\n  const [paymentMethodFilter, setPaymentMethodFilter] = useState<string>('all');\n  const [dateRange, setDateRange] = useState<string>('all');\n  const [sortBy, setSortBy] = useState<string>('createdAt');\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc');\n  \n  // Pagination\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n  \n  // Dialogs\n  const [isDetailDialogOpen, setIsDetailDialogOpen] = useState(false);\n  const [isUpdateStatusDialogOpen, setIsUpdateStatusDialogOpen] = useState(false);\n  const [selectedOrder, setSelectedOrder] = useState<Order | null>(null);\n  const [newStatus, setNewStatus] = useState<string>('');\n  const [statusNote, setStatusNote] = useState('');\n\n  useEffect(() => {\n    loadOrders();\n  }, []);\n\n  useEffect(() => {\n    filterAndSortOrders();\n  }, [orders, searchTerm, statusFilter, paymentStatusFilter, paymentMethodFilter, dateRange, sortBy, sortOrder]);\n\n  const loadOrders = async () => {\n    try {\n      setIsLoading(true);\n      const response = await fetch('/api/admin/orders', {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      \n      if (response.ok) {\n        const data = await response.json();\n        setOrders(data.orders || []);\n      } else {\n        setError('Không thể tải danh sách đơn hàng');\n      }\n    } catch (err) {\n      setError('Lỗi kết nối server');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const filterAndSortOrders = () => {\n    let filtered = [...orders];\n\n    // Search filter\n    if (searchTerm) {\n      filtered = filtered.filter(order => \n        order.orderNumber.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        order.customerName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        order.customerEmail.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        order.customerPhone.includes(searchTerm) ||\n        order.trackingNumber?.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n\n    // Status filter\n    if (statusFilter !== 'all') {\n      filtered = filtered.filter(order => order.status === statusFilter);\n    }\n\n    // Payment status filter\n    if (paymentStatusFilter !== 'all') {\n      filtered = filtered.filter(order => order.paymentStatus === paymentStatusFilter);\n    }\n\n    // Payment method filter\n    if (paymentMethodFilter !== 'all') {\n      filtered = filtered.filter(order => order.paymentMethod === paymentMethodFilter);\n    }\n\n    // Date range filter\n    if (dateRange !== 'all') {\n      const now = new Date();\n      const startDate = new Date();\n      \n      switch (dateRange) {\n        case 'today':\n          startDate.setHours(0, 0, 0, 0);\n          break;\n        case 'week':\n          startDate.setDate(now.getDate() - 7);\n          break;\n        case 'month':\n          startDate.setMonth(now.getMonth() - 1);\n          break;\n        case 'quarter':\n          startDate.setMonth(now.getMonth() - 3);\n          break;\n      }\n      \n      filtered = filtered.filter(order => \n        new Date(order.createdAt) >= startDate\n      );\n    }\n\n    // Sort\n    filtered.sort((a, b) => {\n      let aValue: any = a[sortBy as keyof Order];\n      let bValue: any = b[sortBy as keyof Order];\n\n      if (sortBy === 'total') {\n        aValue = a.total;\n        bValue = b.total;\n      } else if (sortBy === 'customerName') {\n        aValue = a.customerName;\n        bValue = b.customerName;\n      }\n\n      if (typeof aValue === 'string') {\n        return sortOrder === 'asc' \n          ? aValue.localeCompare(bValue)\n          : bValue.localeCompare(aValue);\n      }\n\n      return sortOrder === 'asc' ? aValue - bValue : bValue - aValue;\n    });\n\n    setFilteredOrders(filtered);\n  };\n\n  const handleUpdateOrderStatus = async () => {\n    if (!selectedOrder || !newStatus) return;\n\n    try {\n      const response = await fetch(`/api/admin/orders/${selectedOrder.id}/status`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n        },\n        body: JSON.stringify({ \n          status: newStatus,\n          note: statusNote \n        }),\n      });\n\n      if (response.ok) {\n        toast({\n          title: 'Thành công!',\n          description: 'Trạng thái đơn hàng đã được cập nhật.',\n        });\n        setIsUpdateStatusDialogOpen(false);\n        setSelectedOrder(null);\n        setNewStatus('');\n        setStatusNote('');\n        loadOrders();\n      } else {\n        const data = await response.json();\n        setError(data.message || 'Không thể cập nhật trạng thái đơn hàng');\n      }\n    } catch (err) {\n      setError('Lỗi kết nối server');\n    }\n  };\n\n  const handleExportOrders = async () => {\n    try {\n      const response = await fetch('/api/admin/orders/export', {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      \n      if (response.ok) {\n        const blob = await response.blob();\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = `orders-${new Date().toISOString().split('T')[0]}.xlsx`;\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n        \n        toast({\n          title: 'Thành công!',\n          description: 'Đã xuất danh sách đơn hàng.',\n        });\n      }\n    } catch (err) {\n      setError('Lỗi khi xuất file');\n    }\n  };\n\n  const openDetailDialog = (order: Order) => {\n    setSelectedOrder(order);\n    setIsDetailDialogOpen(true);\n  };\n\n  const openUpdateStatusDialog = (order: Order) => {\n    setSelectedOrder(order);\n    setNewStatus(order.status);\n    setIsUpdateStatusDialogOpen(true);\n  };\n\n  const getStatusBadge = (status: Order['status']) => {\n    switch (status) {\n      case 'pending':\n        return <Badge className=\"bg-yellow-100 text-yellow-800\">Chờ xác nhận</Badge>;\n      case 'confirmed':\n        return <Badge className=\"bg-blue-100 text-blue-800\">Đã xác nhận</Badge>;\n      case 'processing':\n        return <Badge className=\"bg-purple-100 text-purple-800\">Đang xử lý</Badge>;\n      case 'shipped':\n        return <Badge className=\"bg-indigo-100 text-indigo-800\">Đã giao vận</Badge>;\n      case 'delivered':\n        return <Badge className=\"bg-green-100 text-green-800\">Đã giao</Badge>;\n      case 'cancelled':\n        return <Badge className=\"bg-red-100 text-red-800\">Đã hủy</Badge>;\n      case 'refunded':\n        return <Badge className=\"bg-gray-100 text-gray-800\">Đã hoàn tiền</Badge>;\n      default:\n        return <Badge>{status}</Badge>;\n    }\n  };\n\n  const getPaymentStatusBadge = (status: Order['paymentStatus']) => {\n    switch (status) {\n      case 'pending':\n        return <Badge variant=\"outline\" className=\"text-yellow-600 border-yellow-600\">Chờ thanh toán</Badge>;\n      case 'paid':\n        return <Badge variant=\"outline\" className=\"text-green-600 border-green-600\">Đã thanh toán</Badge>;\n      case 'failed':\n        return <Badge variant=\"outline\" className=\"text-red-600 border-red-600\">Thất bại</Badge>;\n      case 'refunded':\n        return <Badge variant=\"outline\" className=\"text-gray-600 border-gray-600\">Đã hoàn tiền</Badge>;\n      case 'partially_refunded':\n        return <Badge variant=\"outline\" className=\"text-orange-600 border-orange-600\">Hoàn một phần</Badge>;\n      default:\n        return <Badge variant=\"outline\">{status}</Badge>;\n    }\n  };\n\n  const getPaymentMethodLabel = (method: Order['paymentMethod']) => {\n    switch (method) {\n      case 'cod':\n        return 'Thanh toán khi nhận hàng';\n      case 'bank_transfer':\n        return 'Chuyển khoản ngân hàng';\n      case 'credit_card':\n        return 'Thẻ tín dụng';\n      case 'e_wallet':\n        return 'Ví điện tử';\n      case 'installment':\n        return 'Trả góp';\n      default:\n        return method;\n    }\n  };\n\n  const formatPrice = (price: number) => {\n    return new Intl.NumberFormat('vi-VN', {\n      style: 'currency',\n      currency: 'VND'\n    }).format(price);\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('vi-VN', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // Pagination\n  const totalPages = Math.ceil(filteredOrders.length / itemsPerPage);\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const currentOrders = filteredOrders.slice(startIndex, endIndex);\n\n  // Statistics\n  const stats = {\n    total: filteredOrders.length,\n    pending: filteredOrders.filter(o => o.status === 'pending').length,\n    processing: filteredOrders.filter(o => o.status === 'processing').length,\n    shipped: filteredOrders.filter(o => o.status === 'shipped').length,\n    delivered: filteredOrders.filter(o => o.status === 'delivered').length,\n    cancelled: filteredOrders.filter(o => o.status === 'cancelled').length,\n    totalRevenue: filteredOrders\n      .filter(o => o.paymentStatus === 'paid')\n      .reduce((sum, o) => sum + o.total, 0)\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center p-8\">\n        <div className=\"w-8 h-8 border-2 border-blue-600 border-t-transparent rounded-full animate-spin\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-2xl font-bold\">Quản lý đơn hàng</h2>\n          <p className=\"text-gray-600\">Theo dõi và xử lý tất cả đơn hàng</p>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <Button variant=\"outline\" size=\"sm\" onClick={loadOrders}>\n            <RefreshCw className=\"h-4 w-4 mr-2\" />\n            Làm mới\n          </Button>\n          <Button variant=\"outline\" size=\"sm\" onClick={handleExportOrders}>\n            <Download className=\"h-4 w-4 mr-2\" />\n            Xuất Excel\n          </Button>\n        </div>\n      </div>\n\n      {error && (\n        <Alert variant=\"destructive\">\n          <AlertTriangle className=\"h-4 w-4\" />\n          <AlertDescription>{error}</AlertDescription>\n        </Alert>\n      )}\n\n      {/* Statistics */}\n      <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-7 gap-4\">\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold\">{stats.total}</div>\n            <div className=\"text-sm text-gray-600\">Tổng đơn hàng</div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold text-yellow-600\">{stats.pending}</div>\n            <div className=\"text-sm text-gray-600\">Chờ xác nhận</div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold text-purple-600\">{stats.processing}</div>\n            <div className=\"text-sm text-gray-600\">Đang xử lý</div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold text-indigo-600\">{stats.shipped}</div>\n            <div className=\"text-sm text-gray-600\">Đã giao vận</div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold text-green-600\">{stats.delivered}</div>\n            <div className=\"text-sm text-gray-600\">Đã giao</div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold text-red-600\">{stats.cancelled}</div>\n            <div className=\"text-sm text-gray-600\">Đã hủy</div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-lg font-bold text-green-600\">{formatPrice(stats.totalRevenue)}</div>\n            <div className=\"text-sm text-gray-600\">Doanh thu</div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Filters */}\n      <Card>\n        <CardContent className=\"pt-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-6 gap-4\">\n            <div className=\"space-y-2\">\n              <Label>Tìm kiếm</Label>\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n                <Input\n                  placeholder=\"Mã đơn, khách hàng...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"pl-10\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"space-y-2\">\n              <Label>Trạng thái đơn hàng</Label>\n              <Select value={statusFilter} onValueChange={setStatusFilter}>\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">Tất cả</SelectItem>\n                  <SelectItem value=\"pending\">Chờ xác nhận</SelectItem>\n                  <SelectItem value=\"confirmed\">Đã xác nhận</SelectItem>\n                  <SelectItem value=\"processing\">Đang xử lý</SelectItem>\n                  <SelectItem value=\"shipped\">Đã giao vận</SelectItem>\n                  <SelectItem value=\"delivered\">Đã giao</SelectItem>\n                  <SelectItem value=\"cancelled\">Đã hủy</SelectItem>\n                  <SelectItem value=\"refunded\">Đã hoàn tiền</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n            \n            <div className=\"space-y-2\">\n              <Label>Thanh toán</Label>\n              <Select value={paymentStatusFilter} onValueChange={setPaymentStatusFilter}>\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">Tất cả</SelectItem>\n                  <SelectItem value=\"pending\">Chờ thanh toán</SelectItem>\n                  <SelectItem value=\"paid\">Đã thanh toán</SelectItem>\n                  <SelectItem value=\"failed\">Thất bại</SelectItem>\n                  <SelectItem value=\"refunded\">Đã hoàn tiền</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n            \n            <div className=\"space-y-2\">\n              <Label>Phương thức</Label>\n              <Select value={paymentMethodFilter} onValueChange={setPaymentMethodFilter}>\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">Tất cả</SelectItem>\n                  <SelectItem value=\"cod\">COD</SelectItem>\n                  <SelectItem value=\"bank_transfer\">Chuyển khoản</SelectItem>\n                  <SelectItem value=\"credit_card\">Thẻ tín dụng</SelectItem>\n                  <SelectItem value=\"e_wallet\">Ví điện tử</SelectItem>\n                  <SelectItem value=\"installment\">Trả góp</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n            \n            <div className=\"space-y-2\">\n              <Label>Thời gian</Label>\n              <Select value={dateRange} onValueChange={setDateRange}>\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">Tất cả</SelectItem>\n                  <SelectItem value=\"today\">Hôm nay</SelectItem>\n                  <SelectItem value=\"week\">7 ngày qua</SelectItem>\n                  <SelectItem value=\"month\">30 ngày qua</SelectItem>\n                  <SelectItem value=\"quarter\">3 tháng qua</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n            \n            <div className=\"space-y-2\">\n              <Label>Sắp xếp</Label>\n              <Select value={`${sortBy}-${sortOrder}`} onValueChange={(value) => {\n                const [field, order] = value.split('-');\n                setSortBy(field);\n                setSortOrder(order as 'asc' | 'desc');\n              }}>\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"createdAt-desc\">Mới nhất</SelectItem>\n                  <SelectItem value=\"createdAt-asc\">Cũ nhất</SelectItem>\n                  <SelectItem value=\"total-desc\">Giá trị cao nhất</SelectItem>\n                  <SelectItem value=\"total-asc\">Giá trị thấp nhất</SelectItem>\n                  <SelectItem value=\"customerName-asc\">Khách hàng A-Z</SelectItem>\n                  <SelectItem value=\"customerName-desc\">Khách hàng Z-A</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Orders Table */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <CardTitle>Danh sách đơn hàng ({filteredOrders.length})</CardTitle>\n            <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\n              <span>Hiển thị {startIndex + 1}-{Math.min(endIndex, filteredOrders.length)} của {filteredOrders.length}</span>\n            </div>\n          </div>\n        </CardHeader>\n        \n        <CardContent>\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead>Đơn hàng</TableHead>\n                <TableHead>Khách hàng</TableHead>\n                <TableHead>Sản phẩm</TableHead>\n                <TableHead>Tổng tiền</TableHead>\n                <TableHead>Thanh toán</TableHead>\n                <TableHead>Trạng thái</TableHead>\n                <TableHead>Ngày tạo</TableHead>\n                <TableHead className=\"text-right\">Thao tác</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {currentOrders.map((order) => (\n                <TableRow key={order.id} className=\"hover:bg-gray-50\">\n                  <TableCell>\n                    <div>\n                      <div className=\"font-medium\">{order.orderNumber}</div>\n                      {order.trackingNumber && (\n                        <div className=\"text-sm text-gray-600 flex items-center\">\n                          <Truck className=\"h-3 w-3 mr-1\" />\n                          {order.trackingNumber}\n                        </div>\n                      )}\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <div>\n                      <div className=\"font-medium\">{order.customerName}</div>\n                      <div className=\"text-sm text-gray-600\">{order.customerEmail}</div>\n                      <div className=\"text-sm text-gray-600\">{order.customerPhone}</div>\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"text-sm\">\n                      {order.items.length} sản phẩm\n                      <div className=\"text-gray-600\">\n                        {order.items.slice(0, 2).map(item => item.productName).join(', ')}\n                        {order.items.length > 2 && '...'}\n                      </div>\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"font-medium\">{formatPrice(order.total)}</div>\n                    <div className=\"text-sm text-gray-600\">\n                      {getPaymentMethodLabel(order.paymentMethod)}\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"space-y-1\">\n                      {getPaymentStatusBadge(order.paymentStatus)}\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"space-y-1\">\n                      {getStatusBadge(order.status)}\n                    </div>\n                  </TableCell>\n                  <TableCell className=\"text-sm text-gray-600\">\n                    {formatDate(order.createdAt)}\n                  </TableCell>\n                  <TableCell className=\"text-right\">\n                    <DropdownMenu>\n                      <DropdownMenuTrigger asChild>\n                        <Button variant=\"ghost\" size=\"sm\">\n                          <MoreHorizontal className=\"h-4 w-4\" />\n                        </Button>\n                      </DropdownMenuTrigger>\n                      <DropdownMenuContent align=\"end\">\n                        <DropdownMenuLabel>Thao tác</DropdownMenuLabel>\n                        <DropdownMenuSeparator />\n                        <DropdownMenuItem onClick={() => openDetailDialog(order)}>\n                          <Eye className=\"h-4 w-4 mr-2\" />\n                          Xem chi tiết\n                        </DropdownMenuItem>\n                        <DropdownMenuItem onClick={() => openUpdateStatusDialog(order)}>\n                          <Edit className=\"h-4 w-4 mr-2\" />\n                          Cập nhật trạng thái\n                        </DropdownMenuItem>\n                        <DropdownMenuSeparator />\n                        <DropdownMenuItem onClick={() => {\n                          // Print order\n                          window.open(`/admin/orders/${order.id}/print`, '_blank');\n                        }}>\n                          <Package className=\"h-4 w-4 mr-2\" />\n                          In đơn hàng\n                        </DropdownMenuItem>\n                        <DropdownMenuItem onClick={() => {\n                          // Print shipping label\n                          window.open(`/admin/orders/${order.id}/shipping-label`, '_blank');\n                        }}>\n                          <Truck className=\"h-4 w-4 mr-2\" />\n                          In phiếu giao hàng\n                        </DropdownMenuItem>\n                      </DropdownMenuContent>\n                    </DropdownMenu>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          \n          {/* Pagination */}\n          {totalPages > 1 && (\n            <div className=\"flex items-center justify-between mt-4\">\n              <div className=\"text-sm text-gray-600\">\n                Trang {currentPage} của {totalPages}\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => setCurrentPage(prev => Math.max(1, prev - 1))}\n                  disabled={currentPage === 1}\n                >\n                  Trước\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => setCurrentPage(prev => Math.min(totalPages, prev + 1))}\n                  disabled={currentPage === totalPages}\n                >\n                  Sau\n                </Button>\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Order Detail Dialog */}\n      <Dialog open={isDetailDialogOpen} onOpenChange={setIsDetailDialogOpen}>\n        <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle>Chi tiết đơn hàng {selectedOrder?.orderNumber}</DialogTitle>\n            <DialogDescription>\n              Thông tin chi tiết về đơn hàng\n            </DialogDescription>\n          </DialogHeader>\n          \n          {selectedOrder && (\n            <OrderDetailView order={selectedOrder} />\n          )}\n        </DialogContent>\n      </Dialog>\n\n      {/* Update Status Dialog */}\n      <Dialog open={isUpdateStatusDialogOpen} onOpenChange={setIsUpdateStatusDialogOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Cập nhật trạng thái đơn hàng</DialogTitle>\n            <DialogDescription>\n              Thay đổi trạng thái cho đơn hàng {selectedOrder?.orderNumber}\n            </DialogDescription>\n          </DialogHeader>\n          \n          <div className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label>Trạng thái mới</Label>\n              <Select value={newStatus} onValueChange={setNewStatus}>\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"pending\">Chờ xác nhận</SelectItem>\n                  <SelectItem value=\"confirmed\">Đã xác nhận</SelectItem>\n                  <SelectItem value=\"processing\">Đang xử lý</SelectItem>\n                  <SelectItem value=\"shipped\">Đã giao vận</SelectItem>\n                  <SelectItem value=\"delivered\">Đã giao</SelectItem>\n                  <SelectItem value=\"cancelled\">Đã hủy</SelectItem>\n                  <SelectItem value=\"refunded\">Đã hoàn tiền</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n            \n            <div className=\"space-y-2\">\n              <Label>Ghi chú (tùy chọn)</Label>\n              <Textarea\n                value={statusNote}\n                onChange={(e) => setStatusNote(e.target.value)}\n                placeholder=\"Thêm ghi chú về việc thay đổi trạng thái...\"\n                rows={3}\n              />\n            </div>\n          </div>\n          \n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => setIsUpdateStatusDialogOpen(false)}>\n              Hủy\n            </Button>\n            <Button onClick={handleUpdateOrderStatus}>\n              Cập nhật\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\n// Order Detail View Component\ninterface OrderDetailViewProps {\n  order: Order;\n}\n\nconst OrderDetailView: React.FC<OrderDetailViewProps> = ({ order }) => {\n  const formatPrice = (price: number) => {\n    return new Intl.NumberFormat('vi-VN', {\n      style: 'currency',\n      currency: 'VND'\n    }).format(price);\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('vi-VN', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  return (\n    <Tabs defaultValue=\"overview\" className=\"w-full\">\n      <TabsList className=\"grid w-full grid-cols-4\">\n        <TabsTrigger value=\"overview\">Tổng quan</TabsTrigger>\n        <TabsTrigger value=\"items\">Sản phẩm</TabsTrigger>\n        <TabsTrigger value=\"customer\">Khách hàng</TabsTrigger>\n        <TabsTrigger value=\"timeline\">Lịch sử</TabsTrigger>\n      </TabsList>\n      \n      <TabsContent value=\"overview\" className=\"space-y-4\">\n        <div className=\"grid grid-cols-2 gap-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg\">Thông tin đơn hàng</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-3\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Mã đơn hàng:</span>\n                <span className=\"font-medium\">{order.orderNumber}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Trạng thái:</span>\n                <div>{/* getStatusBadge(order.status) */}</div>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Thanh toán:</span>\n                <div>{/* getPaymentStatusBadge(order.paymentStatus) */}</div>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Phương thức:</span>\n                <span>{/* getPaymentMethodLabel(order.paymentMethod) */}</span>\n              </div>\n              {order.trackingNumber && (\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Mã vận đơn:</span>\n                  <span className=\"font-medium\">{order.trackingNumber}</span>\n                </div>\n              )}\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Ngày tạo:</span>\n                <span>{formatDate(order.createdAt)}</span>\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg\">Tổng tiền</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-3\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Tạm tính:</span>\n                <span>{formatPrice(order.subtotal)}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Phí vận chuyển:</span>\n                <span>{formatPrice(order.shippingFee)}</span>\n              </div>\n              {order.discount > 0 && (\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Giảm giá:</span>\n                  <span className=\"text-red-600\">-{formatPrice(order.discount)}</span>\n                </div>\n              )}\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Thuế:</span>\n                <span>{formatPrice(order.tax)}</span>\n              </div>\n              <Separator />\n              <div className=\"flex justify-between font-bold text-lg\">\n                <span>Tổng cộng:</span>\n                <span>{formatPrice(order.total)}</span>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n        \n        {order.notes && (\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg\">Ghi chú đơn hàng</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-gray-700\">{order.notes}</p>\n            </CardContent>\n          </Card>\n        )}\n        \n        {order.adminNotes && (\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg\">Ghi chú nội bộ</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-gray-700\">{order.adminNotes}</p>\n            </CardContent>\n          </Card>\n        )}\n      </TabsContent>\n      \n      <TabsContent value=\"items\" className=\"space-y-4\">\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-lg\">Danh sách sản phẩm</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Sản phẩm</TableHead>\n                  <TableHead>SKU</TableHead>\n                  <TableHead>Số lượng</TableHead>\n                  <TableHead>Đơn giá</TableHead>\n                  <TableHead>Thành tiền</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {order.items.map((item) => (\n                  <TableRow key={item.id}>\n                    <TableCell>\n                      <div className=\"flex items-center space-x-3\">\n                        {item.productImage && (\n                          <img \n                            src={item.productImage} \n                            alt={item.productName}\n                            className=\"w-12 h-12 object-cover rounded\"\n                          />\n                        )}\n                        <div>\n                          <div className=\"font-medium\">{item.productName}</div>\n                          {item.variantName && (\n                            <div className=\"text-sm text-gray-600\">{item.variantName}</div>\n                          )}\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell className=\"font-mono text-sm\">{item.sku}</TableCell>\n                    <TableCell>{item.quantity}</TableCell>\n                    <TableCell>{formatPrice(item.price)}</TableCell>\n                    <TableCell className=\"font-medium\">{formatPrice(item.total)}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </CardContent>\n        </Card>\n      </TabsContent>\n      \n      <TabsContent value=\"customer\" className=\"space-y-4\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg flex items-center\">\n                <User className=\"h-5 w-5 mr-2\" />\n                Thông tin khách hàng\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-3\">\n              <div className=\"flex items-center space-x-2\">\n                <User className=\"h-4 w-4 text-gray-400\" />\n                <span>{order.customerName}</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Mail className=\"h-4 w-4 text-gray-400\" />\n                <span>{order.customerEmail}</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Phone className=\"h-4 w-4 text-gray-400\" />\n                <span>{order.customerPhone}</span>\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg flex items-center\">\n                <MapPin className=\"h-5 w-5 mr-2\" />\n                Địa chỉ giao hàng\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-2\">\n              <div className=\"font-medium\">{order.shippingAddress.fullName}</div>\n              <div className=\"text-gray-600\">{order.shippingAddress.phone}</div>\n              <div className=\"text-gray-700\">\n                {order.shippingAddress.address}<br />\n                {order.shippingAddress.ward}, {order.shippingAddress.district}<br />\n                {order.shippingAddress.province}\n                {order.shippingAddress.postalCode && ` ${order.shippingAddress.postalCode}`}\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </TabsContent>\n      \n      <TabsContent value=\"timeline\" className=\"space-y-4\">\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-lg\">Lịch sử đơn hàng</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {order.timeline.map((event, index) => (\n                <div key={event.id} className=\"flex items-start space-x-3\">\n                  <div className=\"flex-shrink-0\">\n                    <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center\">\n                      <Clock className=\"h-4 w-4 text-blue-600\" />\n                    </div>\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"font-medium\">{event.status}</div>\n                    <div className=\"text-gray-600\">{event.description}</div>\n                    <div className=\"text-sm text-gray-500\">\n                      {formatDate(event.createdAt)}\n                      {event.createdBy && ` • ${event.createdBy}`}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      </TabsContent>\n    </Tabs>\n  );\n};\n\nexport default OrderManagement;\n\n// Hook để sử dụng order management\nexport const useOrderManagement = () => {\n  const { toast } = useToast();\n  \n  const updateOrderStatus = async (orderId: string, status: string, note?: string): Promise<Order> => {\n    const response = await fetch(`/api/admin/orders/${orderId}/status`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\n      },\n      body: JSON.stringify({ status, note }),\n    });\n    \n    const data = await response.json();\n    \n    if (!response.ok) {\n      throw new Error(data.message || 'Update order status failed');\n    }\n    \n    return data.order;\n  };\n  \n  const cancelOrder = async (orderId: string, reason: string): Promise<Order> => {\n    const response = await fetch(`/api/admin/orders/${orderId}/cancel`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\n      },\n      body: JSON.stringify({ reason }),\n    });\n    \n    const data = await response.json();\n    \n    if (!response.ok) {\n      throw new Error(data.message || 'Cancel order failed');\n    }\n    \n    return data.order;\n  };\n  \n  const refundOrder = async (orderId: string, amount: number, reason: string): Promise<Order> => {\n    const response = await fetch(`/api/admin/orders/${orderId}/refund`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\n      },\n      body: JSON.stringify({ amount, reason }),\n    });\n    \n    const data = await response.json();\n    \n    if (!response.ok) {\n      throw new Error(data.message || 'Refund order failed');\n    }\n    \n    return data.order;\n  };\n  \n  return {\n    updateOrderStatus,\n    cancelOrder,\n    refundOrder,\n  };\n};","import React from 'react';\nimport { Label } from '../ui/label';\nimport { Input } from '../ui/input';\nimport { Textarea } from '../ui/textarea';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../ui/select';\nimport { Switch } from '../ui/switch';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '../ui/tabs';\n\ninterface Product {\n  id?: string;\n  name: string;\n  description?: string;\n  price: number;\n  comparePrice?: number;\n  cost?: number;\n  sku: string;\n  category: string;\n  brand?: string;\n  status: 'active' | 'draft' | 'archived';\n  visibility: 'visible' | 'hidden';\n  featured: boolean;\n  shippingRequired: boolean;\n  taxable: boolean;\n  tags: string[];\n  images: string[];\n  variants: any[];\n  inventory: {\n    quantity: number;\n    lowStockThreshold: number;\n    trackQuantity: boolean;\n  };\n  weight?: number;\n  barcode?: string;\n  dimensions?: {\n    length?: number;\n    width?: number;\n    height?: number;\n  };\n  seo: {\n    title?: string;\n    description?: string;\n    keywords?: string;\n  };\n  createdAt?: string;\n  updatedAt?: string;\n}\n\ninterface ProductFormProps {\n  formData: Partial<Product>;\n  setFormData: (data: Partial<Product>) => void;\n  categories: string[];\n  isEdit: boolean;\n}\n\nconst ProductForm: React.FC<ProductFormProps> = ({ formData, setFormData, categories, isEdit }) => {\n  const updateFormData = (field: string, value: any) => {\n    setFormData({ ...formData, [field]: value });\n  };\n\n  const updateNestedFormData = (parent: string, field: string, value: any) => {\n    setFormData({\n      ...formData,\n      [parent]: {\n        ...formData[parent as keyof Product],\n        [field]: value\n      }\n    });\n  };\n\n  return (\n    <Tabs defaultValue=\"basic\" className=\"w-full\">\n      <TabsList className=\"grid w-full grid-cols-4\">\n        <TabsTrigger value=\"basic\">Cơ bản</TabsTrigger>\n        <TabsTrigger value=\"inventory\">Kho hàng</TabsTrigger>\n        <TabsTrigger value=\"seo\">SEO</TabsTrigger>\n        <TabsTrigger value=\"advanced\">Nâng cao</TabsTrigger>\n      </TabsList>\n      \n      <TabsContent value=\"basic\" className=\"space-y-4\">\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"name\">Tên sản phẩm *</Label>\n            <Input\n              id=\"name\"\n              value={formData.name || ''}\n              onChange={(e) => updateFormData('name', e.target.value)}\n              placeholder=\"Nhập tên sản phẩm\"\n            />\n          </div>\n          \n          <div className=\"space-y-2\">\n            <Label htmlFor=\"sku\">SKU *</Label>\n            <Input\n              id=\"sku\"\n              value={formData.sku || ''}\n              onChange={(e) => updateFormData('sku', e.target.value)}\n              placeholder=\"Mã sản phẩm\"\n            />\n          </div>\n        </div>\n        \n        <div className=\"space-y-2\">\n          <Label htmlFor=\"description\">Mô tả</Label>\n          <Textarea\n            id=\"description\"\n            value={formData.description || ''}\n            onChange={(e) => updateFormData('description', e.target.value)}\n            placeholder=\"Mô tả sản phẩm\"\n            rows={4}\n          />\n        </div>\n        \n        <div className=\"grid grid-cols-3 gap-4\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"price\">Giá bán *</Label>\n            <Input\n              id=\"price\"\n              type=\"number\"\n              value={formData.price || 0}\n              onChange={(e) => updateFormData('price', parseFloat(e.target.value) || 0)}\n              placeholder=\"0\"\n            />\n          </div>\n          \n          <div className=\"space-y-2\">\n            <Label htmlFor=\"comparePrice\">Giá so sánh</Label>\n            <Input\n              id=\"comparePrice\"\n              type=\"number\"\n              value={formData.comparePrice || ''}\n              onChange={(e) => updateFormData('comparePrice', parseFloat(e.target.value) || undefined)}\n              placeholder=\"0\"\n            />\n          </div>\n          \n          <div className=\"space-y-2\">\n            <Label htmlFor=\"cost\">Giá vốn</Label>\n            <Input\n              id=\"cost\"\n              type=\"number\"\n              value={formData.cost || ''}\n              onChange={(e) => updateFormData('cost', parseFloat(e.target.value) || undefined)}\n              placeholder=\"0\"\n            />\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-2 gap-4\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"category\">Danh mục *</Label>\n            <Select value={formData.category || ''} onValueChange={(value) => updateFormData('category', value)}>\n              <SelectTrigger>\n                <SelectValue placeholder=\"Chọn danh mục\" />\n              </SelectTrigger>\n              <SelectContent>\n                {categories.map((category) => (\n                  <SelectItem key={category} value={category}>\n                    {category}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n          \n          <div className=\"space-y-2\">\n            <Label htmlFor=\"brand\">Thương hiệu</Label>\n            <Input\n              id=\"brand\"\n              value={formData.brand || ''}\n              onChange={(e) => updateFormData('brand', e.target.value)}\n              placeholder=\"Tên thương hiệu\"\n            />\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-2 gap-4\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"status\">Trạng thái</Label>\n            <Select value={formData.status || 'draft'} onValueChange={(value) => updateFormData('status', value)}>\n              <SelectTrigger>\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"active\">Hoạt động</SelectItem>\n                <SelectItem value=\"draft\">Nháp</SelectItem>\n                <SelectItem value=\"archived\">Lưu trữ</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n          \n          <div className=\"space-y-2\">\n            <Label htmlFor=\"visibility\">Hiển thị</Label>\n            <Select value={formData.visibility || 'visible'} onValueChange={(value) => updateFormData('visibility', value)}>\n              <SelectTrigger>\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"visible\">Hiển thị</SelectItem>\n                <SelectItem value=\"hidden\">Ẩn</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <Switch\n            id=\"featured\"\n            checked={formData.featured || false}\n            onCheckedChange={(checked) => updateFormData('featured', checked)}\n          />\n          <Label htmlFor=\"featured\">Sản phẩm nổi bật</Label>\n        </div>\n      </TabsContent>\n      \n      <TabsContent value=\"inventory\" className=\"space-y-4\">\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"quantity\">Số lượng tồn kho</Label>\n            <Input\n              id=\"quantity\"\n              type=\"number\"\n              value={formData.inventory?.quantity || 0}\n              onChange={(e) => updateNestedFormData('inventory', 'quantity', parseInt(e.target.value) || 0)}\n              placeholder=\"0\"\n            />\n          </div>\n          \n          <div className=\"space-y-2\">\n            <Label htmlFor=\"lowStockThreshold\">Ngưỡng cảnh báo hết hàng</Label>\n            <Input\n              id=\"lowStockThreshold\"\n              type=\"number\"\n              value={formData.inventory?.lowStockThreshold || 5}\n              onChange={(e) => updateNestedFormData('inventory', 'lowStockThreshold', parseInt(e.target.value) || 5)}\n              placeholder=\"5\"\n            />\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <Switch\n            id=\"trackQuantity\"\n            checked={formData.inventory?.trackQuantity ?? true}\n            onCheckedChange={(checked) => updateNestedFormData('inventory', 'trackQuantity', checked)}\n          />\n          <Label htmlFor=\"trackQuantity\">Theo dõi số lượng tồn kho</Label>\n        </div>\n        \n        <div className=\"grid grid-cols-2 gap-4\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"weight\">Trọng lượng (gram)</Label>\n            <Input\n              id=\"weight\"\n              type=\"number\"\n              value={formData.weight || ''}\n              onChange={(e) => updateFormData('weight', parseFloat(e.target.value) || undefined)}\n              placeholder=\"0\"\n            />\n          </div>\n          \n          <div className=\"space-y-2\">\n            <Label htmlFor=\"barcode\">Mã vạch</Label>\n            <Input\n              id=\"barcode\"\n              value={formData.barcode || ''}\n              onChange={(e) => updateFormData('barcode', e.target.value)}\n              placeholder=\"Mã vạch sản phẩm\"\n            />\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-2 gap-4\">\n          <div className=\"flex items-center space-x-2\">\n            <Switch\n              id=\"shippingRequired\"\n              checked={formData.shippingRequired ?? true}\n              onCheckedChange={(checked) => updateFormData('shippingRequired', checked)}\n            />\n            <Label htmlFor=\"shippingRequired\">Yêu cầu vận chuyển</Label>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <Switch\n              id=\"taxable\"\n              checked={formData.taxable ?? true}\n              onCheckedChange={(checked) => updateFormData('taxable', checked)}\n            />\n            <Label htmlFor=\"taxable\">Chịu thuế</Label>\n          </div>\n        </div>\n      </TabsContent>\n      \n      <TabsContent value=\"seo\" className=\"space-y-4\">\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"seoTitle\">Tiêu đề SEO</Label>\n          <Input\n            id=\"seoTitle\"\n            value={formData.seo?.title || ''}\n            onChange={(e) => updateNestedFormData('seo', 'title', e.target.value)}\n            placeholder=\"Tiêu đề tối ưu cho SEO\"\n          />\n        </div>\n        \n        <div className=\"space-y-2\">\n          <Label htmlFor=\"seoDescription\">Mô tả SEO</Label>\n          <Textarea\n            id=\"seoDescription\"\n            value={formData.seo?.description || ''}\n            onChange={(e) => updateNestedFormData('seo', 'description', e.target.value)}\n            placeholder=\"Mô tả ngắn gọn cho SEO\"\n            rows={3}\n          />\n        </div>\n        \n        <div className=\"space-y-2\">\n          <Label htmlFor=\"seoKeywords\">Từ khóa SEO</Label>\n          <Input\n            id=\"seoKeywords\"\n            value={formData.seo?.keywords || ''}\n            onChange={(e) => updateNestedFormData('seo', 'keywords', e.target.value)}\n            placeholder=\"từ khóa 1, từ khóa 2, từ khóa 3\"\n          />\n        </div>\n      </TabsContent>\n      \n      <TabsContent value=\"advanced\" className=\"space-y-4\">\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"tags\">Tags</Label>\n          <Input\n            id=\"tags\"\n            value={formData.tags?.join(', ') || ''}\n            onChange={(e) => updateFormData('tags', e.target.value.split(',').map(t => t.trim()).filter(t => t))}\n            placeholder=\"tag1, tag2, tag3\"\n          />\n        </div>\n        \n        <div className=\"space-y-2\">\n          <Label>Kích thước (cm)</Label>\n          <div className=\"grid grid-cols-3 gap-2\">\n            <Input\n              placeholder=\"Dài\"\n              type=\"number\"\n              value={formData.dimensions?.length || ''}\n              onChange={(e) => updateNestedFormData('dimensions', 'length', parseFloat(e.target.value) || undefined)}\n            />\n            <Input\n              placeholder=\"Rộng\"\n              type=\"number\"\n              value={formData.dimensions?.width || ''}\n              onChange={(e) => updateNestedFormData('dimensions', 'width', parseFloat(e.target.value) || undefined)}\n            />\n            <Input\n              placeholder=\"Cao\"\n              type=\"number\"\n              value={formData.dimensions?.height || ''}\n              onChange={(e) => updateNestedFormData('dimensions', 'height', parseFloat(e.target.value) || undefined)}\n            />\n          </div>\n        </div>\n      </TabsContent>\n    </Tabs>\n  );\n};\n\nexport default ProductForm;","import React, { useState, useEffect } from 'react';\nimport { \n  Package, \n  Plus, \n  Search, \n  Filter, \n  Edit, \n  Trash2, \n  Eye, \n  EyeOff, \n  Star, \n  TrendingUp, \n  TrendingDown,\n  AlertTriangle,\n  CheckCircle,\n  XCircle,\n  MoreHorizontal,\n  Download,\n  Upload,\n  Copy,\n  Image as ImageIcon\n} from 'lucide-react';\nimport ProductForm from './ProductForm';\nimport { Button } from '../ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../ui/card';\nimport { Input } from '../ui/input';\nimport { Label } from '../ui/label';\nimport { Badge } from '../ui/badge';\nimport { Alert, AlertDescription } from '../ui/alert';\nimport { useToast } from '../ui/use-toast';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '../ui/table';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from '../ui/dropdown-menu';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '../ui/dialog';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '../ui/select';\nimport { Textarea } from '../ui/textarea';\nimport { Switch } from '../ui/switch';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '../ui/tabs';\n\ninterface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  comparePrice?: number;\n  cost?: number;\n  sku: string;\n  barcode?: string;\n  category: string;\n  subcategory?: string;\n  brand?: string;\n  tags: string[];\n  images: string[];\n  variants: ProductVariant[];\n  inventory: {\n    quantity: number;\n    lowStockThreshold: number;\n    trackQuantity: boolean;\n  };\n  seo: {\n    title?: string;\n    description?: string;\n    keywords?: string[];\n  };\n  status: 'active' | 'draft' | 'archived';\n  visibility: 'visible' | 'hidden';\n  featured: boolean;\n  weight?: number;\n  dimensions?: {\n    length: number;\n    width: number;\n    height: number;\n  };\n  shippingRequired: boolean;\n  taxable: boolean;\n  createdAt: string;\n  updatedAt: string;\n  vendor?: {\n    id: string;\n    name: string;\n  };\n  stats: {\n    views: number;\n    sales: number;\n    revenue: number;\n    rating: number;\n    reviewCount: number;\n  };\n}\n\ninterface ProductVariant {\n  id: string;\n  name: string;\n  sku: string;\n  price: number;\n  comparePrice?: number;\n  cost?: number;\n  inventory: {\n    quantity: number;\n    reserved: number;\n  };\n  attributes: Record<string, string>; // e.g., { color: 'red', size: 'M' }\n  image?: string;\n  weight?: number;\n  barcode?: string;\n}\n\ninterface ProductManagementProps {\n  onProductSelect?: (product: Product) => void;\n}\n\nconst ProductManagement: React.FC<ProductManagementProps> = ({ onProductSelect }) => {\n  const { toast } = useToast();\n  \n  const [products, setProducts] = useState<Product[]>([]);\n  const [filteredProducts, setFilteredProducts] = useState<Product[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  \n  // Filters and search\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState<string>('all');\n  const [categoryFilter, setCategoryFilter] = useState<string>('all');\n  const [sortBy, setSortBy] = useState<string>('updatedAt');\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc');\n  \n  // Pagination\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n  \n  // Dialogs\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null);\n  \n  // Form data\n  const [formData, setFormData] = useState<Partial<Product>>({\n    name: '',\n    description: '',\n    price: 0,\n    sku: '',\n    category: '',\n    status: 'draft',\n    visibility: 'visible',\n    featured: false,\n    shippingRequired: true,\n    taxable: true,\n    tags: [],\n    images: [],\n    variants: [],\n    inventory: {\n      quantity: 0,\n      lowStockThreshold: 5,\n      trackQuantity: true\n    },\n    seo: {}\n  });\n\n  // Mock categories for demo\n  const categories = [\n    'Điện thoại & Phụ kiện',\n    'Laptop & Máy tính',\n    'Thời trang Nam',\n    'Thời trang Nữ',\n    'Giày Dép',\n    'Túi Ví',\n    'Đồng hồ',\n    'Trang sức',\n    'Sách',\n    'Đồ chơi'\n  ];\n\n  useEffect(() => {\n    loadProducts();\n  }, []);\n\n  useEffect(() => {\n    filterAndSortProducts();\n  }, [products, searchTerm, statusFilter, categoryFilter, sortBy, sortOrder]);\n\n  const loadProducts = async () => {\n    try {\n      setIsLoading(true);\n      const response = await fetch('/api/admin/products', {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      \n      if (response.ok) {\n        const data = await response.json();\n        setProducts(data.products || []);\n      } else {\n        setError('Không thể tải danh sách sản phẩm');\n      }\n    } catch (err) {\n      setError('Lỗi kết nối server');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const filterAndSortProducts = () => {\n    let filtered = [...products];\n\n    // Search filter\n    if (searchTerm) {\n      filtered = filtered.filter(product => \n        product.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        product.sku.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        product.description.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n\n    // Status filter\n    if (statusFilter !== 'all') {\n      filtered = filtered.filter(product => product.status === statusFilter);\n    }\n\n    // Category filter\n    if (categoryFilter !== 'all') {\n      filtered = filtered.filter(product => product.category === categoryFilter);\n    }\n\n    // Sort\n    filtered.sort((a, b) => {\n      let aValue: any = a[sortBy as keyof Product];\n      let bValue: any = b[sortBy as keyof Product];\n\n      if (sortBy === 'price') {\n        aValue = a.price;\n        bValue = b.price;\n      } else if (sortBy === 'inventory') {\n        aValue = a.inventory.quantity;\n        bValue = b.inventory.quantity;\n      } else if (sortBy === 'sales') {\n        aValue = a.stats.sales;\n        bValue = b.stats.sales;\n      }\n\n      if (typeof aValue === 'string') {\n        return sortOrder === 'asc' \n          ? aValue.localeCompare(bValue)\n          : bValue.localeCompare(aValue);\n      }\n\n      return sortOrder === 'asc' ? aValue - bValue : bValue - aValue;\n    });\n\n    setFilteredProducts(filtered);\n  };\n\n  const handleCreateProduct = async () => {\n    try {\n      const response = await fetch('/api/admin/products', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n        },\n        body: JSON.stringify(formData),\n      });\n\n      if (response.ok) {\n        toast({\n          title: 'Thành công!',\n          description: 'Sản phẩm đã được tạo thành công.',\n        });\n        setIsCreateDialogOpen(false);\n        resetForm();\n        loadProducts();\n      } else {\n        const data = await response.json();\n        setError(data.message || 'Không thể tạo sản phẩm');\n      }\n    } catch (err) {\n      setError('Lỗi kết nối server');\n    }\n  };\n\n  const handleUpdateProduct = async () => {\n    if (!selectedProduct) return;\n\n    try {\n      const response = await fetch(`/api/admin/products/${selectedProduct.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n        },\n        body: JSON.stringify(formData),\n      });\n\n      if (response.ok) {\n        toast({\n          title: 'Thành công!',\n          description: 'Sản phẩm đã được cập nhật.',\n        });\n        setIsEditDialogOpen(false);\n        setSelectedProduct(null);\n        resetForm();\n        loadProducts();\n      } else {\n        const data = await response.json();\n        setError(data.message || 'Không thể cập nhật sản phẩm');\n      }\n    } catch (err) {\n      setError('Lỗi kết nối server');\n    }\n  };\n\n  const handleDeleteProduct = async () => {\n    if (!selectedProduct) return;\n\n    try {\n      const response = await fetch(`/api/admin/products/${selectedProduct.id}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n\n      if (response.ok) {\n        toast({\n          title: 'Thành công!',\n          description: 'Sản phẩm đã được xóa.',\n        });\n        setIsDeleteDialogOpen(false);\n        setSelectedProduct(null);\n        loadProducts();\n      } else {\n        const data = await response.json();\n        setError(data.message || 'Không thể xóa sản phẩm');\n      }\n    } catch (err) {\n      setError('Lỗi kết nối server');\n    }\n  };\n\n  const handleToggleStatus = async (product: Product, newStatus: Product['status']) => {\n    try {\n      const response = await fetch(`/api/admin/products/${product.id}/status`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n        },\n        body: JSON.stringify({ status: newStatus }),\n      });\n\n      if (response.ok) {\n        toast({\n          title: 'Thành công!',\n          description: `Trạng thái sản phẩm đã được cập nhật thành ${newStatus}.`,\n        });\n        loadProducts();\n      }\n    } catch (err) {\n      setError('Lỗi kết nối server');\n    }\n  };\n\n  const handleToggleFeatured = async (product: Product) => {\n    try {\n      const response = await fetch(`/api/admin/products/${product.id}/featured`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n        },\n        body: JSON.stringify({ featured: !product.featured }),\n      });\n\n      if (response.ok) {\n        toast({\n          title: 'Thành công!',\n          description: `Sản phẩm đã được ${!product.featured ? 'thêm vào' : 'xóa khỏi'} danh sách nổi bật.`,\n        });\n        loadProducts();\n      }\n    } catch (err) {\n      setError('Lỗi kết nối server');\n    }\n  };\n\n  const resetForm = () => {\n    setFormData({\n      name: '',\n      description: '',\n      price: 0,\n      sku: '',\n      category: '',\n      status: 'draft',\n      visibility: 'visible',\n      featured: false,\n      shippingRequired: true,\n      taxable: true,\n      tags: [],\n      images: [],\n      variants: [],\n      inventory: {\n        quantity: 0,\n        lowStockThreshold: 5,\n        trackQuantity: true\n      },\n      seo: {}\n    });\n  };\n\n  const openEditDialog = (product: Product) => {\n    setSelectedProduct(product);\n    setFormData(product);\n    setIsEditDialogOpen(true);\n  };\n\n  const openDeleteDialog = (product: Product) => {\n    setSelectedProduct(product);\n    setIsDeleteDialogOpen(true);\n  };\n\n  const getStatusBadge = (status: Product['status']) => {\n    switch (status) {\n      case 'active':\n        return <Badge className=\"bg-green-100 text-green-800\">Hoạt động</Badge>;\n      case 'draft':\n        return <Badge className=\"bg-yellow-100 text-yellow-800\">Nháp</Badge>;\n      case 'archived':\n        return <Badge className=\"bg-gray-100 text-gray-800\">Lưu trữ</Badge>;\n      default:\n        return <Badge>{status}</Badge>;\n    }\n  };\n\n  const getInventoryStatus = (product: Product) => {\n    const { quantity, lowStockThreshold } = product.inventory;\n    if (quantity === 0) {\n      return <Badge className=\"bg-red-100 text-red-800\">Hết hàng</Badge>;\n    } else if (quantity <= lowStockThreshold) {\n      return <Badge className=\"bg-yellow-100 text-yellow-800\">Sắp hết</Badge>;\n    }\n    return <Badge className=\"bg-green-100 text-green-800\">Còn hàng</Badge>;\n  };\n\n  const formatPrice = (price: number) => {\n    return new Intl.NumberFormat('vi-VN', {\n      style: 'currency',\n      currency: 'VND'\n    }).format(price);\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('vi-VN');\n  };\n\n  // Pagination\n  const totalPages = Math.ceil(filteredProducts.length / itemsPerPage);\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const currentProducts = filteredProducts.slice(startIndex, endIndex);\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center p-8\">\n        <div className=\"w-8 h-8 border-2 border-blue-600 border-t-transparent rounded-full animate-spin\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-2xl font-bold\">Quản lý sản phẩm</h2>\n          <p className=\"text-gray-600\">Quản lý tất cả sản phẩm trong cửa hàng</p>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <Button variant=\"outline\" size=\"sm\">\n            <Download className=\"h-4 w-4 mr-2\" />\n            Xuất Excel\n          </Button>\n          <Button variant=\"outline\" size=\"sm\">\n            <Upload className=\"h-4 w-4 mr-2\" />\n            Nhập Excel\n          </Button>\n          <Dialog open={isCreateDialogOpen} onOpenChange={setIsCreateDialogOpen}>\n            <DialogTrigger asChild>\n              <Button>\n                <Plus className=\"h-4 w-4 mr-2\" />\n                Thêm sản phẩm\n              </Button>\n            </DialogTrigger>\n            <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n              <DialogHeader>\n                <DialogTitle>Thêm sản phẩm mới</DialogTitle>\n                <DialogDescription>\n                  Tạo sản phẩm mới cho cửa hàng\n                </DialogDescription>\n              </DialogHeader>\n              \n              <ProductForm \n                formData={formData}\n                setFormData={setFormData}\n                categories={categories}\n                isEdit={false}\n              />\n              \n              <DialogFooter>\n                <Button variant=\"outline\" onClick={() => setIsCreateDialogOpen(false)}>\n                  Hủy\n                </Button>\n                <Button onClick={handleCreateProduct}>\n                  Tạo sản phẩm\n                </Button>\n              </DialogFooter>\n            </DialogContent>\n          </Dialog>\n        </div>\n      </div>\n\n      {error && (\n        <Alert variant=\"destructive\">\n          <AlertTriangle className=\"h-4 w-4\" />\n          <AlertDescription>{error}</AlertDescription>\n        </Alert>\n      )}\n\n      {/* Filters */}\n      <Card>\n        <CardContent className=\"pt-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <div className=\"space-y-2\">\n              <Label>Tìm kiếm</Label>\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n                <Input\n                  placeholder=\"Tên, SKU, mô tả...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"pl-10\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"space-y-2\">\n              <Label>Trạng thái</Label>\n              <Select value={statusFilter} onValueChange={setStatusFilter}>\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">Tất cả</SelectItem>\n                  <SelectItem value=\"active\">Hoạt động</SelectItem>\n                  <SelectItem value=\"draft\">Nháp</SelectItem>\n                  <SelectItem value=\"archived\">Lưu trữ</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n            \n            <div className=\"space-y-2\">\n              <Label>Danh mục</Label>\n              <Select value={categoryFilter} onValueChange={setCategoryFilter}>\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">Tất cả</SelectItem>\n                  {categories.map(category => (\n                    <SelectItem key={category} value={category}>\n                      {category}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n            \n            <div className=\"space-y-2\">\n              <Label>Sắp xếp</Label>\n              <Select value={`${sortBy}-${sortOrder}`} onValueChange={(value) => {\n                const [field, order] = value.split('-');\n                setSortBy(field);\n                setSortOrder(order as 'asc' | 'desc');\n              }}>\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"updatedAt-desc\">Mới nhất</SelectItem>\n                  <SelectItem value=\"updatedAt-asc\">Cũ nhất</SelectItem>\n                  <SelectItem value=\"name-asc\">Tên A-Z</SelectItem>\n                  <SelectItem value=\"name-desc\">Tên Z-A</SelectItem>\n                  <SelectItem value=\"price-asc\">Giá thấp đến cao</SelectItem>\n                  <SelectItem value=\"price-desc\">Giá cao đến thấp</SelectItem>\n                  <SelectItem value=\"sales-desc\">Bán chạy nhất</SelectItem>\n                  <SelectItem value=\"inventory-asc\">Tồn kho ít nhất</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Products Table */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <CardTitle>Danh sách sản phẩm ({filteredProducts.length})</CardTitle>\n            <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\n              <span>Hiển thị {startIndex + 1}-{Math.min(endIndex, filteredProducts.length)} của {filteredProducts.length}</span>\n            </div>\n          </div>\n        </CardHeader>\n        \n        <CardContent>\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead>Sản phẩm</TableHead>\n                <TableHead>SKU</TableHead>\n                <TableHead>Danh mục</TableHead>\n                <TableHead>Giá</TableHead>\n                <TableHead>Tồn kho</TableHead>\n                <TableHead>Trạng thái</TableHead>\n                <TableHead>Đánh giá</TableHead>\n                <TableHead>Cập nhật</TableHead>\n                <TableHead className=\"text-right\">Thao tác</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {currentProducts.map((product) => (\n                <TableRow key={product.id} className=\"hover:bg-gray-50\">\n                  <TableCell>\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"w-12 h-12 bg-gray-100 rounded-lg flex items-center justify-center\">\n                        {product.images.length > 0 ? (\n                          <img \n                            src={product.images[0]} \n                            alt={product.name}\n                            className=\"w-full h-full object-cover rounded-lg\"\n                          />\n                        ) : (\n                          <ImageIcon className=\"h-6 w-6 text-gray-400\" />\n                        )}\n                      </div>\n                      <div>\n                        <div className=\"font-medium\">{product.name}</div>\n                        <div className=\"text-sm text-gray-600 max-w-xs truncate\">\n                          {product.description}\n                        </div>\n                        {product.featured && (\n                          <Badge className=\"bg-yellow-100 text-yellow-800 mt-1\">\n                            <Star className=\"h-3 w-3 mr-1\" />\n                            Nổi bật\n                          </Badge>\n                        )}\n                      </div>\n                    </div>\n                  </TableCell>\n                  <TableCell className=\"font-mono text-sm\">{product.sku}</TableCell>\n                  <TableCell>{product.category}</TableCell>\n                  <TableCell>\n                    <div>\n                      <div className=\"font-medium\">{formatPrice(product.price)}</div>\n                      {product.comparePrice && product.comparePrice > product.price && (\n                        <div className=\"text-sm text-gray-500 line-through\">\n                          {formatPrice(product.comparePrice)}\n                        </div>\n                      )}\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"space-y-1\">\n                      <div className=\"font-medium\">{product.inventory.quantity}</div>\n                      {getInventoryStatus(product)}\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"space-y-1\">\n                      {getStatusBadge(product.status)}\n                      {product.visibility === 'hidden' && (\n                        <Badge className=\"bg-gray-100 text-gray-800\">\n                          <EyeOff className=\"h-3 w-3 mr-1\" />\n                          Ẩn\n                        </Badge>\n                      )}\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"flex items-center space-x-1\">\n                      <Star className=\"h-4 w-4 text-yellow-500\" />\n                      <span className=\"font-medium\">{product.stats.rating.toFixed(1)}</span>\n                      <span className=\"text-sm text-gray-600\">({product.stats.reviewCount})</span>\n                    </div>\n                  </TableCell>\n                  <TableCell className=\"text-sm text-gray-600\">\n                    {formatDate(product.updatedAt)}\n                  </TableCell>\n                  <TableCell className=\"text-right\">\n                    <DropdownMenu>\n                      <DropdownMenuTrigger asChild>\n                        <Button variant=\"ghost\" size=\"sm\">\n                          <MoreHorizontal className=\"h-4 w-4\" />\n                        </Button>\n                      </DropdownMenuTrigger>\n                      <DropdownMenuContent align=\"end\">\n                        <DropdownMenuLabel>Thao tác</DropdownMenuLabel>\n                        <DropdownMenuSeparator />\n                        <DropdownMenuItem onClick={() => onProductSelect?.(product)}>\n                          <Eye className=\"h-4 w-4 mr-2\" />\n                          Xem chi tiết\n                        </DropdownMenuItem>\n                        <DropdownMenuItem onClick={() => openEditDialog(product)}>\n                          <Edit className=\"h-4 w-4 mr-2\" />\n                          Chỉnh sửa\n                        </DropdownMenuItem>\n                        <DropdownMenuItem onClick={() => {\n                          navigator.clipboard.writeText(product.id);\n                          toast({ title: 'Đã sao chép ID sản phẩm' });\n                        }}>\n                          <Copy className=\"h-4 w-4 mr-2\" />\n                          Sao chép ID\n                        </DropdownMenuItem>\n                        <DropdownMenuSeparator />\n                        <DropdownMenuItem onClick={() => handleToggleFeatured(product)}>\n                          <Star className=\"h-4 w-4 mr-2\" />\n                          {product.featured ? 'Bỏ nổi bật' : 'Đặt nổi bật'}\n                        </DropdownMenuItem>\n                        <DropdownMenuItem onClick={() => \n                          handleToggleStatus(product, product.status === 'active' ? 'archived' : 'active')\n                        }>\n                          {product.status === 'active' ? (\n                            <><XCircle className=\"h-4 w-4 mr-2\" />Lưu trữ</>\n                          ) : (\n                            <><CheckCircle className=\"h-4 w-4 mr-2\" />Kích hoạt</>\n                          )}\n                        </DropdownMenuItem>\n                        <DropdownMenuSeparator />\n                        <DropdownMenuItem \n                          onClick={() => openDeleteDialog(product)}\n                          className=\"text-red-600\"\n                        >\n                          <Trash2 className=\"h-4 w-4 mr-2\" />\n                          Xóa\n                        </DropdownMenuItem>\n                      </DropdownMenuContent>\n                    </DropdownMenu>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          \n          {/* Pagination */}\n          {totalPages > 1 && (\n            <div className=\"flex items-center justify-between mt-4\">\n              <div className=\"text-sm text-gray-600\">\n                Trang {currentPage} của {totalPages}\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => setCurrentPage(prev => Math.max(1, prev - 1))}\n                  disabled={currentPage === 1}\n                >\n                  Trước\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => setCurrentPage(prev => Math.min(totalPages, prev + 1))}\n                  disabled={currentPage === totalPages}\n                >\n                  Sau\n                </Button>\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Edit Dialog */}\n      <Dialog open={isEditDialogOpen} onOpenChange={setIsEditDialogOpen}>\n        <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle>Chỉnh sửa sản phẩm</DialogTitle>\n            <DialogDescription>\n              Cập nhật thông tin sản phẩm\n            </DialogDescription>\n          </DialogHeader>\n          \n          <ProductForm \n            formData={formData}\n            setFormData={setFormData}\n            categories={categories}\n            isEdit={true}\n          />\n          \n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => setIsEditDialogOpen(false)}>\n              Hủy\n            </Button>\n            <Button onClick={handleUpdateProduct}>\n              Cập nhật\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* Delete Dialog */}\n      <Dialog open={isDeleteDialogOpen} onOpenChange={setIsDeleteDialogOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Xác nhận xóa sản phẩm</DialogTitle>\n            <DialogDescription>\n              Bạn có chắc chắn muốn xóa sản phẩm \"{selectedProduct?.name}\"? \n              Hành động này không thể hoàn tác.\n            </DialogDescription>\n          </DialogHeader>\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => setIsDeleteDialogOpen(false)}>\n              Hủy\n            </Button>\n            <Button variant=\"destructive\" onClick={handleDeleteProduct}>\n              Xóa sản phẩm\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\n// Component ProductForm đã được tách ra thành file riêng\n\nexport default ProductManagement;\n\n// Hook để sử dụng product management\nexport const useProductManagement = () => {\n  const { toast } = useToast();\n  \n  const createProduct = async (productData: Partial<Product>): Promise<Product> => {\n    const response = await fetch('/api/admin/products', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\n      },\n      body: JSON.stringify(productData),\n    });\n    \n    const data = await response.json();\n    \n    if (!response.ok) {\n      throw new Error(data.message || 'Create product failed');\n    }\n    \n    return data.product;\n  };\n  \n  const updateProduct = async (id: string, productData: Partial<Product>): Promise<Product> => {\n    const response = await fetch(`/api/admin/products/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\n      },\n      body: JSON.stringify(productData),\n    });\n    \n    const data = await response.json();\n    \n    if (!response.ok) {\n      throw new Error(data.message || 'Update product failed');\n    }\n    \n    return data.product;\n  };\n  \n  const deleteProduct = async (id: string): Promise<void> => {\n    const response = await fetch(`/api/admin/products/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\n      },\n    });\n    \n    if (!response.ok) {\n      const data = await response.json();\n      throw new Error(data.message || 'Delete product failed');\n    }\n  };\n  \n  return {\n    createProduct,\n    updateProduct,\n    deleteProduct,\n  };\n};","import React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, LineChart, Line, PieChart, Pie, Cell, AreaChart, Area } from 'recharts';\nimport {\n  TrendingUp,\n  TrendingDown,\n  Users,\n  ShoppingCart,\n  DollarSign,\n  Package,\n  Eye,\n  MousePointer,\n  Calendar,\n  Download,\n  RefreshCw,\n  Activity,\n  Target,\n  Clock,\n  MapPin,\n  Star,\n  BarChart3,\n  PieChart as PieChartIcon,\n  LineChart as LineChartIcon,\n  Zap,\n  Heart,\n  MessageSquare,\n  Share2\n} from 'lucide-react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { DatePickerWithRange } from '@/components/ui/date-picker';\nimport { DateRange } from 'react-day-picker';\nimport { Progress } from '@/components/ui/progress';\nimport { Separator } from '@/components/ui/separator';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { useToast } from '@/components/ui/use-toast';\n\n// NOTE: Dữ liệu mẫu cho analytics - cần thay thế bằng dữ liệu từ API backend thực tế\nconst salesData = [\n  { month: 'T1', revenue: 45000000, orders: 120, customers: 89 },\n  { month: 'T2', revenue: 52000000, orders: 145, customers: 102 },\n  { month: 'T3', revenue: 48000000, orders: 132, customers: 95 },\n  { month: 'T4', revenue: 61000000, orders: 168, customers: 118 },\n  { month: 'T5', revenue: 55000000, orders: 155, customers: 108 },\n  { month: 'T6', revenue: 67000000, orders: 189, customers: 134 },\n  { month: 'T7', revenue: 72000000, orders: 201, customers: 145 },\n  { month: 'T8', revenue: 69000000, orders: 195, customers: 139 },\n  { month: 'T9', revenue: 78000000, orders: 218, customers: 156 },\n  { month: 'T10', revenue: 82000000, orders: 235, customers: 167 },\n  { month: 'T11', revenue: 89000000, orders: 251, customers: 178 },\n  { month: 'T12', revenue: 95000000, orders: 267, customers: 189 }\n];\n\nconst categoryData = [\n  { name: 'Điện tử', value: 35, color: '#0088FE' },\n  { name: 'Thời trang', value: 28, color: '#00C49F' },\n  { name: 'Gia dụng', value: 18, color: '#FFBB28' },\n  { name: 'Sách', value: 12, color: '#FF8042' },\n  { name: 'Khác', value: 7, color: '#8884D8' }\n];\n\nconst trafficData = [\n  { date: '01/03', pageViews: 1200, uniqueVisitors: 890, bounceRate: 45 },\n  { date: '02/03', pageViews: 1350, uniqueVisitors: 920, bounceRate: 42 },\n  { date: '03/03', pageViews: 1180, uniqueVisitors: 850, bounceRate: 48 },\n  { date: '04/03', pageViews: 1420, uniqueVisitors: 980, bounceRate: 38 },\n  { date: '05/03', pageViews: 1580, uniqueVisitors: 1100, bounceRate: 35 },\n  { date: '06/03', pageViews: 1650, uniqueVisitors: 1150, bounceRate: 33 },\n  { date: '07/03', pageViews: 1720, uniqueVisitors: 1200, bounceRate: 31 }\n];\n\nconst topProducts = [\n  { id: 1, name: 'iPhone 15 Pro Max', sales: 156, revenue: 390000000, growth: 12.5 },\n  { id: 2, name: 'Samsung Galaxy S24', sales: 134, revenue: 268000000, growth: 8.3 },\n  { id: 3, name: 'MacBook Air M3', sales: 89, revenue: 267000000, growth: -2.1 },\n  { id: 4, name: 'AirPods Pro', sales: 245, revenue: 147000000, growth: 15.7 },\n  { id: 5, name: 'iPad Air', sales: 78, revenue: 156000000, growth: 5.2 }\n];\n\nconst userBehaviorData = [\n  { page: 'Trang chủ', views: 15420, avgTime: '2:34', exitRate: 25 },\n  { page: 'Tìm kiếm sản phẩm', views: 12350, avgTime: '3:45', exitRate: 18 },\n  { page: 'Chi tiết sản phẩm', views: 8960, avgTime: '4:12', exitRate: 35 },\n  { page: 'Giỏ hàng', views: 5670, avgTime: '1:58', exitRate: 45 },\n  { page: 'Thanh toán', views: 3240, avgTime: '2:15', exitRate: 12 }\n];\n\n// Dữ liệu thống kê tổng quan\nconst overviewStats = {\n  totalRevenue: 2450000000,\n  totalOrders: 12340,\n  totalUsers: 56780,\n  totalProducts: 8900,\n  revenueGrowth: 12.5,\n  ordersGrowth: 8.3,\n  usersGrowth: 15.2,\n  productsGrowth: 5.7\n};\n\n// Dữ liệu hoạt động gần đây\nconst recentActivity = [\n  {\n    id: '1',\n    type: 'order',\n    description: 'Đơn hàng mới từ Nguyễn Văn A',\n    timestamp: '2024-01-07T10:30:00Z',\n    value: 2500000\n  },\n  {\n    id: '2',\n    type: 'user',\n    description: 'Người dùng mới đăng ký: user@example.com',\n    timestamp: '2024-01-07T10:25:00Z'\n  },\n  {\n    id: '3',\n    type: 'product',\n    description: 'Sản phẩm mới được thêm: iPhone 15 Pro',\n    timestamp: '2024-01-07T10:20:00Z'\n  },\n  {\n    id: '4',\n    type: 'review',\n    description: 'Đánh giá 5 sao cho MacBook Pro M3',\n    timestamp: '2024-01-07T10:15:00Z'\n  },\n  {\n    id: '5',\n    type: 'order',\n    description: 'Đơn hàng được giao thành công #12345',\n    timestamp: '2024-01-07T10:10:00Z',\n    value: 1800000\n  }\n];\n\n// Dữ liệu địa lý\nconst geographicData = [\n  { region: 'Hồ Chí Minh', users: 23450, orders: 12340, revenue: 12000000000 },\n  { region: 'Hà Nội', users: 18760, orders: 9870, revenue: 9800000000 },\n  { region: 'Đà Nẵng', users: 6540, orders: 4320, revenue: 4300000000 },\n  { region: 'Cần Thơ', users: 4320, orders: 2340, revenue: 2300000000 },\n  { region: 'Hải Phòng', users: 3210, orders: 1780, revenue: 1800000000 }\n];\n\n// Dữ liệu người dùng\nconst userMetrics = {\n  newUsers: 2340,\n  activeUsers: 15670,\n  retentionRate: 68.5,\n  averageSessionTime: 8.5\n};\n\n// Utility functions\nconst formatCurrency = (amount: number): string => {\n  return new Intl.NumberFormat('vi-VN', {\n    style: 'currency',\n    currency: 'VND'\n  }).format(amount);\n};\n\nconst formatNumber = (num: number): string => {\n  return new Intl.NumberFormat('vi-VN').format(num);\n};\n\nconst formatPercentage = (num: number): string => {\n  return `${num > 0 ? '+' : ''}${num.toFixed(1)}%`;\n};\n\nconst formatDate = (dateString: string): string => {\n  return new Date(dateString).toLocaleDateString('vi-VN', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  });\n};\n\nconst formatTime = (dateString: string): string => {\n  return new Date(dateString).toLocaleTimeString('vi-VN', {\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\n\nconst getActivityIcon = (type: string) => {\n  switch (type) {\n    case 'order':\n      return <ShoppingCart className=\"h-4 w-4\" />;\n    case 'user':\n      return <Users className=\"h-4 w-4\" />;\n    case 'product':\n      return <Package className=\"h-4 w-4\" />;\n    case 'review':\n      return <Star className=\"h-4 w-4\" />;\n    default:\n      return <Activity className=\"h-4 w-4\" />;\n  }\n};\n\nconst getActivityColor = (type: string) => {\n  switch (type) {\n    case 'order':\n      return 'text-blue-600';\n    case 'user':\n      return 'text-green-600';\n    case 'product':\n      return 'text-purple-600';\n    case 'review':\n      return 'text-yellow-600';\n    default:\n      return 'text-gray-600';\n  }\n};\n\n// Custom hook for analytics\nconst useAnalytics = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [dateRange, setDateRange] = useState('7d');\n  const { toast } = useToast();\n\n  const fetchAnalytics = async (range: string) => {\n    setLoading(true);\n    setError(null);\n    try {\n      // NOTE: Cần tích hợp với API backend để lấy dữ liệu analytics thực tế\n      // Ví dụ: const response = await fetch(`/api/analytics?range=${range}`);\n      // const data = await response.json();\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      toast({\n        title: \"Dữ liệu đã được cập nhật\",\n        description: \"Analytics dashboard đã được làm mới.\",\n      });\n    } catch (err) {\n      setError('Không thể tải dữ liệu analytics');\n      toast({\n        title: \"Lỗi\",\n        description: \"Không thể tải dữ liệu analytics.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const exportData = async (format: 'csv' | 'excel' | 'pdf') => {\n    try {\n      // NOTE: Cần tích hợp với API backend để xuất dữ liệu analytics\n      // Ví dụ: const response = await fetch(`/api/analytics/export?format=${format}`);\n      // const blob = await response.blob();\n      // Tạo link download và trigger download\n      toast({\n        title: \"Đang xuất dữ liệu\",\n        description: `Đang chuẩn bị file ${format.toUpperCase()}...`,\n      });\n      console.log(`Exporting analytics data as ${format}`);\n    } catch (err) {\n      toast({\n        title: \"Lỗi\",\n        description: \"Không thể xuất dữ liệu.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  return {\n    loading,\n    error,\n    dateRange,\n    setDateRange,\n    fetchAnalytics,\n    exportData\n  };\n};\n\nconst Analytics: React.FC = () => {\n  const {\n    loading,\n    error,\n    dateRange,\n    setDateRange,\n    fetchAnalytics,\n    exportData\n  } = useAnalytics();\n  \n  const [selectedPeriod, setSelectedPeriod] = useState('30d');\n\n  // Tính toán metrics tổng quan\n  const totalRevenue = salesData.reduce((sum, item) => sum + item.revenue, 0);\n  const totalOrders = salesData.reduce((sum, item) => sum + item.orders, 0);\n  const totalCustomers = salesData.reduce((sum, item) => sum + item.customers, 0);\n  const avgOrderValue = totalRevenue / totalOrders;\n\n  // Tính toán growth rates\n  const currentMonth = salesData[salesData.length - 1];\n  const previousMonth = salesData[salesData.length - 2];\n  const revenueGrowth = ((currentMonth.revenue - previousMonth.revenue) / previousMonth.revenue) * 100;\n  const orderGrowth = ((currentMonth.orders - previousMonth.orders) / previousMonth.orders) * 100;\n  const customerGrowth = ((currentMonth.customers - previousMonth.customers) / previousMonth.customers) * 100;\n\n  const getGrowthIcon = (growth: number) => {\n    return growth >= 0 ? (\n      <TrendingUp className=\"w-4 h-4 text-green-500\" />\n    ) : (\n      <TrendingDown className=\"w-4 h-4 text-red-500\" />\n    );\n  };\n\n  const getGrowthColor = (growth: number) => {\n    return growth >= 0 ? 'text-green-500' : 'text-red-500';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-96\">\n        <div className=\"flex items-center space-x-2\">\n          <RefreshCw className=\"h-6 w-6 animate-spin\" />\n          <span>Đang tải dữ liệu analytics...</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex items-center justify-center h-96\">\n        <div className=\"text-center\">\n          <p className=\"text-red-600 mb-4\">{error}</p>\n          <Button onClick={() => fetchAnalytics(dateRange)}>\n            <RefreshCw className=\"h-4 w-4 mr-2\" />\n            Thử lại\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">Analytics Dashboard</h1>\n          <p className=\"text-muted-foreground\">\n            Theo dõi hiệu suất kinh doanh và phân tích dữ liệu\n          </p>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Select value={dateRange} onValueChange={setDateRange}>\n            <SelectTrigger className=\"w-40\">\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"1d\">24 giờ qua</SelectItem>\n              <SelectItem value=\"7d\">7 ngày qua</SelectItem>\n              <SelectItem value=\"30d\">30 ngày qua</SelectItem>\n              <SelectItem value=\"90d\">3 tháng qua</SelectItem>\n              <SelectItem value=\"1y\">1 năm qua</SelectItem>\n            </SelectContent>\n          </Select>\n          <Button variant=\"outline\" onClick={() => exportData('excel')}>\n            <Download className=\"h-4 w-4 mr-2\" />\n            Xuất báo cáo\n          </Button>\n          <Button variant=\"outline\" onClick={() => fetchAnalytics(dateRange)}>\n            <RefreshCw className=\"h-4 w-4 mr-2\" />\n            Làm mới\n          </Button>\n        </div>\n      </div>\n\n      {/* Overview Stats */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\n        {overviewStats.map((stat, index) => {\n          const Icon = stat.icon === 'DollarSign' ? DollarSign :\n                      stat.icon === 'ShoppingCart' ? ShoppingCart :\n                      stat.icon === 'Users' ? Users :\n                      stat.icon === 'Package' ? Package :\n                      stat.icon === 'TrendingUp' ? TrendingUp : Activity;\n          \n          return (\n            <Card key={index} className=\"relative overflow-hidden\">\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium text-muted-foreground\">\n                  {stat.title}\n                </CardTitle>\n                <Icon className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {stat.icon === 'DollarSign' ? formatCurrency(stat.value) : formatNumber(stat.value)}\n                </div>\n                <div className=\"flex items-center space-x-1 text-xs mt-1\">\n                  {getGrowthIcon(stat.growth)}\n                  <span className={getGrowthColor(stat.growth)}>\n                    {formatPercentage(Math.abs(stat.growth))} so với kỳ trước\n                  </span>\n                </div>\n                {/* Progress bar for visual appeal */}\n                <div className=\"mt-2\">\n                  <Progress \n                    value={Math.min(Math.abs(stat.growth) * 10, 100)} \n                    className=\"h-1\" \n                  />\n                </div>\n              </CardContent>\n            </Card>\n          );\n        })}\n      </div>\n\n      <Tabs defaultValue=\"overview\" className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-6\">\n          <TabsTrigger value=\"overview\">Tổng quan</TabsTrigger>\n          <TabsTrigger value=\"sales\">Doanh số</TabsTrigger>\n          <TabsTrigger value=\"products\">Sản phẩm</TabsTrigger>\n          <TabsTrigger value=\"users\">Người dùng</TabsTrigger>\n          <TabsTrigger value=\"traffic\">Lưu lượng</TabsTrigger>\n          <TabsTrigger value=\"geography\">Địa lý</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"overview\" className=\"space-y-6\">\n          {/* Recent Activity */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Activity className=\"h-5 w-5\" />\n                  Hoạt động gần đây\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {recentActivity.map((activity, index) => {\n                    const Icon = getActivityIcon(activity.type);\n                    return (\n                      <div key={index} className=\"flex items-center space-x-3 p-3 rounded-lg border\">\n                        <div className={`p-2 rounded-full ${getActivityColor(activity.type)}`}>\n                          <Icon className=\"h-4 w-4\" />\n                        </div>\n                        <div className=\"flex-1\">\n                          <p className=\"text-sm font-medium\">{activity.description}</p>\n                          <p className=\"text-xs text-muted-foreground\">{formatTime(activity.timestamp)}</p>\n                        </div>\n                        <Badge variant=\"outline\">{activity.value}</Badge>\n                      </div>\n                    );\n                  })}\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* User Metrics */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Users className=\"h-5 w-5\" />\n                  Chỉ số người dùng\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {userMetrics.map((metric, index) => (\n                    <div key={index} className=\"space-y-2\">\n                      <div className=\"flex justify-between text-sm\">\n                        <span>{metric.label}</span>\n                        <span className=\"font-medium\">{formatNumber(metric.value)}</span>\n                      </div>\n                      <Progress value={metric.percentage} className=\"h-2\" />\n                      <p className=\"text-xs text-muted-foreground\">\n                        {formatPercentage(metric.growth)} so với tháng trước\n                      </p>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Geographic Distribution */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <MapPin className=\"h-5 w-5\" />\n                Phân bố địa lý\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                {geographicData.map((region, index) => (\n                  <div key={index} className=\"p-4 border rounded-lg\">\n                    <h4 className=\"font-medium mb-2\">{region.region}</h4>\n                    <div className=\"space-y-2 text-sm\">\n                      <div className=\"flex justify-between\">\n                        <span>Người dùng:</span>\n                        <span className=\"font-medium\">{formatNumber(region.users)}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Đơn hàng:</span>\n                        <span className=\"font-medium\">{formatNumber(region.orders)}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Doanh thu:</span>\n                        <span className=\"font-medium\">{formatCurrency(region.revenue)}</span>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"sales\" className=\"space-y-6\">\n          {/* Revenue Chart */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Doanh thu theo tháng</CardTitle>\n              <CardDescription>\n                Biểu đồ doanh thu và số đơn hàng trong 12 tháng qua\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <ResponsiveContainer width=\"100%\" height={400}>\n                <AreaChart data={salesData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"month\" />\n                  <YAxis yAxisId=\"left\" orientation=\"left\" />\n                  <YAxis yAxisId=\"right\" orientation=\"right\" />\n                  <Tooltip \n                    formatter={(value, name) => {\n                      if (name === 'revenue') {\n                        return [formatCurrency(value as number), 'Doanh thu'];\n                      }\n                      return [value, name === 'orders' ? 'Đơn hàng' : 'Khách hàng'];\n                    }}\n                  />\n                  <Legend />\n                  <Area\n                    yAxisId=\"left\"\n                    type=\"monotone\"\n                    dataKey=\"revenue\"\n                    stackId=\"1\"\n                    stroke=\"#8884d8\"\n                    fill=\"#8884d8\"\n                    fillOpacity={0.6}\n                    name=\"Doanh thu\"\n                  />\n                  <Bar yAxisId=\"right\" dataKey=\"orders\" fill=\"#82ca9d\" name=\"Đơn hàng\" />\n                </AreaChart>\n              </ResponsiveContainer>\n            </CardContent>\n          </Card>\n\n          {/* Top Products */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Sản phẩm bán chạy</CardTitle>\n              <CardDescription>\n                Top 5 sản phẩm có doanh số cao nhất\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {topProducts.map((product, index) => (\n                  <div key={product.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                    <div className=\"flex items-center space-x-4\">\n                      <div className=\"flex items-center justify-center w-8 h-8 bg-blue-100 text-blue-600 rounded-full font-semibold\">\n                        {index + 1}\n                      </div>\n                      <div>\n                        <h4 className=\"font-medium\">{product.name}</h4>\n                        <p className=\"text-sm text-muted-foreground\">\n                          {product.sales} đã bán\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"text-right\">\n                      <div className=\"font-semibold\">{formatCurrency(product.revenue)}</div>\n                      <div className=\"flex items-center space-x-1 text-xs\">\n                        {getGrowthIcon(product.growth)}\n                        <span className={getGrowthColor(product.growth)}>\n                          {Math.abs(product.growth).toFixed(1)}%\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"products\" className=\"space-y-6\">\n          {/* Category Distribution */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Phân bố theo danh mục</CardTitle>\n              <CardDescription>\n                Tỷ lệ doanh số theo từng danh mục sản phẩm\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <ResponsiveContainer width=\"100%\" height={400}>\n                <PieChart>\n                  <Pie\n                    data={categoryData}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    labelLine={false}\n                    label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n                    outerRadius={120}\n                    fill=\"#8884d8\"\n                    dataKey=\"value\"\n                  >\n                    {categoryData.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={entry.color} />\n                    ))}\n                  </Pie>\n                  <Tooltip />\n                </PieChart>\n              </ResponsiveContainer>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"traffic\" className=\"space-y-6\">\n          {/* Traffic Analytics */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Lưu lượng truy cập</CardTitle>\n              <CardDescription>\n                Số lượt xem trang và khách truy cập duy nhất\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <ResponsiveContainer width=\"100%\" height={400}>\n                <LineChart data={trafficData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"date\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend />\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"pageViews\"\n                    stroke=\"#8884d8\"\n                    strokeWidth={2}\n                    name=\"Lượt xem trang\"\n                  />\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"uniqueVisitors\"\n                    stroke=\"#82ca9d\"\n                    strokeWidth={2}\n                    name=\"Khách duy nhất\"\n                  />\n                </LineChart>\n              </ResponsiveContainer>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"users\" className=\"space-y-6\">\n          {/* User Analytics */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Người dùng mới vs Cũ</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <ResponsiveContainer width=\"100%\" height={300}>\n                  <PieChart>\n                    <Pie\n                      data={[\n                        { name: 'Người dùng mới', value: 65, color: '#8884d8' },\n                        { name: 'Người dùng cũ', value: 35, color: '#82ca9d' }\n                      ]}\n                      cx=\"50%\"\n                      cy=\"50%\"\n                      outerRadius={80}\n                      dataKey=\"value\"\n                      label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\n                    >\n                      <Cell fill=\"#8884d8\" />\n                      <Cell fill=\"#82ca9d\" />\n                    </Pie>\n                    <Tooltip />\n                  </PieChart>\n                </ResponsiveContainer>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Thiết bị truy cập</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {[\n                    { device: 'Desktop', percentage: 45, users: 12500 },\n                    { device: 'Mobile', percentage: 40, users: 11200 },\n                    { device: 'Tablet', percentage: 15, users: 4200 }\n                  ].map((item, index) => (\n                    <div key={index} className=\"space-y-2\">\n                      <div className=\"flex justify-between text-sm\">\n                        <span>{item.device}</span>\n                        <span className=\"font-medium\">{formatNumber(item.users)} người dùng</span>\n                      </div>\n                      <Progress value={item.percentage} className=\"h-2\" />\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* User Behavior Table */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Hành vi người dùng</CardTitle>\n              <CardDescription>\n                Phân tích cách người dùng tương tác với website\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {userBehaviorData.map((page, index) => (\n                  <div key={index} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                    <div>\n                      <h4 className=\"font-medium\">{page.page}</h4>\n                      <p className=\"text-sm text-muted-foreground\">\n                        {formatNumber(page.views)} lượt xem\n                      </p>\n                    </div>\n                    <div className=\"flex items-center space-x-6 text-sm\">\n                      <div className=\"text-center\">\n                        <div className=\"font-medium\">{page.avgTime}</div>\n                        <div className=\"text-muted-foreground\">Thời gian TB</div>\n                      </div>\n                      <div className=\"text-center\">\n                        <div className=\"font-medium\">{page.exitRate}%</div>\n                        <div className=\"text-muted-foreground\">Tỷ lệ thoát</div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"geography\" className=\"space-y-6\">\n          {/* Geographic Performance */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <MapPin className=\"h-5 w-5\" />\n                  Doanh thu theo khu vực\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <ResponsiveContainer width=\"100%\" height={300}>\n                  <BarChart data={geographicData}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"region\" />\n                    <YAxis />\n                    <Tooltip formatter={(value) => formatCurrency(value as number)} />\n                    <Bar dataKey=\"revenue\" fill=\"#8884d8\" />\n                  </BarChart>\n                </ResponsiveContainer>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Top thành phố</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {[\n                    { city: 'Hồ Chí Minh', users: 8500, orders: 1200, revenue: 2400000 },\n                    { city: 'Hà Nội', users: 7200, orders: 980, revenue: 1950000 },\n                    { city: 'Đà Nẵng', users: 3400, orders: 450, revenue: 890000 },\n                    { city: 'Cần Thơ', users: 2100, orders: 280, revenue: 560000 },\n                    { city: 'Hải Phòng', users: 1800, orders: 220, revenue: 440000 }\n                  ].map((city, index) => (\n                    <div key={index} className=\"flex items-center justify-between p-3 border rounded-lg\">\n                      <div>\n                        <h4 className=\"font-medium\">{city.city}</h4>\n                        <p className=\"text-sm text-muted-foreground\">\n                          {formatNumber(city.users)} người dùng • {formatNumber(city.orders)} đơn hàng\n                        </p>\n                      </div>\n                      <div className=\"text-right\">\n                        <div className=\"font-semibold\">{formatCurrency(city.revenue)}</div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Regional Performance Table */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Hiệu suất theo khu vực</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>Khu vực</TableHead>\n                    <TableHead>Người dùng</TableHead>\n                    <TableHead>Đơn hàng</TableHead>\n                    <TableHead>Doanh thu</TableHead>\n                    <TableHead>Tỷ lệ chuyển đổi</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {geographicData.map((region, index) => {\n                    const conversionRate = ((region.orders / region.users) * 100).toFixed(1);\n                    return (\n                      <TableRow key={index}>\n                        <TableCell className=\"font-medium\">{region.region}</TableCell>\n                        <TableCell>{formatNumber(region.users)}</TableCell>\n                        <TableCell>{formatNumber(region.orders)}</TableCell>\n                        <TableCell>{formatCurrency(region.revenue)}</TableCell>\n                        <TableCell>\n                          <Badge variant=\"outline\">{conversionRate}%</Badge>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </Table>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default Analytics;","import React from 'react';\nimport { Database, Users, ShoppingCart, AlertTriangle, Settings, Bug, BarChart3, Shield } from 'lucide-react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Badge } from '@/components/ui/badge';\nimport ErrorLoggerDashboard from '@/components/ErrorLoggerDashboard';\nimport SentryTestPage from '@/components/SentryTestPage';\nimport UserManagement from '@/components/admin/UserManagement';\nimport OrderManagement from '@/components/admin/OrderManagement';\nimport ProductManagement from '@/components/admin/ProductManagement';\nimport Analytics from '@/components/admin/Analytics';\n\nconst Admin: React.FC = () => {\n  // AdminRoute đã xử lý việc kiểm tra quyền admin\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"mb-8\">\n          <div className=\"flex items-center gap-3 mb-2\">\n            <Shield className=\"h-8 w-8 text-blue-600\" />\n            <h1 className=\"text-3xl font-bold\">Bảng điều khiển quản trị</h1>\n            <Badge variant=\"secondary\">Admin</Badge>\n          </div>\n          <p className=\"text-muted-foreground\">\n            Quản lý và giám sát hệ thống Yapee Vietnam\n          </p>\n        </div>\n\n        <Tabs defaultValue=\"overview\" className=\"w-full\">\n          <TabsList className=\"grid w-full grid-cols-8\">\n            <TabsTrigger value=\"overview\">Tổng quan</TabsTrigger>\n            <TabsTrigger value=\"errors\">Lỗi hệ thống</TabsTrigger>\n            <TabsTrigger value=\"sentry\">Sentry Test</TabsTrigger>\n            <TabsTrigger value=\"users\">Người dùng</TabsTrigger>\n            <TabsTrigger value=\"orders\">Đơn hàng</TabsTrigger>\n            <TabsTrigger value=\"products\">Sản phẩm</TabsTrigger>\n            <TabsTrigger value=\"analytics\">Phân tích</TabsTrigger>\n            <TabsTrigger value=\"settings\">Cài đặt</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"overview\" className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Tổng người dùng</CardTitle>\n                  <Users className=\"h-4 w-4 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">1,234</div>\n                  <p className=\"text-xs text-muted-foreground\">\n                    +12% so với tháng trước\n                  </p>\n                </CardContent>\n              </Card>\n              \n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Đơn hàng hôm nay</CardTitle>\n                  <ShoppingCart className=\"h-4 w-4 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">89</div>\n                  <p className=\"text-xs text-muted-foreground\">\n                    +5% so với hôm qua\n                  </p>\n                </CardContent>\n              </Card>\n              \n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Doanh thu tháng</CardTitle>\n                  <Database className=\"h-4 w-4 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">₫45.2M</div>\n                  <p className=\"text-xs text-muted-foreground\">\n                    +18% so với tháng trước\n                  </p>\n                </CardContent>\n              </Card>\n              \n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Lỗi hệ thống</CardTitle>\n                  <AlertTriangle className=\"h-4 w-4 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">3</div>\n                  <p className=\"text-xs text-muted-foreground\">\n                    Trong 24h qua\n                  </p>\n                </CardContent>\n              </Card>\n            </div>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Hoạt động gần đây</CardTitle>\n                  <CardDescription>\n                    Các hoạt động quan trọng trong hệ thống\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                      <div className=\"flex-1\">\n                        <p className=\"text-sm font-medium\">Đơn hàng #12345 đã được thanh toán</p>\n                        <p className=\"text-xs text-muted-foreground\">2 phút trước</p>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"w-2 h-2 bg-blue-500 rounded-full\"></div>\n                      <div className=\"flex-1\">\n                        <p className=\"text-sm font-medium\">Người dùng mới đăng ký</p>\n                        <p className=\"text-xs text-muted-foreground\">5 phút trước</p>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"w-2 h-2 bg-yellow-500 rounded-full\"></div>\n                      <div className=\"flex-1\">\n                        <p className=\"text-sm font-medium\">Sản phẩm hết hàng: iPhone 15</p>\n                        <p className=\"text-xs text-muted-foreground\">10 phút trước</p>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"w-2 h-2 bg-red-500 rounded-full\"></div>\n                      <div className=\"flex-1\">\n                        <p className=\"text-sm font-medium\">Lỗi thanh toán VNPay</p>\n                        <p className=\"text-xs text-muted-foreground\">15 phút trước</p>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle>Trạng thái hệ thống</CardTitle>\n                  <CardDescription>\n                    Tình trạng các dịch vụ quan trọng\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium\">API Server</span>\n                      <Badge variant=\"default\" className=\"bg-green-500\">\n                        Hoạt động\n                      </Badge>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium\">Database</span>\n                      <Badge variant=\"default\" className=\"bg-green-500\">\n                        Hoạt động\n                      </Badge>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium\">VNPay Gateway</span>\n                      <Badge variant=\"default\" className=\"bg-green-500\">\n                        Hoạt động\n                      </Badge>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium\">MoMo Gateway</span>\n                      <Badge variant=\"secondary\">\n                        Bảo trì\n                      </Badge>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium\">Email Service</span>\n                      <Badge variant=\"default\" className=\"bg-green-500\">\n                        Hoạt động\n                      </Badge>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"errors\">\n            <ErrorLoggerDashboard />\n          </TabsContent>\n\n          <TabsContent value=\"sentry\" className=\"space-y-6\">\n            <SentryTestPage />\n          </TabsContent>\n\n          <TabsContent value=\"users\" className=\"space-y-6\">\n            <UserManagement />\n          </TabsContent>\n\n          <TabsContent value=\"orders\" className=\"space-y-6\">\n            <OrderManagement />\n          </TabsContent>\n\n          <TabsContent value=\"products\" className=\"space-y-6\">\n            <ProductManagement />\n          </TabsContent>\n\n          <TabsContent value=\"analytics\" className=\"space-y-6\">\n            <Analytics />\n          </TabsContent>\n\n          <TabsContent value=\"settings\" className=\"space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Cài đặt hệ thống</CardTitle>\n                <CardDescription>\n                  Cấu hình các thông số hệ thống\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h4 className=\"text-sm font-medium\">Chế độ bảo trì</h4>\n                      <p className=\"text-xs text-muted-foreground\">\n                        Tạm dừng hoạt động của website\n                      </p>\n                    </div>\n                    <Badge variant=\"outline\">Tắt</Badge>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h4 className=\"text-sm font-medium\">Ghi log chi tiết</h4>\n                      <p className=\"text-xs text-muted-foreground\">\n                        Ghi lại tất cả hoạt động của hệ thống\n                      </p>\n                    </div>\n                    <Badge variant=\"default\" className=\"bg-green-500\">Bật</Badge>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h4 className=\"text-sm font-medium\">Thông báo email</h4>\n                      <p className=\"text-xs text-muted-foreground\">\n                        Gửi email thông báo khi có lỗi nghiêm trọng\n                      </p>\n                    </div>\n                    <Badge variant=\"default\" className=\"bg-green-500\">Bật</Badge>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n      </div>\n    </div>\n  );\n};\n\nexport default Admin;"],"names":["Activity","createLucideIcon","Ban","Bug","Copy","Image","Network","TrendingDown","UserCheck","ErrorLoggerDashboard","className","logs","setLogs","useState","stats","setStats","selectedLog","setSelectedLog","showDetails","setShowDetails","useEffect","loadData","errorLogger","handleClearLogs","handleExportLogs","toggleDetails","logId","prev","getErrorTypeColor","type","formatTimestamp","timestamp","jsx","jsxs","Card","CardHeader","CardTitle","AlertTriangle","CardDescription","Button","RefreshCw","Download","Trash2","CardContent","Tabs","TabsList","TabsTrigger","TabsContent","log","Badge","Eye","EyeOff","count","SentryTestPage","testResults","setTestResults","handleError","useErrorHandler","addResult","message","testJavaScriptError","error","testReactError","testNetworkError","testAuthError","testPaymentError","testCaptureMessage","captureMessage","testBreadcrumbs","addBreadcrumb","captureError","testUserContext","setUserContext","clearResults","Zap","CreditCard","result","index","Table","React.forwardRef","props","ref","cn","TableHeader","TableBody","TableFooter","TableRow","TableHead","TableCell","TableCaption","mockUsers","formatCurrency","amount","formatDate","dateString","getInitials","fullName","name","getStatusBadgeVariant","status","getRoleBadgeVariant","role","useUserManagement","users","setUsers","loading","setLoading","setError","resolve","userId","user","format","UserManagement","onUserSelect","toast","useToast","fetchUsers","updateUserStatus","updateUserRole","deleteUser","exportUsers","searchTerm","setSearchTerm","statusFilter","setStatusFilter","roleFilter","setRoleFilter","sortBy","setSortBy","sortOrder","setSortOrder","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","selectedUsers","setSelectedUsers","selectedUser","setSelectedUser","isViewDialogOpen","setIsViewDialogOpen","isEditDialogOpen","setIsEditDialogOpen","isDeleteDialogOpen","setIsDeleteDialogOpen","isBulkActionDialogOpen","setIsBulkActionDialogOpen","bulkAction","setBulkAction","isExporting","setIsExporting","isExportDialogOpen","setIsExportDialogOpen","exportFormat","setExportFormat","exportRange","setExportRange","filteredAndSortedUsers","React","filtered","matchesSearch","matchesStatus","matchesRole","a","b","aValue","bValue","totalPages","paginatedUsers","handleSelectUser","id","handleSelectAllUsers","handleViewUser","handleEditUser","handleDeleteUser","handleStatusChange","newStatus","handleBulkAction","handleExport","userStats","u","Alert","AlertDescription","Users","ShoppingBag","Shield","Search","Input","e","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","value","Avatar","AvatarImage","AvatarFallback","Fragment","CheckCircle","XCircle","DropdownMenu","DropdownMenuTrigger","MoreHorizontal","DropdownMenuContent","DropdownMenuItem","Edit","DropdownMenuSeparator","_","i","page","distance","array","showEllipsis","Dialog","DialogContent","DialogHeader","DialogTitle","Separator","Label","address","Textarea","Switch","DialogFooter","data","supabase","DialogDescription","OrderManagement","onOrderSelect","orders","setOrders","filteredOrders","setFilteredOrders","isLoading","setIsLoading","paymentStatusFilter","setPaymentStatusFilter","paymentMethodFilter","setPaymentMethodFilter","dateRange","setDateRange","isDetailDialogOpen","setIsDetailDialogOpen","isUpdateStatusDialogOpen","setIsUpdateStatusDialogOpen","selectedOrder","setSelectedOrder","setNewStatus","statusNote","setStatusNote","loadOrders","filterAndSortOrders","response","order","_a","now","startDate","handleUpdateOrderStatus","handleExportOrders","blob","url","openDetailDialog","openUpdateStatusDialog","getStatusBadge","getPaymentStatusBadge","getPaymentMethodLabel","method","formatPrice","price","startIndex","endIndex","currentOrders","o","sum","field","Truck","item","DropdownMenuLabel","Package","OrderDetailView","User","Mail","Phone","MapPin","event","Clock","ProductForm","formData","setFormData","categories","isEdit","updateFormData","updateNestedFormData","parent","category","checked","_b","_c","_d","_e","_f","_g","t","_h","_i","_j","ProductManagement","onProductSelect","products","setProducts","filteredProducts","setFilteredProducts","categoryFilter","setCategoryFilter","isCreateDialogOpen","setIsCreateDialogOpen","selectedProduct","setSelectedProduct","loadProducts","filterAndSortProducts","product","handleCreateProduct","resetForm","handleUpdateProduct","handleDeleteProduct","handleToggleStatus","handleToggleFeatured","openEditDialog","openDeleteDialog","getInventoryStatus","quantity","lowStockThreshold","currentProducts","Upload","DialogTrigger","Plus","ImageIcon","Star","salesData","categoryData","trafficData","topProducts","userBehaviorData","overviewStats","recentActivity","geographicData","userMetrics","formatNumber","num","formatPercentage","formatTime","getActivityIcon","ShoppingCart","getActivityColor","useAnalytics","range","Analytics","fetchAnalytics","exportData","currentMonth","previousMonth","getGrowthIcon","growth","TrendingUp","getGrowthColor","stat","Icon","DollarSign","Progress","activity","metric","region","ResponsiveContainer","AreaChart","CartesianGrid","XAxis","YAxis","Tooltip","Legend","Area","Bar","PieChart","Pie","percent","entry","Cell","LineChart","Line","BarChart","city","conversionRate","Admin","Database"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7]}