{"version":3,"file":"ForgotPasswordPage-DEcOZM5r.js","sources":["../../src/pages/auth/ForgotPasswordPage.tsx"],"sourcesContent":["/**\n * YAPEE VIETNAM CLONE - FORGOT PASSWORD PAGE\n * \n * Trang quên mật khẩu với gửi email reset\n * Tích hợp với AuthService và SecurityService\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Mail, CheckCircle, Clock } from 'lucide-react';\nimport { toast } from 'sonner';\n\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport AuthLayout from '@/components/layout/AuthLayout';\n\nimport { authService } from '@/services/authService';\nimport { securityService } from '@/services/securityService';\n\ninterface ForgotPasswordFormData {\n  email: string;\n}\n\ninterface ForgotPasswordFormErrors {\n  email?: string;\n  general?: string;\n}\n\nconst ForgotPasswordPage: React.FC = () => {\n  const navigate = useNavigate();\n  \n  // Form state\n  const [formData, setFormData] = useState<ForgotPasswordFormData>({\n    email: ''\n  });\n  \n  const [errors, setErrors] = useState<ForgotPasswordFormErrors>({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isEmailSent, setIsEmailSent] = useState(false);\n  const [countdown, setCountdown] = useState(0);\n  \n  // Clear errors khi user thay đổi input\n  useEffect(() => {\n    if (Object.keys(errors).length > 0) {\n      setErrors({});\n    }\n  }, [formData]);\n\n  // Countdown timer cho resend email\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n    if (countdown > 0) {\n      timer = setTimeout(() => setCountdown(countdown - 1), 1000);\n    }\n    return () => clearTimeout(timer);\n  }, [countdown]);\n\n  /**\n   * Validate form data\n   */\n  const validateForm = (): boolean => {\n    const newErrors: ForgotPasswordFormErrors = {};\n\n    // Email validation\n    if (!formData.email.trim()) {\n      newErrors.email = 'Vui lòng nhập email';\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      newErrors.email = 'Email không hợp lệ';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  /**\n   * Handle input change\n   */\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  /**\n   * Handle form submit\n   */\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    setIsSubmitting(true);\n    setErrors({});\n\n    try {\n      // Security check\n      if (!securityService.checkRateLimit(formData.email, 'forgot-password')) {\n        setErrors({ general: 'Quá nhiều yêu cầu. Vui lòng thử lại sau.' });\n        return;\n      }\n\n      // Send reset email\n      const result = await authService.forgotPassword(formData.email);\n      \n      if (!result.error) {\n        setIsEmailSent(true);\n        setCountdown(60); // 60 seconds countdown\n        toast.success('Email khôi phục đã được gửi!');\n      } else {\n        setErrors({ general: result.error || 'Có lỗi xảy ra, vui lòng thử lại' });\n      }\n    } catch (error) {\n      console.error('Forgot password error:', error);\n      setErrors({ general: 'Có lỗi xảy ra, vui lòng thử lại sau' });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  /**\n   * Handle resend email\n   */\n  const handleResendEmail = async () => {\n    if (countdown > 0 || isSubmitting) return;\n\n    setIsSubmitting(true);\n    try {\n      const result = await authService.forgotPassword(formData.email);\n      if (!result.error) {\n        setCountdown(60);\n        toast.success('Email đã được gửi lại!');\n      } else {\n        toast.error('Không thể gửi lại email, vui lòng thử lại');\n      }\n    } catch (error) {\n      toast.error('Có lỗi xảy ra');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  /**\n   * Handle back to form\n   */\n  const handleBackToForm = () => {\n    setIsEmailSent(false);\n    setCountdown(0);\n    setFormData({ email: '' });\n    setErrors({});\n  };\n\n  return (\n    <AuthLayout \n      title=\"Khôi phục tài khoản\"\n      subtitle=\"Đừng lo lắng, chúng tôi sẽ giúp bạn lấy lại quyền truy cập\"\n    >\n      <Card className=\"shadow-xl border-0\">\n        <CardHeader className=\"text-center pb-6\">\n          <div className=\"mx-auto w-16 h-16 bg-gradient-to-r from-orange-500 to-red-500 rounded-full flex items-center justify-center mb-4\">\n            {isEmailSent ? (\n              <CheckCircle className=\"w-8 h-8 text-white\" />\n            ) : (\n              <Mail className=\"w-8 h-8 text-white\" />\n            )}\n          </div>\n          <CardTitle className=\"text-2xl font-bold text-gray-800\">\n            {isEmailSent ? 'Email đã được gửi!' : 'Quên mật khẩu?'}\n          </CardTitle>\n          <CardDescription className=\"text-gray-600\">\n            {isEmailSent \n              ? 'Vui lòng kiểm tra email để đặt lại mật khẩu'\n              : 'Nhập email để nhận liên kết đặt lại mật khẩu'\n            }\n          </CardDescription>\n        </CardHeader>\n\n        <CardContent className=\"space-y-6\">\n          {!isEmailSent ? (\n            <>\n              {/* General error */}\n              {errors.general && (\n                <Alert variant=\"destructive\">\n                  <AlertDescription>{errors.general}</AlertDescription>\n                </Alert>\n              )}\n\n              <form onSubmit={handleSubmit} className=\"space-y-4\">\n                {/* Email field */}\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"email\" className=\"text-gray-700 font-medium\">\n                    Email đăng ký\n                  </Label>\n                  <Input\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    value={formData.email}\n                    onChange={handleInputChange}\n                    placeholder=\"Nhập email của bạn\"\n                    className={`h-12 ${errors.email ? 'border-red-500 focus:border-red-500' : ''}`}\n                    disabled={isSubmitting}\n                  />\n                  {errors.email && (\n                    <p className=\"text-red-500 text-sm\">{errors.email}</p>\n                  )}\n                </div>\n\n                {/* Submit button */}\n                <Button\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                  className=\"w-full h-12 bg-gradient-to-r from-orange-500 to-red-500 hover:from-orange-600 hover:to-red-600 text-white font-semibold\"\n                >\n                  {isSubmitting ? 'Đang gửi...' : 'Gửi email khôi phục'}\n                </Button>\n              </form>\n\n              {/* Back to login */}\n              <div className=\"text-center pt-4 border-t\">\n                <Link\n                  to=\"/login\"\n                  className=\"text-gray-600 hover:text-gray-800 text-sm\"\n                >\n                  ← Quay lại trang đăng nhập\n                </Link>\n              </div>\n            </>\n          ) : (\n            <>\n              <Alert className=\"border-green-200 bg-green-50\">\n                <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                <AlertDescription className=\"text-green-800\">\n                  Email khôi phục đã được gửi đến <strong>{formData.email}</strong>\n                </AlertDescription>\n              </Alert>\n\n              <div className=\"space-y-4\">\n                <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                  <h4 className=\"font-medium text-blue-800 mb-2\">Hướng dẫn tiếp theo:</h4>\n                  <ul className=\"text-sm text-blue-700 space-y-1\">\n                    <li>1. Kiểm tra hộp thư đến của bạn</li>\n                    <li>2. Tìm email từ Yapee (kiểm tra cả thư mục spam)</li>\n                    <li>3. Nhấp vào liên kết trong email</li>\n                    <li>4. Tạo mật khẩu mới</li>\n                  </ul>\n                </div>\n\n                {/* Resend email */}\n                <div className=\"text-center\">\n                  <p className=\"text-gray-600 text-sm mb-3\">\n                    Không nhận được email?\n                  </p>\n                  <Button\n                    variant=\"outline\"\n                    onClick={handleResendEmail}\n                    disabled={countdown > 0 || isSubmitting}\n                    className=\"w-full\"\n                  >\n                    {countdown > 0 ? (\n                      <>\n                        <Clock className=\"w-4 h-4 mr-2\" />\n                        Gửi lại sau {countdown}s\n                      </>\n                    ) : (\n                      'Gửi lại email'\n                    )}\n                  </Button>\n                </div>\n\n                {/* Change email */}\n                <div className=\"text-center\">\n                  <Button\n                    variant=\"ghost\"\n                    onClick={handleBackToForm}\n                    className=\"text-orange-600 hover:text-orange-700\"\n                  >\n                    Sử dụng email khác\n                  </Button>\n                </div>\n\n                {/* Back to login */}\n                <div className=\"text-center pt-4 border-t\">\n                  <Link\n                    to=\"/login\"\n                    className=\"text-gray-600 hover:text-gray-800 text-sm\"\n                  >\n                    ← Quay lại trang đăng nhập\n                  </Link>\n                </div>\n              </div>\n            </>\n          )}\n        </CardContent>\n      </Card>\n    </AuthLayout>\n  );\n};\n\nexport default ForgotPasswordPage;"],"names":["ForgotPasswordPage","useNavigate","formData","setFormData","useState","errors","setErrors","isSubmitting","setIsSubmitting","isEmailSent","setIsEmailSent","countdown","setCountdown","useEffect","timer","validateForm","newErrors","handleInputChange","e","name","value","prev","handleSubmit","securityService","result","authService","toast","error","handleResendEmail","handleBackToForm","jsx","AuthLayout","jsxs","Card","CardHeader","CheckCircle","Mail","CardTitle","CardDescription","CardContent","Fragment","Alert","AlertDescription","Button","Clock","Link","Label","Input"],"mappings":"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"}