{"version":3,"file":"Checkout-Cio8j-DH.js","sources":["../../node_modules/lucide-react/dist/esm/icons/banknote.js","../../src/components/checkout/AddressSelection.tsx","../../src/components/checkout/ShippingMethod.tsx","../../src/components/checkout/PaymentMethod.tsx","../../src/components/checkout/CouponInput.tsx","../../src/pages/Checkout.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Banknote = createLucideIcon(\"Banknote\", [\n  [\"rect\", { width: \"20\", height: \"12\", x: \"2\", y: \"6\", rx: \"2\", key: \"9lu3g6\" }],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"2\", key: \"1c9p78\" }],\n  [\"path\", { d: \"M6 12h.01M18 12h.01\", key: \"113zkx\" }]\n]);\n\nexport { Banknote as default };\n//# sourceMappingURL=banknote.js.map\n","import React, { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from '@/components/ui/dialog';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { MapPin, Plus, Edit, Trash2 } from 'lucide-react';\nimport { supabase } from '@/lib/supabase';\n\n// Interface cho địa chỉ giao hàng\ninterface Address {\n  id: string;\n  name: string; // Tên người nhận\n  phone: string; // Số điện thoại\n  address: string; // Địa chỉ chi tiết\n  ward: string; // Phường/Xã\n  district: string; // Quận/Huyện\n  province: string; // Tỉnh/Thành phố\n  isDefault: boolean; // Địa chỉ mặc định\n}\n\ninterface AddressSelectionProps {\n  selectedAddress: Address | null;\n  onAddressSelect: (address: Address) => void;\n  onNext: () => void;\n}\n\n/**\n * Component chọn địa chỉ giao hàng\n * Hiển thị danh sách địa chỉ đã lưu và cho phép chọn/thêm mới\n */\nconst AddressSelection: React.FC<AddressSelectionProps> = ({\n  selectedAddress,\n  onAddressSelect,\n  onNext\n}) => {\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [editingAddress, setEditingAddress] = useState<Address | null>(null);\n  const [showDeleteDialog, setShowDeleteDialog] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  \n  // Hàm xử lý edit address\n  const handleEditAddress = async (updatedAddress: Address) => {\n    setIsLoading(true);\n    try {\n      const { error } = await supabase\n        .from('user_addresses')\n        .update({\n          name: updatedAddress.name,\n          phone: updatedAddress.phone,\n          address: updatedAddress.address,\n          ward: updatedAddress.ward,\n          district: updatedAddress.district,\n          province: updatedAddress.province,\n          is_default: updatedAddress.isDefault,\n          updated_at: new Date().toISOString()\n        })\n        .eq('id', updatedAddress.id);\n\n      if (error) {\n        console.error('Lỗi cập nhật địa chỉ:', error);\n        alert('Có lỗi xảy ra khi cập nhật địa chỉ');\n      } else {\n        console.log('Cập nhật địa chỉ thành công');\n        setEditingAddress(null);\n        // Reload addresses - trong thực tế nên refetch data\n        window.location.reload();\n      }\n    } catch (err) {\n      console.error('Lỗi:', err);\n      alert('Có lỗi xảy ra');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Hàm xử lý delete address\n  const handleDeleteAddress = async (addressId: string) => {\n    setIsLoading(true);\n    try {\n      const { error } = await supabase\n        .from('user_addresses')\n        .delete()\n        .eq('id', addressId);\n\n      if (error) {\n        console.error('Lỗi xóa địa chỉ:', error);\n        alert('Có lỗi xảy ra khi xóa địa chỉ');\n      } else {\n        console.log('Xóa địa chỉ thành công');\n        setShowDeleteDialog(null);\n        // Reload addresses - trong thực tế nên refetch data\n        window.location.reload();\n      }\n    } catch (err) {\n      console.error('Lỗi:', err);\n      alert('Có lỗi xảy ra');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  // Mock data - trong thực tế sẽ lấy từ API\n  const [addresses] = useState<Address[]>([\n    {\n      id: '1',\n      name: 'Nguyễn Văn A',\n      phone: '0123456789',\n      address: '123 Đường ABC, Phường XYZ',\n      ward: 'Phường 1',\n      district: 'Quận 1',\n      province: 'TP. Hồ Chí Minh',\n      isDefault: true\n    },\n    {\n      id: '2',\n      name: 'Nguyễn Văn B',\n      phone: '0987654321',\n      address: '456 Đường DEF, Phường UVW',\n      ward: 'Phường 2',\n      district: 'Quận 3',\n      province: 'TP. Hồ Chí Minh',\n      isDefault: false\n    }\n  ]);\n\n  /**\n   * Xử lý chọn địa chỉ\n   */\n  const handleSelectAddress = (address: Address) => {\n    onAddressSelect(address);\n  };\n\n  /**\n   * Xử lý tiếp tục với địa chỉ đã chọn\n   */\n  const handleContinue = () => {\n    if (selectedAddress) {\n      onNext();\n    }\n  };\n\n  /**\n   * Format địa chỉ đầy đủ\n   */\n  const formatFullAddress = (address: Address) => {\n    return `${address.address}, ${address.ward}, ${address.district}, ${address.province}`;\n  };\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <MapPin className=\"h-5 w-5\" />\n            Địa chỉ giao hàng\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {/* Danh sách địa chỉ */}\n          <div className=\"space-y-3\">\n            {addresses.map((address) => (\n              <div\n                key={address.id}\n                className={`p-4 border rounded-lg cursor-pointer transition-colors ${\n                  selectedAddress?.id === address.id\n                    ? 'border-blue-500 bg-blue-50'\n                    : 'border-gray-200 hover:border-gray-300'\n                }`}\n                onClick={() => handleSelectAddress(address)}\n              >\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      <h4 className=\"font-medium\">{address.name}</h4>\n                      <span className=\"text-gray-600\">|</span>\n                      <span className=\"text-gray-600\">{address.phone}</span>\n                      {address.isDefault && (\n                        <Badge variant=\"secondary\" className=\"text-xs\">\n                          Mặc định\n                        </Badge>\n                      )}\n                    </div>\n                    <p className=\"text-sm text-gray-600\">\n                      {formatFullAddress(address)}\n                    </p>\n                  </div>\n                  \n                  {/* Action buttons */}\n                  <div className=\"flex gap-2 ml-4\">\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        setEditingAddress(address);\n                      }}\n                    >\n                      <Edit className=\"h-4 w-4\" />\n                    </Button>\n                    {!address.isDefault && (\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          setShowDeleteDialog(address.id);\n                        }}\n                      >\n                        <Trash2 className=\"h-4 w-4\" />\n                      </Button>\n                    )}\n                  </div>\n                </div>\n                \n                {/* Radio button indicator */}\n                <div className=\"flex items-center mt-3\">\n                  <div className={`w-4 h-4 rounded-full border-2 flex items-center justify-center ${\n                    selectedAddress?.id === address.id\n                      ? 'border-blue-500'\n                      : 'border-gray-300'\n                  }`}>\n                    {selectedAddress?.id === address.id && (\n                      <div className=\"w-2 h-2 rounded-full bg-blue-500\" />\n                    )}\n                  </div>\n                  <span className=\"ml-2 text-sm text-gray-600\">\n                    {selectedAddress?.id === address.id ? 'Đã chọn' : 'Chọn địa chỉ này'}\n                  </span>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* Thêm địa chỉ mới */}\n          <Button\n            variant=\"outline\"\n            className=\"w-full\"\n            onClick={() => setShowAddForm(true)}\n          >\n            <Plus className=\"h-4 w-4 mr-2\" />\n            Thêm địa chỉ mới\n          </Button>\n\n          {/* Form thêm địa chỉ mới - placeholder */}\n          {showAddForm && (\n            <Card className=\"border-dashed\">\n              <CardContent className=\"p-4\">\n                <div className=\"text-center py-4\">\n                  <p className=\"text-gray-600 mb-4\">\n                    Form thêm địa chỉ mới sẽ được triển khai ở bước tiếp theo.\n                  </p>\n                  <Button\n                    variant=\"outline\"\n                    onClick={() => setShowAddForm(false)}\n                  >\n                    Đóng\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Continue button */}\n          <div className=\"flex justify-end pt-4\">\n            <Button\n              onClick={handleContinue}\n              disabled={!selectedAddress}\n              className=\"bg-blue-600 hover:bg-blue-700\"\n            >\n              Tiếp tục\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Edit Address Dialog */}\n      <Dialog open={!!editingAddress} onOpenChange={() => setEditingAddress(null)}>\n        <DialogContent className=\"sm:max-w-[425px]\">\n          <DialogHeader>\n            <DialogTitle>Chỉnh sửa địa chỉ</DialogTitle>\n          </DialogHeader>\n          {editingAddress && (\n            <EditAddressForm\n              address={editingAddress}\n              onSave={handleEditAddress}\n              onCancel={() => setEditingAddress(null)}\n              isLoading={isLoading}\n            />\n          )}\n        </DialogContent>\n      </Dialog>\n\n      {/* Delete Confirmation Dialog */}\n      <Dialog open={!!showDeleteDialog} onOpenChange={() => setShowDeleteDialog(null)}>\n        <DialogContent className=\"sm:max-w-[425px]\">\n          <DialogHeader>\n            <DialogTitle>Xác nhận xóa địa chỉ</DialogTitle>\n          </DialogHeader>\n          <div className=\"py-4\">\n            <p className=\"text-sm text-gray-600\">\n              Bạn có chắc chắn muốn xóa địa chỉ này không? Hành động này không thể hoàn tác.\n            </p>\n          </div>\n          <DialogFooter>\n            <Button\n              variant=\"outline\"\n              onClick={() => setShowDeleteDialog(null)}\n              disabled={isLoading}\n            >\n              Hủy\n            </Button>\n            <Button\n              variant=\"destructive\"\n              onClick={() => showDeleteDialog && handleDeleteAddress(showDeleteDialog)}\n              disabled={isLoading}\n            >\n              {isLoading ? 'Đang xóa...' : 'Xóa'}\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n};\n\n// Component form chỉnh sửa địa chỉ\ninterface EditAddressFormProps {\n  address: Address;\n  onSave: (address: Address) => void;\n  onCancel: () => void;\n  isLoading: boolean;\n}\n\nconst EditAddressForm: React.FC<EditAddressFormProps> = ({\n  address,\n  onSave,\n  onCancel,\n  isLoading\n}) => {\n  const [formData, setFormData] = useState<Address>(address);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSave(formData);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div>\n          <Label htmlFor=\"name\">Tên người nhận</Label>\n          <Input\n            id=\"name\"\n            value={formData.name}\n            onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n            required\n          />\n        </div>\n        <div>\n          <Label htmlFor=\"phone\">Số điện thoại</Label>\n          <Input\n            id=\"phone\"\n            value={formData.phone}\n            onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\n            required\n          />\n        </div>\n      </div>\n      \n      <div>\n        <Label htmlFor=\"address\">Địa chỉ chi tiết</Label>\n        <Input\n          id=\"address\"\n          value={formData.address}\n          onChange={(e) => setFormData({ ...formData, address: e.target.value })}\n          required\n        />\n      </div>\n      \n      <div className=\"grid grid-cols-3 gap-4\">\n        <div>\n          <Label htmlFor=\"ward\">Phường/Xã</Label>\n          <Input\n            id=\"ward\"\n            value={formData.ward}\n            onChange={(e) => setFormData({ ...formData, ward: e.target.value })}\n            required\n          />\n        </div>\n        <div>\n          <Label htmlFor=\"district\">Quận/Huyện</Label>\n          <Input\n            id=\"district\"\n            value={formData.district}\n            onChange={(e) => setFormData({ ...formData, district: e.target.value })}\n            required\n          />\n        </div>\n        <div>\n          <Label htmlFor=\"province\">Tỉnh/Thành phố</Label>\n          <Input\n            id=\"province\"\n            value={formData.province}\n            onChange={(e) => setFormData({ ...formData, province: e.target.value })}\n            required\n          />\n        </div>\n      </div>\n      \n      <DialogFooter>\n        <Button type=\"button\" variant=\"outline\" onClick={onCancel} disabled={isLoading}>\n          Hủy\n        </Button>\n        <Button type=\"submit\" disabled={isLoading}>\n          {isLoading ? 'Đang lưu...' : 'Lưu thay đổi'}\n        </Button>\n      </DialogFooter>\n    </form>\n  );\n};\n\nexport default AddressSelection;","import React, { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Truck, Clock, Shield } from 'lucide-react';\nimport { formatPrice } from '@/lib/utils';\n\n// Interface cho phương thức vận chuyển\ninterface ShippingMethod {\n  id: string;\n  name: string; // Tên phương thức\n  description: string; // Mô tả\n  estimatedTime: string; // Thời gian dự kiến\n  fee: number; // Phí vận chuyển\n  icon: React.ComponentType<{ className?: string }>; // Icon\n  features: string[]; // Tính năng đặc biệt\n  isRecommended?: boolean; // Phương thức được khuyến nghị\n}\n\ninterface ShippingMethodProps {\n  selectedMethod: ShippingMethod | null;\n  onMethodSelect: (method: ShippingMethod) => void;\n  onNext: () => void;\n  onPrev: () => void;\n}\n\n/**\n * Component chọn phương thức vận chuyển\n * Hiển thị các tùy chọn vận chuyển với phí và thời gian dự kiến\n */\nconst ShippingMethodSelection: React.FC<ShippingMethodProps> = ({\n  selectedMethod,\n  onMethodSelect,\n  onNext,\n  onPrev\n}) => {\n  // Mock data - trong thực tế sẽ lấy từ API dựa trên địa chỉ giao hàng\n  const [shippingMethods] = useState<ShippingMethod[]>([\n    {\n      id: 'standard',\n      name: 'Giao hàng tiêu chuẩn',\n      description: 'Giao hàng trong giờ hành chính',\n      estimatedTime: '3-5 ngày làm việc',\n      fee: 30000,\n      icon: Truck,\n      features: ['Miễn phí với đơn hàng trên 500k', 'Giao trong giờ hành chính']\n    },\n    {\n      id: 'express',\n      name: 'Giao hàng nhanh',\n      description: 'Giao hàng ưu tiên trong ngày',\n      estimatedTime: '1-2 ngày làm việc',\n      fee: 50000,\n      icon: Clock,\n      features: ['Giao hàng ưu tiên', 'Theo dõi real-time'],\n      isRecommended: true\n    },\n    {\n      id: 'premium',\n      name: 'Giao hàng cao cấp',\n      description: 'Giao hàng trong 24h với bảo hiểm',\n      estimatedTime: 'Trong 24 giờ',\n      fee: 80000,\n      icon: Shield,\n      features: ['Giao trong 24h', 'Bảo hiểm 100%', 'Hỗ trợ 24/7']\n    }\n  ]);\n\n  /**\n   * Xử lý chọn phương thức vận chuyển\n   */\n  const handleSelectMethod = (method: ShippingMethod) => {\n    onMethodSelect(method);\n  };\n\n  /**\n   * Xử lý tiếp tục với phương thức đã chọn\n   */\n  const handleContinue = () => {\n    if (selectedMethod) {\n      onNext();\n    }\n  };\n\n  /**\n   * Kiểm tra xem có miễn phí vận chuyển không\n   */\n  const isFreeShipping = (method: ShippingMethod, orderTotal: number = 0) => {\n    return method.id === 'standard' && orderTotal >= 500000;\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Truck className=\"h-5 w-5\" />\n          Phương thức vận chuyển\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {/* Danh sách phương thức vận chuyển */}\n        <div className=\"space-y-3\">\n          {shippingMethods.map((method) => {\n            const IconComponent = method.icon;\n            const isFree = isFreeShipping(method);\n            \n            return (\n              <div\n                key={method.id}\n                className={`p-4 border rounded-lg cursor-pointer transition-colors relative ${\n                  selectedMethod?.id === method.id\n                    ? 'border-blue-500 bg-blue-50'\n                    : 'border-gray-200 hover:border-gray-300'\n                }`}\n                onClick={() => handleSelectMethod(method)}\n              >\n                {/* Recommended badge */}\n                {method.isRecommended && (\n                  <Badge className=\"absolute -top-2 -right-2 bg-orange-500 hover:bg-orange-600\">\n                    Khuyến nghị\n                  </Badge>\n                )}\n                \n                <div className=\"flex items-start gap-4\">\n                  {/* Icon */}\n                  <div className={`p-3 rounded-lg ${\n                    selectedMethod?.id === method.id\n                      ? 'bg-blue-100 text-blue-600'\n                      : 'bg-gray-100 text-gray-600'\n                  }`}>\n                    <IconComponent className=\"h-6 w-6\" />\n                  </div>\n                  \n                  {/* Content */}\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <h4 className=\"font-medium\">{method.name}</h4>\n                      <div className=\"text-right\">\n                        {isFree ? (\n                          <div>\n                            <span className=\"text-green-600 font-medium\">Miễn phí</span>\n                            <div className=\"text-xs text-gray-500 line-through\">\n                              {formatPrice(method.fee)}\n                            </div>\n                          </div>\n                        ) : (\n                          <span className=\"font-medium\">{formatPrice(method.fee)}</span>\n                        )}\n                      </div>\n                    </div>\n                    \n                    <p className=\"text-sm text-gray-600 mb-2\">{method.description}</p>\n                    \n                    <div className=\"flex items-center gap-4 mb-3\">\n                      <div className=\"flex items-center gap-1 text-sm text-gray-600\">\n                        <Clock className=\"h-4 w-4\" />\n                        <span>{method.estimatedTime}</span>\n                      </div>\n                    </div>\n                    \n                    {/* Features */}\n                    <div className=\"flex flex-wrap gap-2\">\n                      {method.features.map((feature, index) => (\n                        <Badge key={index} variant=\"secondary\" className=\"text-xs\">\n                          {feature}\n                        </Badge>\n                      ))}\n                    </div>\n                  </div>\n                  \n                  {/* Radio button */}\n                  <div className={`w-5 h-5 rounded-full border-2 flex items-center justify-center mt-1 ${\n                    selectedMethod?.id === method.id\n                      ? 'border-blue-500'\n                      : 'border-gray-300'\n                  }`}>\n                    {selectedMethod?.id === method.id && (\n                      <div className=\"w-2.5 h-2.5 rounded-full bg-blue-500\" />\n                    )}\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n\n        {/* Ghi chú vận chuyển */}\n        <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n          <h5 className=\"font-medium text-yellow-800 mb-2\">Lưu ý vận chuyển:</h5>\n          <ul className=\"text-sm text-yellow-700 space-y-1\">\n            <li>• Miễn phí vận chuyển cho đơn hàng từ 500.000đ (áp dụng giao hàng tiêu chuẩn)</li>\n            <li>• Thời gian giao hàng có thể thay đổi tùy theo khu vực</li>\n            <li>• Đơn hàng sẽ được xác nhận qua SMS/Email</li>\n          </ul>\n        </div>\n\n        {/* Action buttons */}\n        <div className=\"flex gap-4 pt-4\">\n          <Button variant=\"outline\" onClick={onPrev} className=\"flex-1\">\n            Quay lại\n          </Button>\n          <Button\n            onClick={handleContinue}\n            disabled={!selectedMethod}\n            className=\"bg-blue-600 hover:bg-blue-700 flex-1\"\n          >\n            Tiếp tục\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ShippingMethodSelection;","import React, { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { CreditCard, Smartphone, Banknote, Shield, Zap } from 'lucide-react';\n\n// Interface cho phương thức thanh toán\ninterface PaymentMethod {\n  id: string;\n  name: string; // Tên phương thức\n  description: string; // Mô tả\n  icon: React.ComponentType<{ className?: string }>; // Icon\n  processingTime: string; // Thời gian xử lý\n  features: string[]; // Tính năng\n  isPopular?: boolean; // Phương thức phổ biến\n  discount?: number; // Giảm giá (nếu có)\n}\n\ninterface PaymentMethodProps {\n  selectedMethod: PaymentMethod | null;\n  onMethodSelect: (method: PaymentMethod) => void;\n  onNext: () => void;\n  onPrev: () => void;\n  orderTotal: number;\n}\n\n/**\n * Component chọn phương thức thanh toán\n * Hiển thị các tùy chọn thanh toán như VNPay, MoMo, COD, etc.\n */\nconst PaymentMethodSelection: React.FC<PaymentMethodProps> = ({\n  selectedMethod,\n  onMethodSelect,\n  onNext,\n  onPrev,\n  orderTotal\n}) => {\n  // Mock data - trong thực tế sẽ lấy từ API\n  const [paymentMethods] = useState<PaymentMethod[]>([\n    {\n      id: 'vnpay',\n      name: 'VNPay',\n      description: 'Thanh toán qua VNPay (ATM, Visa, MasterCard)',\n      icon: CreditCard,\n      processingTime: 'Tức thì',\n      features: ['Bảo mật cao', 'Hỗ trợ nhiều ngân hàng', 'Hoàn tiền nhanh'],\n      isPopular: true\n    },\n    {\n      id: 'momo',\n      name: 'Ví MoMo',\n      description: 'Thanh toán qua ví điện tử MoMo',\n      icon: Smartphone,\n      processingTime: 'Tức thì',\n      features: ['Thanh toán nhanh', 'Tích điểm', 'Ưu đãi độc quyền'],\n      discount: 5 // Giảm 5%\n    },\n    {\n      id: 'zalopay',\n      name: 'ZaloPay',\n      description: 'Thanh toán qua ví điện tử ZaloPay',\n      icon: Zap,\n      processingTime: 'Tức thì',\n      features: ['Bảo mật 2 lớp', 'Cashback', 'Liên kết ngân hàng']\n    },\n    {\n      id: 'banking',\n      name: 'Chuyển khoản ngân hàng',\n      description: 'Chuyển khoản trực tiếp qua Internet Banking',\n      icon: Shield,\n      processingTime: '1-2 giờ',\n      features: ['An toàn tuyệt đối', 'Không phí giao dịch', 'Xác nhận tự động']\n    },\n    {\n      id: 'cod',\n      name: 'Thanh toán khi nhận hàng (COD)',\n      description: 'Thanh toán bằng tiền mặt khi nhận hàng',\n      icon: Banknote,\n      processingTime: 'Khi giao hàng',\n      features: ['Kiểm tra hàng trước khi trả tiền', 'Không cần thẻ ngân hàng', 'Phù hợp mọi đối tượng']\n    }\n  ]);\n\n  /**\n   * Xử lý chọn phương thức thanh toán\n   */\n  const handleSelectMethod = (method: PaymentMethod) => {\n    onMethodSelect(method);\n  };\n\n  /**\n   * Xử lý tiếp tục với phương thức đã chọn\n   */\n  const handleContinue = () => {\n    if (selectedMethod) {\n      onNext();\n    }\n  };\n\n  /**\n   * Tính toán số tiền sau khi giảm giá\n   */\n  const calculateDiscountAmount = (method: PaymentMethod) => {\n    if (method.discount) {\n      return (orderTotal * method.discount) / 100;\n    }\n    return 0;\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <CreditCard className=\"h-5 w-5\" />\n          Phương thức thanh toán\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {/* Danh sách phương thức thanh toán */}\n        <div className=\"space-y-3\">\n          {paymentMethods.map((method) => {\n            const IconComponent = method.icon;\n            const discountAmount = calculateDiscountAmount(method);\n            \n            return (\n              <div\n                key={method.id}\n                className={`p-4 border rounded-lg cursor-pointer transition-colors relative ${\n                  selectedMethod?.id === method.id\n                    ? 'border-blue-500 bg-blue-50'\n                    : 'border-gray-200 hover:border-gray-300'\n                }`}\n                onClick={() => handleSelectMethod(method)}\n              >\n                {/* Popular badge */}\n                {method.isPopular && (\n                  <Badge className=\"absolute -top-2 -right-2 bg-green-500 hover:bg-green-600\">\n                    Phổ biến\n                  </Badge>\n                )}\n                \n                {/* Discount badge */}\n                {method.discount && (\n                  <Badge className=\"absolute -top-2 -left-2 bg-red-500 hover:bg-red-600\">\n                    Giảm {method.discount}%\n                  </Badge>\n                )}\n                \n                <div className=\"flex items-start gap-4\">\n                  {/* Icon */}\n                  <div className={`p-3 rounded-lg ${\n                    selectedMethod?.id === method.id\n                      ? 'bg-blue-100 text-blue-600'\n                      : 'bg-gray-100 text-gray-600'\n                  }`}>\n                    <IconComponent className=\"h-6 w-6\" />\n                  </div>\n                  \n                  {/* Content */}\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <h4 className=\"font-medium\">{method.name}</h4>\n                      <div className=\"text-right\">\n                        <div className=\"text-sm text-gray-600\">\n                          Xử lý: {method.processingTime}\n                        </div>\n                        {discountAmount > 0 && (\n                          <div className=\"text-sm text-green-600 font-medium\">\n                            Tiết kiệm: {discountAmount.toLocaleString('vi-VN')}đ\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    \n                    <p className=\"text-sm text-gray-600 mb-3\">{method.description}</p>\n                    \n                    {/* Features */}\n                    <div className=\"flex flex-wrap gap-2\">\n                      {method.features.map((feature, index) => (\n                        <Badge key={index} variant=\"secondary\" className=\"text-xs\">\n                          {feature}\n                        </Badge>\n                      ))}\n                    </div>\n                  </div>\n                  \n                  {/* Radio button */}\n                  <div className={`w-5 h-5 rounded-full border-2 flex items-center justify-center mt-1 ${\n                    selectedMethod?.id === method.id\n                      ? 'border-blue-500'\n                      : 'border-gray-300'\n                  }`}>\n                    {selectedMethod?.id === method.id && (\n                      <div className=\"w-2.5 h-2.5 rounded-full bg-blue-500\" />\n                    )}\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n\n        {/* Thông tin bảo mật */}\n        <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\n          <div className=\"flex items-center gap-2 mb-2\">\n            <Shield className=\"h-5 w-5 text-green-600\" />\n            <h5 className=\"font-medium text-green-800\">Thanh toán an toàn</h5>\n          </div>\n          <ul className=\"text-sm text-green-700 space-y-1\">\n            <li>• Thông tin thanh toán được mã hóa SSL 256-bit</li>\n            <li>• Không lưu trữ thông tin thẻ tín dụng</li>\n            <li>• Tuân thủ tiêu chuẩn bảo mật PCI DSS</li>\n            <li>• Hỗ trợ hoàn tiền 100% nếu có sự cố</li>\n          </ul>\n        </div>\n\n        {/* Hiển thị thông tin giảm giá nếu có */}\n        {selectedMethod?.discount && (\n          <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h5 className=\"font-medium text-blue-800\">Ưu đãi thanh toán</h5>\n                <p className=\"text-sm text-blue-600\">\n                  Giảm {selectedMethod.discount}% khi thanh toán qua {selectedMethod.name}\n                </p>\n              </div>\n              <div className=\"text-right\">\n                <div className=\"text-lg font-bold text-blue-600\">\n                  -{calculateDiscountAmount(selectedMethod).toLocaleString('vi-VN')}đ\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Action buttons */}\n        <div className=\"flex gap-4 pt-4\">\n          <Button variant=\"outline\" onClick={onPrev} className=\"flex-1\">\n            Quay lại\n          </Button>\n          <Button\n            onClick={handleContinue}\n            disabled={!selectedMethod}\n            className=\"bg-blue-600 hover:bg-blue-700 flex-1\"\n          >\n            Tiếp tục\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default PaymentMethodSelection;","import React, { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Gift, X, Check } from 'lucide-react';\nimport { formatPrice } from '@/lib/utils';\n\ninterface CouponInputProps {\n  onCouponApply: (discount: number, couponCode: string) => void;\n  appliedCoupon?: {\n    code: string;\n    discount: number;\n  } | null;\n  orderTotal: number;\n}\n\n// Dữ liệu mẫu các mã giảm giá\nconst SAMPLE_COUPONS = [\n  {\n    code: 'WELCOME10',\n    discount: 50000,\n    type: 'fixed', // fixed amount\n    description: 'Giảm 50.000đ cho đơn hàng đầu tiên',\n    minOrder: 200000\n  },\n  {\n    code: 'SAVE15',\n    discount: 15,\n    type: 'percent', // percentage\n    description: 'Giảm 15% cho đơn hàng từ 500.000đ',\n    minOrder: 500000\n  },\n  {\n    code: 'FREESHIP',\n    discount: 30000,\n    type: 'shipping', // free shipping\n    description: 'Miễn phí vận chuyển',\n    minOrder: 100000\n  }\n];\n\n/**\n * Component nhập và áp dụng mã giảm giá\n * @param onCouponApply - Callback khi áp dụng mã giảm giá\n * @param appliedCoupon - Mã giảm giá đã áp dụng\n */\nconst CouponInput: React.FC<CouponInputProps> = ({ onCouponApply, appliedCoupon, orderTotal }) => {\n  const [couponCode, setCouponCode] = useState('');\n  const [isApplying, setIsApplying] = useState(false);\n  const [error, setError] = useState('');\n  const [showSuggestions, setShowSuggestions] = useState(false);\n\n  /**\n   * Xử lý áp dụng mã giảm giá\n   */\n  const handleApplyCoupon = async () => {\n    if (!couponCode.trim()) {\n      setError('Vui lòng nhập mã giảm giá');\n      return;\n    }\n\n    setIsApplying(true);\n    setError('');\n\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Tìm mã giảm giá trong danh sách mẫu\n      const coupon = SAMPLE_COUPONS.find(\n        c => c.code.toLowerCase() === couponCode.toLowerCase()\n      );\n\n      if (!coupon) {\n        setError('Mã giảm giá không hợp lệ');\n        return;\n      }\n\n      // Validate minimum order amount\n      if (orderTotal < coupon.minOrder) {\n        setError(`Đơn hàng tối thiểu ${formatPrice(coupon.minOrder)} để sử dụng mã này`);\n        return;\n      }\n\n      // Áp dụng mã giảm giá\n      onCouponApply(coupon.discount, coupon.code);\n      setCouponCode('');\n      setShowSuggestions(false);\n      \n    } catch (error) {\n      setError('Có lỗi xảy ra khi áp dụng mã giảm giá');\n    } finally {\n      setIsApplying(false);\n    }\n  };\n\n  /**\n   * Xử lý xóa mã giảm giá đã áp dụng\n   */\n  const handleRemoveCoupon = () => {\n    onCouponApply(0, '');\n  };\n\n  /**\n   * Xử lý áp dụng mã giảm giá từ gợi ý\n   */\n  const handleSuggestionClick = (code: string) => {\n    setCouponCode(code);\n    setShowSuggestions(false);\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Gift className=\"h-5 w-5\" />\n          Mã giảm giá\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {/* Mã giảm giá đã áp dụng */}\n        {appliedCoupon && (\n          <div className=\"flex items-center justify-between p-3 bg-green-50 border border-green-200 rounded-lg\">\n            <div className=\"flex items-center gap-2\">\n              <Check className=\"h-4 w-4 text-green-600\" />\n              <div>\n                <p className=\"font-medium text-green-800\">{appliedCoupon.code}</p>\n                <p className=\"text-sm text-green-600\">\n                  Giảm {formatPrice(appliedCoupon.discount)}\n                </p>\n              </div>\n            </div>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={handleRemoveCoupon}\n              className=\"text-green-600 hover:text-green-800\"\n            >\n              <X className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        )}\n\n        {/* Form nhập mã giảm giá */}\n        {!appliedCoupon && (\n          <div className=\"space-y-3\">\n            <div className=\"flex gap-2\">\n              <Input\n                placeholder=\"Nhập mã giảm giá\"\n                value={couponCode}\n                onChange={(e) => {\n                  setCouponCode(e.target.value);\n                  setError('');\n                }}\n                onFocus={() => setShowSuggestions(true)}\n                className={error ? 'border-red-500' : ''}\n              />\n              <Button\n                onClick={handleApplyCoupon}\n                disabled={isApplying || !couponCode.trim()}\n                className=\"bg-blue-600 hover:bg-blue-700\"\n              >\n                {isApplying ? 'Đang áp dụng...' : 'Áp dụng'}\n              </Button>\n            </div>\n\n            {/* Hiển thị lỗi */}\n            {error && (\n              <p className=\"text-sm text-red-600\">{error}</p>\n            )}\n\n            {/* Gợi ý mã giảm giá */}\n            {showSuggestions && (\n              <div className=\"space-y-2\">\n                <p className=\"text-sm font-medium text-gray-700\">Mã giảm giá có sẵn:</p>\n                <div className=\"space-y-2\">\n                  {SAMPLE_COUPONS.map((coupon) => (\n                    <div\n                      key={coupon.code}\n                      className=\"flex items-center justify-between p-3 border rounded-lg cursor-pointer hover:bg-gray-50\"\n                      onClick={() => handleSuggestionClick(coupon.code)}\n                    >\n                      <div>\n                        <div className=\"flex items-center gap-2\">\n                          <Badge variant=\"secondary\">{coupon.code}</Badge>\n                          {coupon.type === 'percent' && (\n                            <span className=\"text-sm text-green-600\">-{coupon.discount}%</span>\n                          )}\n                          {coupon.type === 'fixed' && (\n                            <span className=\"text-sm text-green-600\">-{formatPrice(coupon.discount)}</span>\n                          )}\n                          {coupon.type === 'shipping' && (\n                            <span className=\"text-sm text-green-600\">Miễn phí ship</span>\n                          )}\n                        </div>\n                        <p className=\"text-sm text-gray-600\">{coupon.description}</p>\n                        <p className=\"text-xs text-gray-500\">\n                          Đơn tối thiểu: {formatPrice(coupon.minOrder)}\n                        </p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default CouponInput;","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useCart } from '@/contexts/CartContext';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Separator } from '@/components/ui/separator';\nimport { Badge } from '@/components/ui/badge';\nimport { formatPrice } from '@/lib/utils';\nimport { ArrowLeft, MapPin, Truck, CreditCard, Gift } from 'lucide-react';\nimport { paymentService, PaymentRequest } from '@/services/paymentService';\nimport { toast } from 'sonner';\nimport { analytics } from '@/lib/analytics';\nimport AddressSelection from '@/components/checkout/AddressSelection';\nimport ShippingMethodSelection from '@/components/checkout/ShippingMethod';\nimport PaymentMethodSelection from '@/components/checkout/PaymentMethod';\nimport CouponInput from '@/components/checkout/CouponInput';\n\nconst Checkout: React.FC = () => {\n  const navigate = useNavigate();\n  const { state: cartState } = useCart();\n  const [currentStep, setCurrentStep] = useState(1);\n  const [shippingAddress, setShippingAddress] = useState<any>(null);\n  const [shippingMethod, setShippingMethod] = useState<any>(null);\n  const [paymentMethod, setPaymentMethod] = useState<any>(null);\n  const [appliedCoupon, setAppliedCoupon] = useState<{code: string; discount: number} | null>(null);\n\n  // Theo dõi sự kiện bắt đầu thanh toán\n  useEffect(() => {\n    analytics.trackEcommerce('begin_checkout', {\n      currency: 'VND',\n      value: cartState.totalPrice,\n      items: cartState.items.map(item => ({\n        item_id: item.id.toString(),\n        item_name: item.name,\n        item_category: item.category,\n        item_brand: item.brand,\n        price: item.price,\n        quantity: item.quantity\n      }))\n    });\n  }, [cartState]);\n\n  const subtotal = cartState.totalPrice;\n  const shippingFee = shippingMethod?.fee || 0;\n  const paymentDiscount = paymentMethod?.discount ? (subtotal * paymentMethod.discount) / 100 : 0;\n  const couponDiscount = appliedCoupon?.discount || 0;\n  const total = subtotal + shippingFee - couponDiscount - paymentDiscount;\n\n  const handleGoBack = () => {\n    navigate(-1);\n  };\n\n  const handleNextStep = () => {\n    if (currentStep < 4) {\n      setCurrentStep(currentStep + 1);\n    }\n  };\n\n  const handlePrevStep = () => {\n    if (currentStep > 1) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  const handleCouponApply = (discount: number, code: string) => {\n    if (discount > 0 && code) {\n      setAppliedCoupon({ discount, code });\n    } else {\n      setAppliedCoupon(null);\n    }\n  };\n\n  const handlePlaceOrder = async () => {\n    try {\n      if (!shippingAddress || !shippingMethod || !paymentMethod) {\n        toast.error('Vui lòng điền đầy đủ thông tin đặt hàng!');\n        return;\n      }\n\n      const orderId = 'ORD' + Date.now();\n      \n      if (paymentMethod.id === 'cod' || paymentMethod.id === 'bank_transfer') {\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        \n        console.log('Đặt hàng thành công:', {\n          orderId,\n          address: shippingAddress,\n          shipping: shippingMethod,\n          payment: paymentMethod,\n          items: cartState.items,\n          total\n        });\n        \n        // Theo dõi sự kiện mua hàng thành công\n        analytics.trackEcommerce('purchase', {\n          transaction_id: orderId,\n          currency: 'VND',\n          value: total,\n          shipping: shippingFee,\n          payment_type: paymentMethod.id,\n          items: cartState.items.map(item => ({\n            item_id: item.id.toString(),\n            item_name: item.name,\n            item_category: item.category,\n            item_brand: item.brand,\n            price: item.price,\n            quantity: item.quantity\n          }))\n        });\n        \n        toast.success('Đặt hàng thành công!');\n        navigate(`/order-success?orderId=${orderId}`);\n        \n      } else {\n        const paymentRequest: PaymentRequest = {\n          orderId,\n          amount: total,\n          orderInfo: `Thanh toán đơn hàng ${orderId}`,\n          returnUrl: `${window.location.origin}/payment-result?method=${paymentMethod.id}`,\n          cancelUrl: `${window.location.origin}/checkout`,\n          paymentMethod: paymentMethod.id as 'vnpay' | 'momo'\n        };\n        \n        const paymentResponse = await paymentService.processPayment(paymentRequest);\n        \n        if (paymentResponse.success && paymentResponse.paymentUrl) {\n          localStorage.setItem('pendingOrder', JSON.stringify({\n            orderId,\n            address: shippingAddress,\n            shipping: shippingMethod,\n            payment: paymentMethod,\n            items: cartState.items,\n            total\n          }));\n          \n          toast.success('Đang chuyển hướng đến trang thanh toán...');\n          window.location.href = paymentResponse.paymentUrl;\n        } else {\n          throw new Error(paymentResponse.message || 'Không thể tạo liên kết thanh toán');\n        }\n      }\n      \n    } catch (error) {\n      console.error('Error placing order:', error);\n      toast.error(error instanceof Error ? error.message : 'Có lỗi xảy ra khi đặt hàng. Vui lòng thử lại!');\n    }\n  };\n\n  if (cartState.items.length === 0) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"text-center\">\n          <h1 className=\"text-2xl font-bold mb-4\">Giỏ hàng trống</h1>\n          <p className=\"text-gray-600 mb-6\">Vui lòng thêm sản phẩm vào giỏ hàng trước khi thanh toán.</p>\n          <Button onClick={() => navigate('/')} className=\"bg-blue-600 hover:bg-blue-700\">\n            Tiếp tục mua sắm\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"bg-white border-b\">\n        <div className=\"container mx-auto px-4 py-4\">\n          <div className=\"flex items-center gap-4\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={handleGoBack}\n              className=\"flex items-center gap-2\"\n            >\n              <ArrowLeft className=\"h-4 w-4\" />\n              Quay lại\n            </Button>\n            <h1 className=\"text-2xl font-bold\">Thanh toán</h1>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          <div className=\"lg:col-span-2 space-y-6\">\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between\">\n                  {[\n                    { step: 1, title: 'Địa chỉ', icon: MapPin },\n                    { step: 2, title: 'Vận chuyển', icon: Truck },\n                    { step: 3, title: 'Thanh toán', icon: CreditCard },\n                    { step: 4, title: 'Xác nhận', icon: Gift }\n                  ].map(({ step, title, icon: Icon }) => (\n                    <div key={step} className=\"flex items-center\">\n                      <div className={`flex items-center justify-center w-10 h-10 rounded-full ${\n                        currentStep >= step \n                          ? 'bg-blue-600 text-white' \n                          : 'bg-gray-200 text-gray-600'\n                      }`}>\n                        <Icon className=\"h-5 w-5\" />\n                      </div>\n                      <span className={`ml-2 text-sm font-medium ${\n                        currentStep >= step ? 'text-blue-600' : 'text-gray-600'\n                      }`}>\n                        {title}\n                      </span>\n                      {step < 4 && (\n                        <div className={`w-16 h-0.5 mx-4 ${\n                          currentStep > step ? 'bg-blue-600' : 'bg-gray-200'\n                        }`} />\n                      )}\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n\n            {currentStep === 1 && (\n              <AddressSelection\n                selectedAddress={shippingAddress}\n                onAddressSelect={setShippingAddress}\n                onNext={handleNextStep}\n              />\n            )}\n\n            {currentStep === 2 && (\n              <ShippingMethodSelection\n                selectedMethod={shippingMethod}\n                onMethodSelect={setShippingMethod}\n                onNext={handleNextStep}\n                onPrev={handlePrevStep}\n              />\n            )}\n\n            {currentStep === 3 && (\n              <PaymentMethodSelection\n                selectedMethod={paymentMethod}\n                onMethodSelect={setPaymentMethod}\n                onNext={handleNextStep}\n                onPrev={handlePrevStep}\n                orderTotal={subtotal}\n              />\n            )}\n\n            {currentStep === 4 && (\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <Gift className=\"h-5 w-5\" />\n                    Xác nhận đơn hàng\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-6\">\n                    <div className=\"space-y-4\">\n                      {shippingAddress && (\n                        <div className=\"p-4 bg-gray-50 rounded-lg\">\n                          <h5 className=\"font-medium mb-2\">Địa chỉ giao hàng:</h5>\n                          <p className=\"text-sm\">\n                            <strong>{shippingAddress.name}</strong> | {shippingAddress.phone}\n                          </p>\n                          <p className=\"text-sm text-gray-600\">\n                            {shippingAddress.address}, {shippingAddress.ward}, {shippingAddress.district}, {shippingAddress.province}\n                          </p>\n                        </div>\n                      )}\n                      \n                      {shippingMethod && (\n                        <div className=\"p-4 bg-gray-50 rounded-lg\">\n                          <h5 className=\"font-medium mb-2\">Phương thức vận chuyển:</h5>\n                          <p className=\"text-sm\">\n                            <strong>{shippingMethod.name}</strong> - {formatPrice(shippingMethod.fee)}\n                          </p>\n                          <p className=\"text-sm text-gray-600\">{shippingMethod.estimatedTime}</p>\n                        </div>\n                      )}\n                      \n                      {paymentMethod && (\n                        <div className=\"p-4 bg-gray-50 rounded-lg\">\n                          <h5 className=\"font-medium mb-2\">Phương thức thanh toán:</h5>\n                          <p className=\"text-sm\">\n                            <strong>{paymentMethod.name}</strong>\n                            {paymentMethod.discount && (\n                              <span className=\"text-green-600 ml-2\">(Giảm {paymentMethod.discount}%)</span>\n                            )}\n                          </p>\n                          <p className=\"text-sm text-gray-600\">{paymentMethod.description}</p>\n                        </div>\n                      )}\n                    </div>\n                    \n                    <div className=\"text-sm text-gray-600\">\n                      <p>Vui lòng kiểm tra lại thông tin đơn hàng trước khi đặt hàng.</p>\n                    </div>\n                    \n                    <div className=\"flex gap-4\">\n                      <Button variant=\"outline\" onClick={handlePrevStep}>\n                        Quay lại\n                      </Button>\n                      <Button onClick={handlePlaceOrder} className=\"bg-green-600 hover:bg-green-700 flex-1\">\n                        Đặt hàng\n                      </Button>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n          </div>\n\n          <div className=\"space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Đơn hàng của bạn</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                {cartState.items.map((item) => (\n                  <div key={`${item.id}-${item.selectedColor}-${item.selectedSize}`} className=\"flex gap-3\">\n                    <img\n                      src={item.images[0]}\n                      alt={item.name}\n                      className=\"w-16 h-16 object-cover rounded-lg\"\n                    />\n                    <div className=\"flex-1 min-w-0\">\n                      <h4 className=\"font-medium text-sm truncate\">{item.name}</h4>\n                      <div className=\"text-xs text-gray-600 space-y-1\">\n                        {item.selectedColor && (\n                          <p>Màu: {item.selectedColor}</p>\n                        )}\n                        {item.selectedSize && (\n                          <p>Kích thước: {item.selectedSize}</p>\n                        )}\n                        <p>Số lượng: {item.quantity}</p>\n                      </div>\n                    </div>\n                    <div className=\"text-right\">\n                      <p className=\"font-medium text-sm\">{formatPrice(item.price * item.quantity)}</p>\n                    </div>\n                  </div>\n                ))}\n              </CardContent>\n            </Card>\n\n            <CouponInput\n              onCouponApply={handleCouponApply}\n              appliedCoupon={appliedCoupon}\n              orderTotal={subtotal}\n            />\n\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-base\">Tóm tắt đơn hàng</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-3\">\n                <div className=\"flex justify-between text-sm\">\n                  <span>Tạm tính ({cartState.totalItems} sản phẩm)</span>\n                  <span>{formatPrice(subtotal)}</span>\n                </div>\n                <div className=\"flex justify-between text-sm\">\n                  <span>Phí vận chuyển</span>\n                  <span>{shippingFee > 0 ? formatPrice(shippingFee) : 'Miễn phí'}</span>\n                </div>\n                {couponDiscount > 0 && (\n                  <div className=\"flex justify-between text-sm text-green-600\">\n                    <span>Mã giảm giá ({appliedCoupon?.code})</span>\n                    <span>-{formatPrice(couponDiscount)}</span>\n                  </div>\n                )}\n                {paymentDiscount > 0 && (\n                  <div className=\"flex justify-between text-sm text-green-600\">\n                    <span>Giảm giá thanh toán</span>\n                    <span>-{formatPrice(paymentDiscount)}</span>\n                  </div>\n                )}\n                <Separator />\n                <div className=\"flex justify-between font-bold text-lg\">\n                  <span>Tổng cộng</span>\n                  <span className=\"text-red-600\">{formatPrice(total)}</span>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Checkout;"],"names":["Banknote","createLucideIcon","AddressSelection","selectedAddress","onAddressSelect","onNext","showAddForm","setShowAddForm","useState","editingAddress","setEditingAddress","showDeleteDialog","setShowDeleteDialog","isLoading","setIsLoading","handleEditAddress","updatedAddress","error","supabase","err","handleDeleteAddress","addressId","addresses","handleSelectAddress","address","handleContinue","formatFullAddress","jsxs","Fragment","Card","jsx","CardHeader","CardTitle","MapPin","CardContent","Badge","Button","e","Edit","Trash2","Plus","Dialog","DialogContent","DialogHeader","DialogTitle","EditAddressForm","DialogFooter","onSave","onCancel","formData","setFormData","handleSubmit","Label","Input","ShippingMethodSelection","selectedMethod","onMethodSelect","onPrev","shippingMethods","Truck","Clock","Shield","handleSelectMethod","method","isFreeShipping","orderTotal","IconComponent","isFree","formatPrice","feature","index","PaymentMethodSelection","paymentMethods","CreditCard","Smartphone","Zap","calculateDiscountAmount","discountAmount","SAMPLE_COUPONS","CouponInput","onCouponApply","appliedCoupon","couponCode","setCouponCode","isApplying","setIsApplying","setError","showSuggestions","setShowSuggestions","handleApplyCoupon","resolve","coupon","c","handleRemoveCoupon","handleSuggestionClick","code","Gift","Check","X","Checkout","navigate","useNavigate","cartState","useCart","currentStep","setCurrentStep","shippingAddress","setShippingAddress","shippingMethod","setShippingMethod","paymentMethod","setPaymentMethod","setAppliedCoupon","useEffect","analytics","item","subtotal","shippingFee","paymentDiscount","couponDiscount","total","handleGoBack","handleNextStep","handlePrevStep","handleCouponApply","discount","handlePlaceOrder","toast","orderId","paymentRequest","paymentResponse","paymentService","ArrowLeft","step","title","Icon","Separator"],"mappings":"izBAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMA,GAAWC,EAAiB,WAAY,CAC5C,CAAC,OAAQ,CAAE,MAAO,KAAM,OAAQ,KAAM,EAAG,IAAK,EAAG,IAAK,GAAI,IAAK,IAAK,QAAQ,CAAE,EAC9E,CAAC,SAAU,CAAE,GAAI,KAAM,GAAI,KAAM,EAAG,IAAK,IAAK,SAAU,EACxD,CAAC,OAAQ,CAAE,EAAG,sBAAuB,IAAK,QAAQ,CAAE,CACtD,CAAC,ECmBKC,GAAoD,CAAC,CACzD,gBAAAC,EACA,gBAAAC,EACA,OAAAC,CACF,IAAM,CACJ,KAAM,CAACC,EAAaC,CAAc,EAAIC,WAAS,EAAK,EAC9C,CAACC,EAAgBC,CAAiB,EAAIF,WAAyB,IAAI,EACnE,CAACG,EAAkBC,CAAmB,EAAIJ,WAAwB,IAAI,EACtE,CAACK,EAAWC,CAAY,EAAIN,WAAS,EAAK,EAG1CO,EAAoB,MAAOC,GAA4B,CAC3DF,EAAa,EAAI,EACb,GAAA,CACI,KAAA,CAAE,MAAAG,GAAU,MAAMC,EACrB,KAAK,gBAAgB,EACrB,OAAO,CACN,KAAMF,EAAe,KACrB,MAAOA,EAAe,MACtB,QAASA,EAAe,QACxB,KAAMA,EAAe,KACrB,SAAUA,EAAe,SACzB,SAAUA,EAAe,SACzB,WAAYA,EAAe,UAC3B,WAAY,IAAI,KAAK,EAAE,YAAY,CACpC,CAAA,EACA,GAAG,KAAMA,EAAe,EAAE,EAEzBC,GACM,QAAA,MAAM,wBAAyBA,CAAK,EAC5C,MAAM,oCAAoC,IAE1C,QAAQ,IAAI,6BAA6B,EACzCP,EAAkB,IAAI,EAEtB,OAAO,SAAS,gBAEXS,EAAK,CACJ,QAAA,MAAM,OAAQA,CAAG,EACzB,MAAM,eAAe,CAAA,QACrB,CACAL,EAAa,EAAK,CACpB,CAAA,EAIIM,EAAsB,MAAOC,GAAsB,CACvDP,EAAa,EAAI,EACb,GAAA,CACF,KAAM,CAAE,MAAAG,CAAA,EAAU,MAAMC,EACrB,KAAK,gBAAgB,EACrB,SACA,GAAG,KAAMG,CAAS,EAEjBJ,GACM,QAAA,MAAM,mBAAoBA,CAAK,EACvC,MAAM,+BAA+B,IAErC,QAAQ,IAAI,wBAAwB,EACpCL,EAAoB,IAAI,EAExB,OAAO,SAAS,gBAEXO,EAAK,CACJ,QAAA,MAAM,OAAQA,CAAG,EACzB,MAAM,eAAe,CAAA,QACrB,CACAL,EAAa,EAAK,CACpB,CAAA,EAII,CAACQ,CAAS,EAAId,WAAoB,CACtC,CACE,GAAI,IACJ,KAAM,eACN,MAAO,aACP,QAAS,4BACT,KAAM,WACN,SAAU,SACV,SAAU,kBACV,UAAW,EACb,EACA,CACE,GAAI,IACJ,KAAM,eACN,MAAO,aACP,QAAS,4BACT,KAAM,WACN,SAAU,SACV,SAAU,kBACV,UAAW,EACb,CAAA,CACD,EAKKe,EAAuBC,GAAqB,CAChDpB,EAAgBoB,CAAO,CAAA,EAMnBC,EAAiB,IAAM,CACvBtB,GACKE,GACT,EAMIqB,EAAqBF,GAClB,GAAGA,EAAQ,OAAO,KAAKA,EAAQ,IAAI,KAAKA,EAAQ,QAAQ,KAAKA,EAAQ,QAAQ,GAGtF,OAEIG,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAD,OAACE,EACC,CAAA,SAAA,CAAAC,MAACC,EACC,CAAA,SAAAJ,EAAAA,KAACK,EAAU,CAAA,UAAU,0BACnB,SAAA,CAACF,EAAAA,IAAAG,EAAA,CAAO,UAAU,SAAU,CAAA,EAAE,mBAAA,CAAA,CAEhC,CACF,CAAA,EACAN,EAAAA,KAACO,EAAY,CAAA,UAAU,YAErB,SAAA,CAAAJ,MAAC,OAAI,UAAU,YACZ,SAAUR,EAAA,IAAKE,GACdG,EAAA,KAAC,MAAA,CAEC,UAAW,2DACTxB,GAAA,YAAAA,EAAiB,MAAOqB,EAAQ,GAC5B,6BACA,uCACN,GACA,QAAS,IAAMD,EAAoBC,CAAO,EAE1C,SAAA,CAACG,EAAAA,KAAA,MAAA,CAAI,UAAU,mCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,SACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAAAG,EAAA,IAAC,KAAG,CAAA,UAAU,cAAe,SAAAN,EAAQ,KAAK,EACzCM,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAC,IAAA,EAChCA,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAiB,WAAQ,MAAM,EAC9CN,EAAQ,WACNM,MAAAK,EAAA,CAAM,QAAQ,YAAY,UAAU,UAAU,SAE/C,UAAA,CAAA,CAAA,EAEJ,QACC,IAAE,CAAA,UAAU,wBACV,SAAAT,EAAkBF,CAAO,EAC5B,CAAA,EACF,EAGAG,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAG,EAAA,IAACM,EAAA,CACC,QAAQ,QACR,KAAK,KACL,QAAUC,GAAM,CACdA,EAAE,gBAAgB,EAClB3B,EAAkBc,CAAO,CAC3B,EAEA,SAAAM,EAAAA,IAACQ,GAAK,CAAA,UAAU,SAAU,CAAA,CAAA,CAC5B,EACC,CAACd,EAAQ,WACRM,EAAA,IAACM,EAAA,CACC,QAAQ,QACR,KAAK,KACL,QAAUC,GAAM,CACdA,EAAE,gBAAgB,EAClBzB,EAAoBY,EAAQ,EAAE,CAChC,EAEA,SAAAM,EAAAA,IAACS,EAAO,CAAA,UAAU,SAAU,CAAA,CAAA,CAC9B,CAAA,EAEJ,CAAA,EACF,EAGAZ,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAG,EAAAA,IAAC,OAAI,UAAW,mEACd3B,GAAA,YAAAA,EAAiB,MAAOqB,EAAQ,GAC5B,kBACA,iBACN,GACG,UAAArB,GAAA,YAAAA,EAAiB,MAAOqB,EAAQ,UAC9B,MAAI,CAAA,UAAU,mCAAmC,CAEtD,CAAA,EACAM,EAAAA,IAAC,QAAK,UAAU,6BACb,2BAAiB,MAAON,EAAQ,GAAK,UAAY,kBACpD,CAAA,CAAA,EACF,CAAA,CAAA,EAlEKA,EAAQ,EAoEhB,CAAA,EACH,EAGAG,EAAA,KAACS,EAAA,CACC,QAAQ,UACR,UAAU,SACV,QAAS,IAAM7B,EAAe,EAAI,EAElC,SAAA,CAACuB,EAAAA,IAAAU,GAAA,CAAK,UAAU,cAAe,CAAA,EAAE,kBAAA,CAAA,CAEnC,EAGClC,GACCwB,EAAA,IAACD,EAAK,CAAA,UAAU,gBACd,SAAAC,EAAAA,IAACI,EAAY,CAAA,UAAU,MACrB,SAAAP,EAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACG,EAAA,IAAA,IAAA,CAAE,UAAU,qBAAqB,SAElC,6DAAA,EACAA,EAAA,IAACM,EAAA,CACC,QAAQ,UACR,QAAS,IAAM7B,EAAe,EAAK,EACpC,SAAA,MAAA,CAED,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAIFuB,EAAAA,IAAC,MAAI,CAAA,UAAU,wBACb,SAAAA,EAAA,IAACM,EAAA,CACC,QAASX,EACT,SAAU,CAACtB,EACX,UAAU,gCACX,SAAA,UAAA,CAAA,EAGH,CAAA,EACF,CAAA,EACF,EAGC2B,EAAA,IAAAW,EAAA,CAAO,KAAM,CAAC,CAAChC,EAAgB,aAAc,IAAMC,EAAkB,IAAI,EACxE,SAACiB,OAAAe,EAAA,CAAc,UAAU,mBACvB,SAAA,CAAAZ,MAACa,EACC,CAAA,SAAAb,EAAA,IAACc,EAAY,CAAA,SAAA,mBAAiB,CAAA,EAChC,EACCnC,GACCqB,EAAA,IAACe,GAAA,CACC,QAASpC,EACT,OAAQM,EACR,SAAU,IAAML,EAAkB,IAAI,EACtC,UAAAG,CAAA,CACF,CAAA,CAAA,CAEJ,CACF,CAAA,EAGCiB,EAAA,IAAAW,EAAA,CAAO,KAAM,CAAC,CAAC9B,EAAkB,aAAc,IAAMC,EAAoB,IAAI,EAC5E,SAACe,OAAAe,EAAA,CAAc,UAAU,mBACvB,SAAA,CAAAZ,MAACa,EACC,CAAA,SAAAb,EAAA,IAACc,EAAY,CAAA,SAAA,sBAAoB,CAAA,EACnC,EACAd,EAAAA,IAAC,OAAI,UAAU,OACb,eAAC,IAAE,CAAA,UAAU,wBAAwB,SAAA,gFAAA,CAErC,CACF,CAAA,SACCgB,EACC,CAAA,SAAA,CAAAhB,EAAA,IAACM,EAAA,CACC,QAAQ,UACR,QAAS,IAAMxB,EAAoB,IAAI,EACvC,SAAUC,EACX,SAAA,KAAA,CAED,EACAiB,EAAA,IAACM,EAAA,CACC,QAAQ,cACR,QAAS,IAAMzB,GAAoBS,EAAoBT,CAAgB,EACvE,SAAUE,EAET,WAAY,cAAgB,KAAA,CAC/B,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,CACF,CAAA,CAAA,CAEJ,EAUMgC,GAAkD,CAAC,CACvD,QAAArB,EACA,OAAAuB,EACA,SAAAC,EACA,UAAAnC,CACF,IAAM,CACJ,KAAM,CAACoC,EAAUC,CAAW,EAAI1C,WAAkBgB,CAAO,EAEnD2B,EAAgBd,GAAuB,CAC3CA,EAAE,eAAe,EACjBU,EAAOE,CAAQ,CAAA,EAGjB,OACGtB,EAAAA,KAAA,OAAA,CAAK,SAAUwB,EAAc,UAAU,YACtC,SAAA,CAACxB,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACG,EAAA,IAAAsB,EAAA,CAAM,QAAQ,OAAO,SAAc,iBAAA,EACpCtB,EAAA,IAACuB,EAAA,CACC,GAAG,OACH,MAAOJ,EAAS,KAChB,SAAWZ,GAAMa,EAAY,CAAE,GAAGD,EAAU,KAAMZ,EAAE,OAAO,MAAO,EAClE,SAAQ,EAAA,CACV,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAACP,EAAA,IAAAsB,EAAA,CAAM,QAAQ,QAAQ,SAAa,gBAAA,EACpCtB,EAAA,IAACuB,EAAA,CACC,GAAG,QACH,MAAOJ,EAAS,MAChB,SAAWZ,GAAMa,EAAY,CAAE,GAAGD,EAAU,MAAOZ,EAAE,OAAO,MAAO,EACnE,SAAQ,EAAA,CACV,CAAA,EACF,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAACP,EAAA,IAAAsB,EAAA,CAAM,QAAQ,UAAU,SAAgB,mBAAA,EACzCtB,EAAA,IAACuB,EAAA,CACC,GAAG,UACH,MAAOJ,EAAS,QAChB,SAAWZ,GAAMa,EAAY,CAAE,GAAGD,EAAU,QAASZ,EAAE,OAAO,MAAO,EACrE,SAAQ,EAAA,CACV,CAAA,EACF,EAEAV,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACG,EAAA,IAAAsB,EAAA,CAAM,QAAQ,OAAO,SAAS,YAAA,EAC/BtB,EAAA,IAACuB,EAAA,CACC,GAAG,OACH,MAAOJ,EAAS,KAChB,SAAWZ,GAAMa,EAAY,CAAE,GAAGD,EAAU,KAAMZ,EAAE,OAAO,MAAO,EAClE,SAAQ,EAAA,CACV,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAACP,EAAA,IAAAsB,EAAA,CAAM,QAAQ,WAAW,SAAU,aAAA,EACpCtB,EAAA,IAACuB,EAAA,CACC,GAAG,WACH,MAAOJ,EAAS,SAChB,SAAWZ,GAAMa,EAAY,CAAE,GAAGD,EAAU,SAAUZ,EAAE,OAAO,MAAO,EACtE,SAAQ,EAAA,CACV,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAACP,EAAA,IAAAsB,EAAA,CAAM,QAAQ,WAAW,SAAc,iBAAA,EACxCtB,EAAA,IAACuB,EAAA,CACC,GAAG,WACH,MAAOJ,EAAS,SAChB,SAAWZ,GAAMa,EAAY,CAAE,GAAGD,EAAU,SAAUZ,EAAE,OAAO,MAAO,EACtE,SAAQ,EAAA,CACV,CAAA,EACF,CAAA,EACF,SAECS,EACC,CAAA,SAAA,CAAChB,EAAAA,IAAAM,EAAA,CAAO,KAAK,SAAS,QAAQ,UAAU,QAASY,EAAU,SAAUnC,EAAW,SAEhF,KAAA,CAAA,EACAiB,EAAAA,IAACM,GAAO,KAAK,SAAS,SAAUvB,EAC7B,SAAAA,EAAY,cAAgB,cAC/B,CAAA,CAAA,EACF,CACF,CAAA,CAAA,CAEJ,ECvYMyC,GAAyD,CAAC,CAC9D,eAAAC,EACA,eAAAC,EACA,OAAAnD,EACA,OAAAoD,CACF,IAAM,CAEE,KAAA,CAACC,CAAe,EAAIlD,WAA2B,CACnD,CACE,GAAI,WACJ,KAAM,uBACN,YAAa,iCACb,cAAe,oBACf,IAAK,IACL,KAAMmD,EACN,SAAU,CAAC,kCAAmC,2BAA2B,CAC3E,EACA,CACE,GAAI,UACJ,KAAM,kBACN,YAAa,+BACb,cAAe,oBACf,IAAK,IACL,KAAMC,EACN,SAAU,CAAC,oBAAqB,oBAAoB,EACpD,cAAe,EACjB,EACA,CACE,GAAI,UACJ,KAAM,oBACN,YAAa,mCACb,cAAe,eACf,IAAK,IACL,KAAMC,EACN,SAAU,CAAC,iBAAkB,gBAAiB,aAAa,CAC7D,CAAA,CACD,EAKKC,EAAsBC,GAA2B,CACrDP,EAAeO,CAAM,CAAA,EAMjBtC,EAAiB,IAAM,CACvB8B,GACKlD,GACT,EAMI2D,EAAiB,CAACD,EAAwBE,EAAqB,IAC5DF,EAAO,KAAO,YAAcE,GAAc,IAGnD,cACGpC,EACC,CAAA,SAAA,CAAAC,MAACC,EACC,CAAA,SAAAJ,EAAAA,KAACK,EAAU,CAAA,UAAU,0BACnB,SAAA,CAACF,EAAAA,IAAA6B,EAAA,CAAM,UAAU,SAAU,CAAA,EAAE,wBAAA,CAAA,CAE/B,CACF,CAAA,EACAhC,EAAAA,KAACO,EAAY,CAAA,UAAU,YAErB,SAAA,CAAAJ,MAAC,OAAI,UAAU,YACZ,SAAgB4B,EAAA,IAAKK,GAAW,CAC/B,MAAMG,EAAgBH,EAAO,KACvBI,EAASH,EAAeD,CAAM,EAGlC,OAAApC,EAAA,KAAC,MAAA,CAEC,UAAW,oEACT4B,GAAA,YAAAA,EAAgB,MAAOQ,EAAO,GAC1B,6BACA,uCACN,GACA,QAAS,IAAMD,EAAmBC,CAAM,EAGvC,SAAA,CAAAA,EAAO,eACNjC,EAAAA,IAACK,EAAM,CAAA,UAAU,6DAA6D,SAE9E,cAAA,EAGFR,EAAAA,KAAC,MAAI,CAAA,UAAU,yBAEb,SAAA,CAAAG,MAAC,MAAI,CAAA,UAAW,mBACdyB,GAAA,YAAAA,EAAgB,MAAOQ,EAAO,GAC1B,4BACA,2BACN,GACE,SAAAjC,EAAA,IAACoC,EAAc,CAAA,UAAU,SAAU,CAAA,EACrC,EAGAvC,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAG,EAAA,IAAC,KAAG,CAAA,UAAU,cAAe,SAAAiC,EAAO,KAAK,QACxC,MAAI,CAAA,UAAU,aACZ,SAAAI,SACE,MACC,CAAA,SAAA,CAACrC,EAAA,IAAA,OAAA,CAAK,UAAU,6BAA6B,SAAQ,WAAA,QACpD,MAAI,CAAA,UAAU,qCACZ,SAAYsC,EAAAL,EAAO,GAAG,EACzB,CACF,CAAA,CAAA,QAEC,OAAK,CAAA,UAAU,cAAe,SAAYK,EAAAL,EAAO,GAAG,CAAA,CAAE,CAE3D,CAAA,CAAA,EACF,EAECjC,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA8B,WAAO,YAAY,QAE7D,MAAI,CAAA,UAAU,+BACb,SAACH,EAAA,KAAA,MAAA,CAAI,UAAU,gDACb,SAAA,CAACG,EAAAA,IAAA8B,EAAA,CAAM,UAAU,SAAU,CAAA,EAC3B9B,EAAAA,IAAC,OAAM,CAAA,SAAAiC,EAAO,aAAc,CAAA,CAAA,CAAA,CAC9B,CACF,CAAA,QAGC,MAAI,CAAA,UAAU,uBACZ,SAAOA,EAAA,SAAS,IAAI,CAACM,EAASC,IAC5BxC,MAAAK,EAAA,CAAkB,QAAQ,YAAY,UAAU,UAC9C,SADSkC,CAAA,EAAAC,CAEZ,CACD,EACH,CAAA,EACF,QAGC,MAAI,CAAA,UAAW,wEACdf,GAAA,YAAAA,EAAgB,MAAOQ,EAAO,GAC1B,kBACA,iBACN,GACG,UAAAR,GAAA,YAAAA,EAAgB,MAAOQ,EAAO,UAC5B,MAAI,CAAA,UAAU,uCAAuC,CAE1D,CAAA,CAAA,EACF,CAAA,CAAA,EAxEKA,EAAO,EAAA,CA2EjB,CAAA,EACH,EAGApC,EAAAA,KAAC,MAAI,CAAA,UAAU,uDACb,SAAA,CAACG,EAAA,IAAA,KAAA,CAAG,UAAU,mCAAmC,SAAiB,oBAAA,EAClEH,EAAAA,KAAC,KAAG,CAAA,UAAU,oCACZ,SAAA,CAAAG,EAAAA,IAAC,MAAG,SAA6E,+EAAA,CAAA,EACjFA,EAAAA,IAAC,MAAG,SAAsD,wDAAA,CAAA,EAC1DA,EAAAA,IAAC,MAAG,SAAyC,2CAAA,CAAA,CAAA,EAC/C,CAAA,EACF,EAGAH,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAG,EAAAA,IAACM,GAAO,QAAQ,UAAU,QAASqB,EAAQ,UAAU,SAAS,SAE9D,UAAA,CAAA,EACA3B,EAAA,IAACM,EAAA,CACC,QAASX,EACT,SAAU,CAAC8B,EACX,UAAU,uCACX,SAAA,UAAA,CAED,CAAA,EACF,CAAA,EACF,CACF,CAAA,CAAA,CAEJ,ECtLMgB,GAAuD,CAAC,CAC5D,eAAAhB,EACA,eAAAC,EACA,OAAAnD,EACA,OAAAoD,EACA,WAAAQ,CACF,IAAM,CAEE,KAAA,CAACO,CAAc,EAAIhE,WAA0B,CACjD,CACE,GAAI,QACJ,KAAM,QACN,YAAa,+CACb,KAAMiE,EACN,eAAgB,UAChB,SAAU,CAAC,cAAe,yBAA0B,iBAAiB,EACrE,UAAW,EACb,EACA,CACE,GAAI,OACJ,KAAM,UACN,YAAa,iCACb,KAAMC,GACN,eAAgB,UAChB,SAAU,CAAC,mBAAoB,YAAa,kBAAkB,EAC9D,SAAU,CACZ,EACA,CACE,GAAI,UACJ,KAAM,UACN,YAAa,oCACb,KAAMC,GACN,eAAgB,UAChB,SAAU,CAAC,gBAAiB,WAAY,oBAAoB,CAC9D,EACA,CACE,GAAI,UACJ,KAAM,yBACN,YAAa,8CACb,KAAMd,EACN,eAAgB,UAChB,SAAU,CAAC,oBAAqB,sBAAuB,kBAAkB,CAC3E,EACA,CACE,GAAI,MACJ,KAAM,iCACN,YAAa,yCACb,KAAM7D,GACN,eAAgB,gBAChB,SAAU,CAAC,mCAAoC,0BAA2B,uBAAuB,CACnG,CAAA,CACD,EAKK8D,EAAsBC,GAA0B,CACpDP,EAAeO,CAAM,CAAA,EAMjBtC,EAAiB,IAAM,CACvB8B,GACKlD,GACT,EAMIuE,EAA2Bb,GAC3BA,EAAO,SACDE,EAAaF,EAAO,SAAY,IAEnC,EAGT,cACGlC,EACC,CAAA,SAAA,CAAAC,MAACC,EACC,CAAA,SAAAJ,EAAAA,KAACK,EAAU,CAAA,UAAU,0BACnB,SAAA,CAACF,EAAAA,IAAA2C,EAAA,CAAW,UAAU,SAAU,CAAA,EAAE,wBAAA,CAAA,CAEpC,CACF,CAAA,EACA9C,EAAAA,KAACO,EAAY,CAAA,UAAU,YAErB,SAAA,CAAAJ,MAAC,OAAI,UAAU,YACZ,SAAe0C,EAAA,IAAKT,GAAW,CAC9B,MAAMG,EAAgBH,EAAO,KACvBc,EAAiBD,EAAwBb,CAAM,EAGnD,OAAApC,EAAA,KAAC,MAAA,CAEC,UAAW,oEACT4B,GAAA,YAAAA,EAAgB,MAAOQ,EAAO,GAC1B,6BACA,uCACN,GACA,QAAS,IAAMD,EAAmBC,CAAM,EAGvC,SAAA,CAAAA,EAAO,WACNjC,EAAAA,IAACK,EAAM,CAAA,UAAU,2DAA2D,SAE5E,WAAA,EAID4B,EAAO,UACLpC,OAAAQ,EAAA,CAAM,UAAU,sDAAsD,SAAA,CAAA,QAC/D4B,EAAO,SAAS,GAAA,EACxB,EAGFpC,EAAAA,KAAC,MAAI,CAAA,UAAU,yBAEb,SAAA,CAAAG,MAAC,MAAI,CAAA,UAAW,mBACdyB,GAAA,YAAAA,EAAgB,MAAOQ,EAAO,GAC1B,4BACA,2BACN,GACE,SAAAjC,EAAA,IAACoC,EAAc,CAAA,UAAU,SAAU,CAAA,EACrC,EAGAvC,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAG,EAAA,IAAC,KAAG,CAAA,UAAU,cAAe,SAAAiC,EAAO,KAAK,EACzCpC,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wBAAwB,SAAA,CAAA,UAC7BoC,EAAO,cAAA,EACjB,EACCc,EAAiB,GACflD,OAAA,MAAA,CAAI,UAAU,qCAAqC,SAAA,CAAA,cACtCkD,EAAe,eAAe,OAAO,EAAE,GAAA,EACrD,CAAA,EAEJ,CAAA,EACF,EAEC/C,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA8B,WAAO,YAAY,QAG7D,MAAI,CAAA,UAAU,uBACZ,SAAOiC,EAAA,SAAS,IAAI,CAACM,EAASC,IAC5BxC,MAAAK,EAAA,CAAkB,QAAQ,YAAY,UAAU,UAC9C,SADSkC,CAAA,EAAAC,CAEZ,CACD,EACH,CAAA,EACF,QAGC,MAAI,CAAA,UAAW,wEACdf,GAAA,YAAAA,EAAgB,MAAOQ,EAAO,GAC1B,kBACA,iBACN,GACG,UAAAR,GAAA,YAAAA,EAAgB,MAAOQ,EAAO,UAC5B,MAAI,CAAA,UAAU,uCAAuC,CAE1D,CAAA,CAAA,EACF,CAAA,CAAA,EAtEKA,EAAO,EAAA,CAyEjB,CAAA,EACH,EAGApC,EAAAA,KAAC,MAAI,CAAA,UAAU,qDACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACG,EAAAA,IAAA+B,EAAA,CAAO,UAAU,wBAAyB,CAAA,EAC1C/B,EAAA,IAAA,KAAA,CAAG,UAAU,6BAA6B,SAAkB,qBAAA,CAAA,EAC/D,EACAH,EAAAA,KAAC,KAAG,CAAA,UAAU,mCACZ,SAAA,CAAAG,EAAAA,IAAC,MAAG,SAA8C,gDAAA,CAAA,EAClDA,EAAAA,IAAC,MAAG,SAAsC,wCAAA,CAAA,EAC1CA,EAAAA,IAAC,MAAG,SAAqC,uCAAA,CAAA,EACzCA,EAAAA,IAAC,MAAG,SAAoC,sCAAA,CAAA,CAAA,EAC1C,CAAA,EACF,GAGCyB,GAAA,YAAAA,EAAgB,WACdzB,EAAAA,IAAA,MAAA,CAAI,UAAU,mDACb,SAAAH,EAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACG,EAAA,IAAA,KAAA,CAAG,UAAU,4BAA4B,SAAiB,oBAAA,EAC3DH,EAAAA,KAAC,IAAE,CAAA,UAAU,wBAAwB,SAAA,CAAA,QAC7B4B,EAAe,SAAS,wBAAsBA,EAAe,IAAA,EACrE,CAAA,EACF,QACC,MAAI,CAAA,UAAU,aACb,SAAC5B,EAAA,KAAA,MAAA,CAAI,UAAU,kCAAkC,SAAA,CAAA,IAC7CiD,EAAwBrB,CAAc,EAAE,eAAe,OAAO,EAAE,GAAA,CAAA,CACpE,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAIF5B,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAG,EAAAA,IAACM,GAAO,QAAQ,UAAU,QAASqB,EAAQ,UAAU,SAAS,SAE9D,UAAA,CAAA,EACA3B,EAAA,IAACM,EAAA,CACC,QAASX,EACT,SAAU,CAAC8B,EACX,UAAU,uCACX,SAAA,UAAA,CAED,CAAA,EACF,CAAA,EACF,CACF,CAAA,CAAA,CAEJ,ECzOMuB,EAAiB,CACrB,CACE,KAAM,YACN,SAAU,IACV,KAAM,QACN,YAAa,qCACb,SAAU,GACZ,EACA,CACE,KAAM,SACN,SAAU,GACV,KAAM,UACN,YAAa,oCACb,SAAU,GACZ,EACA,CACE,KAAM,WACN,SAAU,IACV,KAAM,WACN,YAAa,sBACb,SAAU,GACZ,CACF,EAOMC,GAA0C,CAAC,CAAE,cAAAC,EAAe,cAAAC,EAAe,WAAAhB,KAAiB,CAChG,KAAM,CAACiB,EAAYC,CAAa,EAAI3E,WAAS,EAAE,EACzC,CAAC4E,EAAYC,CAAa,EAAI7E,WAAS,EAAK,EAC5C,CAACS,EAAOqE,CAAQ,EAAI9E,WAAS,EAAE,EAC/B,CAAC+E,EAAiBC,CAAkB,EAAIhF,WAAS,EAAK,EAKtDiF,EAAoB,SAAY,CAChC,GAAA,CAACP,EAAW,OAAQ,CACtBI,EAAS,2BAA2B,EACpC,MACF,CAEAD,EAAc,EAAI,EAClBC,EAAS,EAAE,EAEP,GAAA,CAEF,MAAM,IAAI,QAAQI,GAAW,WAAWA,EAAS,GAAI,CAAC,EAGtD,MAAMC,EAASb,EAAe,QACvBc,EAAE,KAAK,YAAY,IAAMV,EAAW,YAAY,CAAA,EAGvD,GAAI,CAACS,EAAQ,CACXL,EAAS,0BAA0B,EACnC,MACF,CAGI,GAAArB,EAAa0B,EAAO,SAAU,CAChCL,EAAS,sBAAsBlB,EAAYuB,EAAO,QAAQ,CAAC,oBAAoB,EAC/E,MACF,CAGcX,EAAAW,EAAO,SAAUA,EAAO,IAAI,EAC1CR,EAAc,EAAE,EAChBK,EAAmB,EAAK,OAEV,CACdF,EAAS,uCAAuC,CAAA,QAChD,CACAD,EAAc,EAAK,CACrB,CAAA,EAMIQ,EAAqB,IAAM,CAC/Bb,EAAc,EAAG,EAAE,CAAA,EAMfc,EAAyBC,GAAiB,CAC9CZ,EAAcY,CAAI,EAClBP,EAAmB,EAAK,CAAA,EAG1B,cACG3D,EACC,CAAA,SAAA,CAAAC,MAACC,EACC,CAAA,SAAAJ,EAAAA,KAACK,EAAU,CAAA,UAAU,0BACnB,SAAA,CAACF,EAAAA,IAAAkE,EAAA,CAAK,UAAU,SAAU,CAAA,EAAE,aAAA,CAAA,CAE9B,CACF,CAAA,EACArE,EAAAA,KAACO,EAAY,CAAA,UAAU,YAEpB,SAAA,CACC+C,GAAAtD,EAAA,KAAC,MAAI,CAAA,UAAU,uFACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACG,EAAAA,IAAAmE,GAAA,CAAM,UAAU,wBAAyB,CAAA,SACzC,MACC,CAAA,SAAA,CAAAnE,EAAA,IAAC,IAAE,CAAA,UAAU,6BAA8B,SAAAmD,EAAc,KAAK,EAC9DtD,EAAAA,KAAC,IAAE,CAAA,UAAU,yBAAyB,SAAA,CAAA,QAC9ByC,EAAYa,EAAc,QAAQ,CAAA,EAC1C,CAAA,EACF,CAAA,EACF,EACAnD,EAAA,IAACM,EAAA,CACC,QAAQ,QACR,KAAK,KACL,QAASyD,EACT,UAAU,sCAEV,SAAA/D,EAAAA,IAACoE,GAAE,CAAA,UAAU,SAAU,CAAA,CAAA,CACzB,CAAA,EACF,EAID,CAACjB,GACCtD,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,aACb,SAAA,CAAAG,EAAA,IAACuB,EAAA,CACC,YAAY,mBACZ,MAAO6B,EACP,SAAW7C,GAAM,CACD8C,EAAA9C,EAAE,OAAO,KAAK,EAC5BiD,EAAS,EAAE,CACb,EACA,QAAS,IAAME,EAAmB,EAAI,EACtC,UAAWvE,EAAQ,iBAAmB,EAAA,CACxC,EACAa,EAAA,IAACM,EAAA,CACC,QAASqD,EACT,SAAUL,GAAc,CAACF,EAAW,KAAK,EACzC,UAAU,gCAET,WAAa,kBAAoB,SAAA,CACpC,CAAA,EACF,EAGCjE,GACCa,EAAA,IAAC,IAAE,CAAA,UAAU,uBAAwB,SAAMb,EAAA,EAI5CsE,GACC5D,EAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACG,EAAA,IAAA,IAAA,CAAE,UAAU,oCAAoC,SAAmB,sBAAA,QACnE,MAAI,CAAA,UAAU,YACZ,SAAegD,EAAA,IAAKa,GACnB7D,EAAA,IAAC,MAAA,CAEC,UAAU,0FACV,QAAS,IAAMgE,EAAsBH,EAAO,IAAI,EAEhD,gBAAC,MACC,CAAA,SAAA,CAAChE,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAG,EAAA,IAACK,EAAM,CAAA,QAAQ,YAAa,SAAAwD,EAAO,KAAK,EACvCA,EAAO,OAAS,WACdhE,EAAA,KAAA,OAAA,CAAK,UAAU,yBAAyB,SAAA,CAAA,IAAEgE,EAAO,SAAS,GAAA,EAAC,EAE7DA,EAAO,OAAS,SACdhE,EAAA,KAAA,OAAA,CAAK,UAAU,yBAAyB,SAAA,CAAA,IAAEyC,EAAYuB,EAAO,QAAQ,CAAA,EAAE,EAEzEA,EAAO,OAAS,kBACd,OAAK,CAAA,UAAU,yBAAyB,SAAa,gBAAA,CAAA,EAE1D,EACC7D,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAyB,WAAO,YAAY,EACzDH,EAAAA,KAAC,IAAE,CAAA,UAAU,wBAAwB,SAAA,CAAA,kBACnByC,EAAYuB,EAAO,QAAQ,CAAA,EAC7C,CAAA,EACF,CAAA,EArBKA,EAAO,IAuBf,CAAA,EACH,CAAA,EACF,CAAA,EAEJ,CAAA,EAEJ,CACF,CAAA,CAAA,CAEJ,EClMMQ,GAAqB,IAAM,CAC/B,MAAMC,EAAWC,IACX,CAAE,MAAOC,CAAU,EAAIC,GAAQ,EAC/B,CAACC,EAAaC,CAAc,EAAIjG,WAAS,CAAC,EAC1C,CAACkG,EAAiBC,CAAkB,EAAInG,WAAc,IAAI,EAC1D,CAACoG,EAAgBC,CAAiB,EAAIrG,WAAc,IAAI,EACxD,CAACsG,EAAeC,CAAgB,EAAIvG,WAAc,IAAI,EACtD,CAACyE,EAAe+B,CAAgB,EAAIxG,WAAkD,IAAI,EAGhGyG,EAAAA,UAAU,IAAM,CACdC,EAAU,eAAe,iBAAkB,CACzC,SAAU,MACV,MAAOZ,EAAU,WACjB,MAAOA,EAAU,MAAM,IAAaa,IAAA,CAClC,QAASA,EAAK,GAAG,SAAS,EAC1B,UAAWA,EAAK,KAChB,cAAeA,EAAK,SACpB,WAAYA,EAAK,MACjB,MAAOA,EAAK,MACZ,SAAUA,EAAK,QAAA,EACf,CAAA,CACH,CAAA,EACA,CAACb,CAAS,CAAC,EAEd,MAAMc,EAAWd,EAAU,WACrBe,GAAcT,GAAA,YAAAA,EAAgB,MAAO,EACrCU,EAAkBR,GAAA,MAAAA,EAAe,SAAYM,EAAWN,EAAc,SAAY,IAAM,EACxFS,GAAiBtC,GAAA,YAAAA,EAAe,WAAY,EAC5CuC,EAAQJ,EAAWC,EAAcE,EAAiBD,EAElDG,EAAe,IAAM,CACzBrB,EAAS,EAAE,CAAA,EAGPsB,EAAiB,IAAM,CACvBlB,EAAc,GAChBC,EAAeD,EAAc,CAAC,CAChC,EAGImB,EAAiB,IAAM,CACvBnB,EAAc,GAChBC,EAAeD,EAAc,CAAC,CAChC,EAGIoB,EAAoB,CAACC,EAAkB9B,IAAiB,CACxD8B,EAAW,GAAK9B,EACDiB,EAAA,CAAE,SAAAa,EAAU,KAAA9B,CAAA,CAAM,EAEnCiB,EAAiB,IAAI,CACvB,EAGIc,EAAmB,SAAY,CAC/B,GAAA,CACF,GAAI,CAACpB,GAAmB,CAACE,GAAkB,CAACE,EAAe,CACzDiB,EAAM,MAAM,0CAA0C,EACtD,MACF,CAEM,MAAAC,EAAU,MAAQ,KAAK,IAAI,EAEjC,GAAIlB,EAAc,KAAO,OAASA,EAAc,KAAO,gBACrD,MAAM,IAAI,QAAQpB,GAAW,WAAWA,EAAS,GAAI,CAAC,EAEtD,QAAQ,IAAI,uBAAwB,CAClC,QAAAsC,EACA,QAAStB,EACT,SAAUE,EACV,QAASE,EACT,MAAOR,EAAU,MACjB,MAAAkB,CAAA,CACD,EAGDN,EAAU,eAAe,WAAY,CACnC,eAAgBc,EAChB,SAAU,MACV,MAAOR,EACP,SAAUH,EACV,aAAcP,EAAc,GAC5B,MAAOR,EAAU,MAAM,IAAaa,IAAA,CAClC,QAASA,EAAK,GAAG,SAAS,EAC1B,UAAWA,EAAK,KAChB,cAAeA,EAAK,SACpB,WAAYA,EAAK,MACjB,MAAOA,EAAK,MACZ,SAAUA,EAAK,QAAA,EACf,CAAA,CACH,EAEDY,EAAM,QAAQ,sBAAsB,EAC3B3B,EAAA,0BAA0B4B,CAAO,EAAE,MAEvC,CACL,MAAMC,EAAiC,CACrC,QAAAD,EACA,OAAQR,EACR,UAAW,uBAAuBQ,CAAO,GACzC,UAAW,GAAG,OAAO,SAAS,MAAM,0BAA0BlB,EAAc,EAAE,GAC9E,UAAW,GAAG,OAAO,SAAS,MAAM,YACpC,cAAeA,EAAc,EAAA,EAGzBoB,EAAkB,MAAMC,GAAe,eAAeF,CAAc,EAEtE,GAAAC,EAAgB,SAAWA,EAAgB,WAChC,aAAA,QAAQ,eAAgB,KAAK,UAAU,CAClD,QAAAF,EACA,QAAStB,EACT,SAAUE,EACV,QAASE,EACT,MAAOR,EAAU,MACjB,MAAAkB,CACD,CAAA,CAAC,EAEFO,EAAM,QAAQ,2CAA2C,EAClD,OAAA,SAAS,KAAOG,EAAgB,eAEvC,OAAM,IAAI,MAAMA,EAAgB,SAAW,mCAAmC,CAElF,QAEOjH,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,EAC3C8G,EAAM,MAAM9G,aAAiB,MAAQA,EAAM,QAAU,+CAA+C,CACtG,CAAA,EAGE,OAAAqF,EAAU,MAAM,SAAW,QAE1B,MAAI,CAAA,UAAU,8BACb,SAAC3E,EAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAACG,EAAA,IAAA,KAAA,CAAG,UAAU,0BAA0B,SAAc,iBAAA,EACrDA,EAAA,IAAA,IAAA,CAAE,UAAU,qBAAqB,SAAyD,4DAAA,EAC3FA,EAAAA,IAACM,GAAO,QAAS,IAAMgE,EAAS,GAAG,EAAG,UAAU,gCAAgC,SAEhF,kBAAA,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EAKFzE,EAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACG,EAAA,IAAA,MAAA,CAAI,UAAU,oBACb,SAACA,EAAA,IAAA,MAAA,CAAI,UAAU,8BACb,SAAAH,OAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAA,EAAA,KAACS,EAAA,CACC,QAAQ,QACR,KAAK,KACL,QAASqF,EACT,UAAU,0BAEV,SAAA,CAAC3F,EAAAA,IAAAsG,GAAA,CAAU,UAAU,SAAU,CAAA,EAAE,UAAA,CAAA,CAEnC,EACCtG,EAAA,IAAA,KAAA,CAAG,UAAU,qBAAqB,SAAU,aAAA,CAAA,CAC/C,CAAA,CACF,CAAA,EACF,QAEC,MAAI,CAAA,UAAU,8BACb,SAACH,EAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACG,EAAA,IAAAD,EAAA,CACC,eAACK,EAAY,CAAA,UAAU,MACrB,SAACJ,EAAA,IAAA,MAAA,CAAI,UAAU,oCACZ,SAAA,CACC,CAAE,KAAM,EAAG,MAAO,UAAW,KAAMG,CAAO,EAC1C,CAAE,KAAM,EAAG,MAAO,aAAc,KAAM0B,CAAM,EAC5C,CAAE,KAAM,EAAG,MAAO,aAAc,KAAMc,CAAW,EACjD,CAAE,KAAM,EAAG,MAAO,WAAY,KAAMuB,CAAK,CACzC,EAAA,IAAI,CAAC,CAAE,KAAAqC,EAAM,MAAAC,EAAO,KAAMC,KAC1B5G,EAAAA,KAAC,MAAe,CAAA,UAAU,oBACxB,SAAA,CAAAG,EAAA,IAAC,MAAI,CAAA,UAAW,2DACd0E,GAAe6B,EACX,yBACA,2BACN,GACE,SAACvG,MAAAyG,EAAA,CAAK,UAAU,SAAU,CAAA,EAC5B,EACAzG,EAAAA,IAAC,QAAK,UAAW,4BACf0E,GAAe6B,EAAO,gBAAkB,eAC1C,GACG,SACHC,CAAA,CAAA,EACCD,EAAO,GACNvG,EAAAA,IAAC,MAAI,CAAA,UAAW,mBACd0E,EAAc6B,EAAO,cAAgB,aACvC,EAAI,CAAA,CAAA,CAAA,EAhBEA,CAkBV,CACD,EACH,CAAA,CACF,CACF,CAAA,EAEC7B,IAAgB,GACf1E,EAAA,IAAC5B,GAAA,CACC,gBAAiBwG,EACjB,gBAAiBC,EACjB,OAAQe,CAAA,CACV,EAGDlB,IAAgB,GACf1E,EAAA,IAACwB,GAAA,CACC,eAAgBsD,EAChB,eAAgBC,EAChB,OAAQa,EACR,OAAQC,CAAA,CACV,EAGDnB,IAAgB,GACf1E,EAAA,IAACyC,GAAA,CACC,eAAgBuC,EAChB,eAAgBC,EAChB,OAAQW,EACR,OAAQC,EACR,WAAYP,CAAA,CACd,EAGDZ,IAAgB,GACf7E,EAAAA,KAACE,EACC,CAAA,SAAA,CAAAC,MAACC,EACC,CAAA,SAAAJ,EAAAA,KAACK,EAAU,CAAA,UAAU,0BACnB,SAAA,CAACF,EAAAA,IAAAkE,EAAA,CAAK,UAAU,SAAU,CAAA,EAAE,mBAAA,CAAA,CAE9B,CACF,CAAA,EACClE,MAAAI,EAAA,CACC,SAACP,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACZ,SAAA,CACC+E,GAAA/E,EAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAACG,EAAA,IAAA,KAAA,CAAG,UAAU,mBAAmB,SAAkB,qBAAA,EACnDH,EAAAA,KAAC,IAAE,CAAA,UAAU,UACX,SAAA,CAACG,EAAAA,IAAA,SAAA,CAAQ,WAAgB,IAAK,CAAA,EAAS,MAAI4E,EAAgB,KAAA,EAC7D,EACA/E,EAAAA,KAAC,IAAE,CAAA,UAAU,wBACV,SAAA,CAAgB+E,EAAA,QAAQ,KAAGA,EAAgB,KAAK,KAAGA,EAAgB,SAAS,KAAGA,EAAgB,QAAA,EAClG,CAAA,EACF,EAGDE,GACCjF,EAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAACG,EAAA,IAAA,KAAA,CAAG,UAAU,mBAAmB,SAAuB,0BAAA,EACxDH,EAAAA,KAAC,IAAE,CAAA,UAAU,UACX,SAAA,CAACG,EAAAA,IAAA,SAAA,CAAQ,WAAe,IAAK,CAAA,EAAS,MAAIsC,EAAYwC,EAAe,GAAG,CAAA,EAC1E,EACC9E,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAyB,WAAe,cAAc,CAAA,EACrE,EAGDgF,GACCnF,EAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAACG,EAAA,IAAA,KAAA,CAAG,UAAU,mBAAmB,SAAuB,0BAAA,EACxDH,EAAAA,KAAC,IAAE,CAAA,UAAU,UACX,SAAA,CAACG,EAAAA,IAAA,SAAA,CAAQ,WAAc,IAAK,CAAA,EAC3BgF,EAAc,UACZnF,OAAA,OAAA,CAAK,UAAU,sBAAsB,SAAA,CAAA,SAAOmF,EAAc,SAAS,IAAA,EAAE,CAAA,EAE1E,EACChF,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAyB,WAAc,YAAY,CAAA,EAClE,CAAA,EAEJ,QAEC,MAAI,CAAA,UAAU,wBACb,SAACA,MAAA,IAAA,CAAE,wEAA4D,CACjE,CAAA,EAEAH,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAG,MAACM,EAAO,CAAA,QAAQ,UAAU,QAASuF,EAAgB,SAEnD,WAAA,QACCvF,EAAO,CAAA,QAAS0F,EAAkB,UAAU,yCAAyC,SAEtF,WAAA,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,CAAA,EAEJ,EAEAnG,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,OAACE,EACC,CAAA,SAAA,CAAAC,MAACC,EACC,CAAA,SAAAD,EAAA,IAACE,EAAU,CAAA,SAAA,kBAAgB,CAAA,EAC7B,EACCF,EAAA,IAAAI,EAAA,CAAY,UAAU,YACpB,SAAUoE,EAAA,MAAM,IAAKa,GACpBxF,EAAAA,KAAC,MAAkE,CAAA,UAAU,aAC3E,SAAA,CAAAG,EAAA,IAAC,MAAA,CACC,IAAKqF,EAAK,OAAO,CAAC,EAClB,IAAKA,EAAK,KACV,UAAU,mCAAA,CACZ,EACAxF,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAG,EAAA,IAAC,KAAG,CAAA,UAAU,+BAAgC,SAAAqF,EAAK,KAAK,EACxDxF,EAAAA,KAAC,MAAI,CAAA,UAAU,kCACZ,SAAA,CAAKwF,EAAA,sBACH,IAAE,CAAA,SAAA,CAAA,QAAMA,EAAK,aAAA,EAAc,EAE7BA,EAAK,cACJxF,EAAAA,KAAC,IAAE,CAAA,SAAA,CAAA,eAAawF,EAAK,YAAA,EAAa,SAEnC,IAAE,CAAA,SAAA,CAAA,aAAWA,EAAK,QAAA,EAAS,CAAA,EAC9B,CAAA,EACF,EACCrF,EAAA,IAAA,MAAA,CAAI,UAAU,aACb,eAAC,IAAE,CAAA,UAAU,sBAAuB,SAAAsC,EAAY+C,EAAK,MAAQA,EAAK,QAAQ,CAAE,CAAA,EAC9E,CApBQ,CAAA,EAAA,GAAGA,EAAK,EAAE,IAAIA,EAAK,aAAa,IAAIA,EAAK,YAAY,EAqB/D,CACD,CACH,CAAA,CAAA,EACF,EAEArF,EAAA,IAACiD,GAAA,CACC,cAAe6C,EACf,cAAA3C,EACA,WAAYmC,CAAA,CACd,SAECvF,EACC,CAAA,SAAA,CAAAC,EAAAA,IAACC,GACC,SAACD,EAAA,IAAAE,EAAA,CAAU,UAAU,YAAY,4BAAgB,CACnD,CAAA,EACAL,EAAAA,KAACO,EAAY,CAAA,UAAU,YACrB,SAAA,CAACP,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAAAA,OAAC,OAAK,CAAA,SAAA,CAAA,aAAW2E,EAAU,WAAW,YAAA,EAAU,EAC/CxE,EAAA,IAAA,OAAA,CAAM,SAAYsC,EAAAgD,CAAQ,CAAE,CAAA,CAAA,EAC/B,EACAzF,EAAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAAAG,EAAAA,IAAC,QAAK,SAAc,gBAAA,CAAA,QACnB,OAAM,CAAA,SAAAuF,EAAc,EAAIjD,EAAYiD,CAAW,EAAI,WAAW,CAAA,EACjE,EACCE,EAAiB,GACf5F,OAAA,MAAA,CAAI,UAAU,8CACb,SAAA,CAAAA,OAAC,OAAK,CAAA,SAAA,CAAA,gBAAcsD,GAAA,YAAAA,EAAe,KAAK,GAAA,EAAC,SACxC,OAAK,CAAA,SAAA,CAAA,IAAEb,EAAYmD,CAAc,CAAA,EAAE,CAAA,EACtC,EAEDD,EAAkB,GAChB3F,OAAA,MAAA,CAAI,UAAU,8CACb,SAAA,CAAAG,EAAAA,IAAC,QAAK,SAAmB,qBAAA,CAAA,SACxB,OAAK,CAAA,SAAA,CAAA,IAAEsC,EAAYkD,CAAe,CAAA,EAAE,CAAA,EACvC,QAEDkB,GAAU,EAAA,EACX7G,EAAAA,KAAC,MAAI,CAAA,UAAU,yCACb,SAAA,CAAAG,EAAAA,IAAC,QAAK,SAAS,WAAA,CAAA,QACd,OAAK,CAAA,UAAU,eAAgB,SAAAsC,EAAYoD,CAAK,EAAE,CAAA,EACrD,CAAA,EACF,CAAA,EACF,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,CACF,CAAA,CAAA,CAEJ","x_google_ignoreList":[0]}