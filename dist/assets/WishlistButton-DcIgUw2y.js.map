{"version":3,"file":"WishlistButton-DcIgUw2y.js","sources":["../../src/components/ui/OptimizedImage.tsx","../../src/components/ui/tooltip.tsx","../../src/services/notificationService.ts","../../src/services/wishlistService.ts","../../src/components/wishlist/WishlistButton.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { cn } from '@/lib/utils';\n\ninterface OptimizedImageProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  src: string;\n  alt: string;\n  width?: number;\n  height?: number;\n  className?: string;\n  placeholderSrc?: string;\n  lazyLoad?: boolean;\n  onLoad?: () => void;\n  onError?: () => void;\n}\n\n/**\n * Component hình ảnh tối ưu với lazy loading và placeholder\n */\nconst OptimizedImage: React.FC<OptimizedImageProps> = ({\n  src,\n  alt,\n  width,\n  height,\n  className,\n  placeholderSrc = '/placeholder.svg',\n  lazyLoad = true,\n  onLoad,\n  onError,\n  ...props\n}) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(false);\n  const imgRef = useRef<HTMLImageElement>(null);\n  const observerRef = useRef<IntersectionObserver | null>(null);\n\n  useEffect(() => {\n    // Reset state khi src thay đổi\n    setIsLoaded(false);\n    setError(false);\n    \n    if (!lazyLoad) return;\n    \n    // Khởi tạo IntersectionObserver cho lazy loading\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting && imgRef.current) {\n            // Khi element nằm trong viewport, load hình ảnh\n            imgRef.current.src = src;\n            // Ngừng theo dõi element này\n            observer.unobserve(entry.target);\n          }\n        });\n      },\n      {\n        rootMargin: '200px', // Preload trước 200px\n        threshold: 0.01\n      }\n    );\n    \n    if (imgRef.current) {\n      observer.observe(imgRef.current);\n    }\n    \n    observerRef.current = observer;\n    \n    return () => {\n      if (observerRef.current) {\n        observerRef.current.disconnect();\n      }\n    };\n  }, [src, lazyLoad]);\n  \n  const handleLoad = () => {\n    setIsLoaded(true);\n    onLoad?.();\n  };\n  \n  const handleError = () => {\n    setError(true);\n    onError?.();\n  };\n\n  return (\n    <div \n      className={cn(\n        'relative overflow-hidden bg-gray-100',\n        className\n      )}\n      style={{ width, height }}\n    >\n      <img\n        ref={imgRef}\n        src={lazyLoad ? placeholderSrc : src}\n        alt={alt}\n        width={width}\n        height={height}\n        onLoad={handleLoad}\n        onError={handleError}\n        className={cn(\n          'w-full h-full object-cover transition-opacity duration-300',\n          isLoaded ? 'opacity-100' : 'opacity-0',\n          error ? 'hidden' : 'block'\n        )}\n        {...props}\n      />\n      \n      {/* Placeholder */}\n      {(!isLoaded || error) && (\n        <div className=\"absolute inset-0 flex items-center justify-center bg-gray-100\">\n          {error ? (\n            <div className=\"text-gray-400 text-sm\">\n              <svg \n                xmlns=\"http://www.w3.org/2000/svg\" \n                width=\"24\" \n                height=\"24\" \n                viewBox=\"0 0 24 24\" \n                fill=\"none\" \n                stroke=\"currentColor\" \n                strokeWidth=\"2\" \n                strokeLinecap=\"round\" \n                strokeLinejoin=\"round\"\n                className=\"mx-auto mb-1\"\n              >\n                <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\n                <circle cx=\"8.5\" cy=\"8.5\" r=\"1.5\"></circle>\n                <polyline points=\"21 15 16 10 5 21\"></polyline>\n              </svg>\n              <span>Không thể tải ảnh</span>\n            </div>\n          ) : (\n            <img \n              src={placeholderSrc} \n              alt=\"Loading\"\n              className=\"w-full h-full object-cover\"\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OptimizedImage;","import * as React from \"react\"\r\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst TooltipProvider = TooltipPrimitive.Provider\r\n\r\nconst Tooltip = TooltipPrimitive.Root\r\n\r\nconst TooltipTrigger = TooltipPrimitive.Trigger\r\n\r\nconst TooltipContent = React.forwardRef<\r\n  React.ElementRef<typeof TooltipPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\r\n>(({ className, sideOffset = 4, ...props }, ref) => (\r\n  <TooltipPrimitive.Content\r\n    ref={ref}\r\n    sideOffset={sideOffset}\r\n    className={cn(\r\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\r\n\r\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\r\n","import { toast } from 'sonner';\n\n// Cấu hình thông báo\nconst NOTIFICATION_CONFIG = {\n  duration: {\n    success: 3000,\n    error: 5000,\n    warning: 4000,\n    info: 3000,\n    loading: 0 // Không tự động đóng\n  },\n  position: 'top-right' as const,\n  richColors: true,\n  closeButton: true\n};\n\n// Các loại thông báo\nexport type NotificationType = 'success' | 'error' | 'warning' | 'info' | 'loading';\n\n// Interface cho thông báo\nexport interface NotificationOptions {\n  title?: string;\n  description?: string;\n  duration?: number;\n  action?: {\n    label: string;\n    onClick: () => void;\n  };\n  onDismiss?: () => void;\n  onAutoClose?: () => void;\n}\n\n// Interface cho thông báo loading\nexport interface LoadingNotificationOptions {\n  title: string;\n  description?: string;\n}\n\n// Interface cho thông báo promise\nexport interface PromiseNotificationOptions<T> {\n  loading: string;\n  success: string | ((data: T) => string);\n  error: string | ((error: Error) => string);\n  description?: string;\n  duration?: {\n    success?: number;\n    error?: number;\n  };\n}\n\n/**\n * Service quản lý thông báo toàn cục\n */\nclass NotificationService {\n  /**\n   * Hiển thị thông báo thành công\n   */\n  success(message: string, options?: NotificationOptions): string {\n    return toast.success(message, {\n      description: options?.description,\n      duration: options?.duration ?? NOTIFICATION_CONFIG.duration.success,\n      action: options?.action,\n      onDismiss: options?.onDismiss,\n      onAutoClose: options?.onAutoClose\n    });\n  }\n\n  /**\n   * Hiển thị thông báo lỗi\n   */\n  error(message: string, options?: NotificationOptions): string {\n    return toast.error(message, {\n      description: options?.description,\n      duration: options?.duration ?? NOTIFICATION_CONFIG.duration.error,\n      action: options?.action,\n      onDismiss: options?.onDismiss,\n      onAutoClose: options?.onAutoClose\n    });\n  }\n\n  /**\n   * Hiển thị thông báo cảnh báo\n   */\n  warning(message: string, options?: NotificationOptions): string {\n    return toast.warning(message, {\n      description: options?.description,\n      duration: options?.duration ?? NOTIFICATION_CONFIG.duration.warning,\n      action: options?.action,\n      onDismiss: options?.onDismiss,\n      onAutoClose: options?.onAutoClose\n    });\n  }\n\n  /**\n   * Hiển thị thông báo thông tin\n   */\n  info(message: string, options?: NotificationOptions): string {\n    return toast.info(message, {\n      description: options?.description,\n      duration: options?.duration ?? NOTIFICATION_CONFIG.duration.info,\n      action: options?.action,\n      onDismiss: options?.onDismiss,\n      onAutoClose: options?.onAutoClose\n    });\n  }\n\n  /**\n   * Hiển thị thông báo loading\n   */\n  loading(message: string, options?: LoadingNotificationOptions): string {\n    return toast.loading(message, {\n      description: options?.description\n    });\n  }\n\n  /**\n   * Hiển thị thông báo cho Promise\n   */\n  promise<T>(\n    promise: Promise<T>,\n    options: PromiseNotificationOptions<T>\n  ): Promise<T> {\n    return toast.promise(promise, {\n      loading: options.loading,\n      success: (data: T) => {\n        if (typeof options.success === 'function') {\n          return options.success(data);\n        }\n        return options.success;\n      },\n      error: (error: Error) => {\n        if (typeof options.error === 'function') {\n          return options.error(error);\n        }\n        return options.error;\n      },\n      description: options.description,\n      duration: {\n        success: options.duration?.success ?? NOTIFICATION_CONFIG.duration.success,\n        error: options.duration?.error ?? NOTIFICATION_CONFIG.duration.error\n      }\n    });\n  }\n\n  /**\n   * Cập nhật thông báo đã tồn tại\n   */\n  update(\n    id: string,\n    type: NotificationType,\n    message: string,\n    options?: NotificationOptions\n  ): void {\n    const config = {\n      description: options?.description,\n      duration: options?.duration ?? NOTIFICATION_CONFIG.duration[type],\n      action: options?.action,\n      onDismiss: options?.onDismiss,\n      onAutoClose: options?.onAutoClose\n    };\n\n    switch (type) {\n      case 'success':\n        toast.success(message, { ...config, id });\n        break;\n      case 'error':\n        toast.error(message, { ...config, id });\n        break;\n      case 'warning':\n        toast.warning(message, { ...config, id });\n        break;\n      case 'info':\n        toast.info(message, { ...config, id });\n        break;\n      case 'loading':\n        toast.loading(message, { description: config.description, id });\n        break;\n    }\n  }\n\n  /**\n   * Đóng thông báo theo ID\n   */\n  dismiss(id: string): void {\n    toast.dismiss(id);\n  }\n\n  /**\n   * Đóng tất cả thông báo\n   */\n  dismissAll(): void {\n    toast.dismiss();\n  }\n\n  /**\n   * Thông báo cho các thao tác CRUD\n   */\n  crud = {\n    /**\n     * Thông báo tạo mới thành công\n     */\n    created: (itemName: string) => {\n      return this.success(`${itemName} đã được tạo thành công`);\n    },\n\n    /**\n     * Thông báo cập nhật thành công\n     */\n    updated: (itemName: string) => {\n      return this.success(`${itemName} đã được cập nhật thành công`);\n    },\n\n    /**\n     * Thông báo xóa thành công\n     */\n    deleted: (itemName: string) => {\n      return this.success(`${itemName} đã được xóa thành công`);\n    },\n\n    /**\n     * Thông báo lỗi khi tạo mới\n     */\n    createError: (itemName: string, error?: string) => {\n      return this.error(`Không thể tạo ${itemName}`, {\n        description: error || 'Vui lòng thử lại sau'\n      });\n    },\n\n    /**\n     * Thông báo lỗi khi cập nhật\n     */\n    updateError: (itemName: string, error?: string) => {\n      return this.error(`Không thể cập nhật ${itemName}`, {\n        description: error || 'Vui lòng thử lại sau'\n      });\n    },\n\n    /**\n     * Thông báo lỗi khi xóa\n     */\n    deleteError: (itemName: string, error?: string) => {\n      return this.error(`Không thể xóa ${itemName}`, {\n        description: error || 'Vui lòng thử lại sau'\n      });\n    }\n  };\n\n  /**\n   * Thông báo cho các thao tác xác thực\n   */\n  auth = {\n    /**\n     * Thông báo đăng nhập thành công\n     */\n    loginSuccess: (username?: string) => {\n      return this.success(\n        username ? `Chào mừng ${username}!` : 'Đăng nhập thành công'\n      );\n    },\n\n    /**\n     * Thông báo đăng xuất thành công\n     */\n    logoutSuccess: () => {\n      return this.info('Đã đăng xuất thành công');\n    },\n\n    /**\n     * Thông báo đăng ký thành công\n     */\n    registerSuccess: () => {\n      return this.success('Đăng ký tài khoản thành công');\n    },\n\n    /**\n     * Thông báo lỗi đăng nhập\n     */\n    loginError: (error?: string) => {\n      return this.error('Đăng nhập thất bại', {\n        description: error || 'Vui lòng kiểm tra thông tin đăng nhập'\n      });\n    },\n\n    /**\n     * Thông báo lỗi đăng ký\n     */\n    registerError: (error?: string) => {\n      return this.error('Đăng ký thất bại', {\n        description: error || 'Vui lòng thử lại sau'\n      });\n    },\n\n    /**\n     * Thông báo yêu cầu đăng nhập\n     */\n    loginRequired: () => {\n      return this.warning('Vui lòng đăng nhập để tiếp tục');\n    },\n\n    /**\n     * Thông báo không có quyền truy cập\n     */\n    accessDenied: () => {\n      return this.error('Bạn không có quyền truy cập tính năng này');\n    }\n  };\n\n  /**\n   * Thông báo cho giỏ hàng\n   */\n  cart = {\n    /**\n     * Thông báo thêm sản phẩm vào giỏ hàng\n     */\n    added: (productName: string) => {\n      return this.success(`Đã thêm ${productName} vào giỏ hàng`);\n    },\n\n    /**\n     * Thông báo xóa sản phẩm khỏi giỏ hàng\n     */\n    removed: (productName: string) => {\n      return this.info(`Đã xóa ${productName} khỏi giỏ hàng`);\n    },\n\n    /**\n     * Thông báo cập nhật số lượng\n     */\n    updated: (productName: string) => {\n      return this.info(`Đã cập nhật số lượng ${productName}`);\n    },\n\n    /**\n     * Thông báo giỏ hàng trống\n     */\n    empty: () => {\n      return this.warning('Giỏ hàng của bạn đang trống');\n    },\n\n    /**\n     * Thông báo sản phẩm hết hàng\n     */\n    outOfStock: (productName: string) => {\n      return this.warning(`${productName} hiện đã hết hàng`);\n    }\n  };\n\n  /**\n   * Thông báo cho đơn hàng\n   */\n  order = {\n    /**\n     * Thông báo đặt hàng thành công\n     */\n    placed: (orderId: string) => {\n      return this.success('Đặt hàng thành công', {\n        description: `Mã đơn hàng: ${orderId}`\n      });\n    },\n\n    /**\n     * Thông báo hủy đơn hàng\n     */\n    cancelled: (orderId: string) => {\n      return this.info('Đơn hàng đã được hủy', {\n        description: `Mã đơn hàng: ${orderId}`\n      });\n    },\n\n    /**\n     * Thông báo thanh toán thành công\n     */\n    paymentSuccess: () => {\n      return this.success('Thanh toán thành công');\n    },\n\n    /**\n     * Thông báo thanh toán thất bại\n     */\n    paymentFailed: (error?: string) => {\n      return this.error('Thanh toán thất bại', {\n        description: error || 'Vui lòng thử lại sau'\n      });\n    }\n  };\n}\n\n// Export singleton instance\nexport const notificationService = new NotificationService();\nexport default notificationService;\n\n// Export các helper functions\nexport const showSuccess = (message: string, options?: NotificationOptions) => \n  notificationService.success(message, options);\n\nexport const showError = (message: string, options?: NotificationOptions) => \n  notificationService.error(message, options);\n\nexport const showWarning = (message: string, options?: NotificationOptions) => \n  notificationService.warning(message, options);\n\nexport const showInfo = (message: string, options?: NotificationOptions) => \n  notificationService.info(message, options);\n\nexport const showLoading = (message: string, options?: LoadingNotificationOptions) => \n  notificationService.loading(message, options);\n\nexport const showPromise = <T>(\n  promise: Promise<T>,\n  options: PromiseNotificationOptions<T>\n) => notificationService.promise(promise, options);","import { Product } from '../types';\nimport { notificationService } from './notificationService';\n\n// Cấu hình wishlist\nconst WISHLIST_CONFIG = {\n  storageKey: 'yapee_wishlist',\n  maxItems: 100,\n  syncInterval: 5000 // 5 giây\n};\n\n// Interface cho wishlist item\nexport interface WishlistItem {\n  productId: string;\n  product: Product;\n  addedAt: string;\n  notes?: string;\n}\n\n// Interface cho wishlist data\nexport interface WishlistData {\n  items: WishlistItem[];\n  lastUpdated: string;\n  totalItems: number;\n}\n\n// Interface cho wishlist statistics\nexport interface WishlistStats {\n  totalItems: number;\n  totalValue: number;\n  averagePrice: number;\n  categoriesCount: Record<string, number>;\n  brandsCount: Record<string, number>;\n  priceRanges: {\n    under1M: number;\n    from1Mto5M: number;\n    from5Mto10M: number;\n    over10M: number;\n  };\n}\n\n// Interface cho wishlist filters\nexport interface WishlistFilters {\n  category?: string;\n  brand?: string;\n  minPrice?: number;\n  maxPrice?: number;\n  inStock?: boolean;\n  sortBy?: 'addedAt' | 'price' | 'name' | 'rating';\n  sortOrder?: 'asc' | 'desc';\n}\n\n/**\n * Service quản lý danh sách yêu thích\n */\nclass WishlistService {\n  private wishlistData: WishlistData;\n  private listeners: Set<(data: WishlistData) => void> = new Set();\n  private syncTimer: NodeJS.Timeout | null = null;\n\n  constructor() {\n    this.wishlistData = this.loadFromStorage();\n    this.startSync();\n  }\n\n  /**\n   * Tải dữ liệu từ localStorage\n   */\n  private loadFromStorage(): WishlistData {\n    try {\n      const stored = localStorage.getItem(WISHLIST_CONFIG.storageKey);\n      if (stored) {\n        const data = JSON.parse(stored) as WishlistData;\n        return {\n          ...data,\n          items: data.items || [],\n          totalItems: data.items?.length || 0\n        };\n      }\n    } catch (error) {\n      console.error('Lỗi khi tải wishlist từ localStorage:', error);\n    }\n\n    return {\n      items: [],\n      lastUpdated: new Date().toISOString(),\n      totalItems: 0\n    };\n  }\n\n  /**\n   * Lưu dữ liệu vào localStorage\n   */\n  private saveToStorage(): void {\n    try {\n      this.wishlistData.lastUpdated = new Date().toISOString();\n      this.wishlistData.totalItems = this.wishlistData.items.length;\n      localStorage.setItem(\n        WISHLIST_CONFIG.storageKey,\n        JSON.stringify(this.wishlistData)\n      );\n    } catch (error) {\n      console.error('Lỗi khi lưu wishlist vào localStorage:', error);\n    }\n  }\n\n  /**\n   * Thông báo cho các listeners\n   */\n  private notifyListeners(): void {\n    this.listeners.forEach(listener => {\n      try {\n        listener(this.wishlistData);\n      } catch (error) {\n        console.error('Lỗi khi thông báo wishlist listener:', error);\n      }\n    });\n  }\n\n  /**\n   * Bắt đầu đồng bộ định kỳ\n   */\n  private startSync(): void {\n    if (this.syncTimer) {\n      clearInterval(this.syncTimer);\n    }\n\n    this.syncTimer = setInterval(() => {\n      this.saveToStorage();\n    }, WISHLIST_CONFIG.syncInterval);\n  }\n\n  /**\n   * Dừng đồng bộ\n   */\n  private stopSync(): void {\n    if (this.syncTimer) {\n      clearInterval(this.syncTimer);\n      this.syncTimer = null;\n    }\n  }\n\n  /**\n   * Đăng ký listener\n   */\n  subscribe(listener: (data: WishlistData) => void): () => void {\n    this.listeners.add(listener);\n    \n    // Gọi listener ngay lập tức với dữ liệu hiện tại\n    listener(this.wishlistData);\n    \n    // Trả về function để hủy đăng ký\n    return () => {\n      this.listeners.delete(listener);\n    };\n  }\n\n  /**\n   * Lấy toàn bộ dữ liệu wishlist\n   */\n  getWishlist(): WishlistData {\n    return { ...this.wishlistData };\n  }\n\n  /**\n   * Lấy danh sách sản phẩm trong wishlist\n   */\n  getItems(filters?: WishlistFilters): WishlistItem[] {\n    let items = [...this.wishlistData.items];\n\n    // Áp dụng filters\n    if (filters) {\n      if (filters.category) {\n        items = items.filter(item => \n          item.product.category?.toLowerCase().includes(filters.category!.toLowerCase())\n        );\n      }\n\n      if (filters.brand) {\n        items = items.filter(item => \n          item.product.brand?.toLowerCase().includes(filters.brand!.toLowerCase())\n        );\n      }\n\n      if (filters.minPrice !== undefined) {\n        items = items.filter(item => item.product.price >= filters.minPrice!);\n      }\n\n      if (filters.maxPrice !== undefined) {\n        items = items.filter(item => item.product.price <= filters.maxPrice!);\n      }\n\n      if (filters.inStock !== undefined) {\n        items = items.filter(item => item.product.inStock === filters.inStock);\n      }\n\n      // Sắp xếp\n      if (filters.sortBy) {\n        items.sort((a, b) => {\n          let aValue: any;\n          let bValue: any;\n\n          switch (filters.sortBy) {\n            case 'addedAt':\n              aValue = new Date(a.addedAt).getTime();\n              bValue = new Date(b.addedAt).getTime();\n              break;\n            case 'price':\n              aValue = a.product.price;\n              bValue = b.product.price;\n              break;\n            case 'name':\n              aValue = a.product.name.toLowerCase();\n              bValue = b.product.name.toLowerCase();\n              break;\n            case 'rating':\n              aValue = a.product.rating || 0;\n              bValue = b.product.rating || 0;\n              break;\n            default:\n              return 0;\n          }\n\n          if (filters.sortOrder === 'desc') {\n            return bValue > aValue ? 1 : bValue < aValue ? -1 : 0;\n          } else {\n            return aValue > bValue ? 1 : aValue < bValue ? -1 : 0;\n          }\n        });\n      }\n    }\n\n    return items;\n  }\n\n  /**\n   * Kiểm tra sản phẩm có trong wishlist không\n   */\n  isInWishlist(productId: string): boolean {\n    return this.wishlistData.items.some(item => item.productId === productId);\n  }\n\n  /**\n   * Lấy item trong wishlist theo productId\n   */\n  getItem(productId: string): WishlistItem | null {\n    return this.wishlistData.items.find(item => item.productId === productId) || null;\n  }\n\n  /**\n   * Thêm sản phẩm vào wishlist\n   */\n  addItem(product: Product, notes?: string): boolean {\n    try {\n      // Kiểm tra đã tồn tại\n      if (this.isInWishlist(product.id)) {\n        notificationService.warning(`${product.name} đã có trong danh sách yêu thích`);\n        return false;\n      }\n\n      // Kiểm tra giới hạn\n      if (this.wishlistData.items.length >= WISHLIST_CONFIG.maxItems) {\n        notificationService.error(\n          'Danh sách yêu thích đã đầy',\n          { description: `Tối đa ${WISHLIST_CONFIG.maxItems} sản phẩm` }\n        );\n        return false;\n      }\n\n      // Thêm item mới\n      const newItem: WishlistItem = {\n        productId: product.id,\n        product,\n        addedAt: new Date().toISOString(),\n        notes\n      };\n\n      this.wishlistData.items.unshift(newItem);\n      this.saveToStorage();\n      this.notifyListeners();\n\n      notificationService.success(`Đã thêm ${product.name} vào danh sách yêu thích`);\n      return true;\n    } catch (error) {\n      console.error('Lỗi khi thêm vào wishlist:', error);\n      notificationService.error('Không thể thêm vào danh sách yêu thích');\n      return false;\n    }\n  }\n\n  /**\n   * Xóa sản phẩm khỏi wishlist\n   */\n  removeItem(productId: string): boolean {\n    try {\n      const index = this.wishlistData.items.findIndex(item => item.productId === productId);\n      \n      if (index === -1) {\n        notificationService.warning('Sản phẩm không có trong danh sách yêu thích');\n        return false;\n      }\n\n      const removedItem = this.wishlistData.items[index];\n      this.wishlistData.items.splice(index, 1);\n      this.saveToStorage();\n      this.notifyListeners();\n\n      notificationService.info(`Đã xóa ${removedItem.product.name} khỏi danh sách yêu thích`);\n      return true;\n    } catch (error) {\n      console.error('Lỗi khi xóa khỏi wishlist:', error);\n      notificationService.error('Không thể xóa khỏi danh sách yêu thích');\n      return false;\n    }\n  }\n\n  /**\n   * Toggle sản phẩm trong wishlist\n   */\n  toggleItem(product: Product, notes?: string): boolean {\n    if (this.isInWishlist(product.id)) {\n      return this.removeItem(product.id);\n    } else {\n      return this.addItem(product, notes);\n    }\n  }\n\n  /**\n   * Cập nhật ghi chú cho item\n   */\n  updateNotes(productId: string, notes: string): boolean {\n    try {\n      const item = this.wishlistData.items.find(item => item.productId === productId);\n      \n      if (!item) {\n        notificationService.warning('Sản phẩm không có trong danh sách yêu thích');\n        return false;\n      }\n\n      item.notes = notes;\n      this.saveToStorage();\n      this.notifyListeners();\n\n      notificationService.success('Đã cập nhật ghi chú');\n      return true;\n    } catch (error) {\n      console.error('Lỗi khi cập nhật ghi chú:', error);\n      notificationService.error('Không thể cập nhật ghi chú');\n      return false;\n    }\n  }\n\n  /**\n   * Xóa toàn bộ wishlist\n   */\n  clearAll(): boolean {\n    try {\n      this.wishlistData.items = [];\n      this.saveToStorage();\n      this.notifyListeners();\n\n      notificationService.info('Đã xóa toàn bộ danh sách yêu thích');\n      return true;\n    } catch (error) {\n      console.error('Lỗi khi xóa toàn bộ wishlist:', error);\n      notificationService.error('Không thể xóa danh sách yêu thích');\n      return false;\n    }\n  }\n\n  /**\n   * Lấy thống kê wishlist\n   */\n  getStats(): WishlistStats {\n    const items = this.wishlistData.items;\n    const totalItems = items.length;\n    const totalValue = items.reduce((sum, item) => sum + item.product.price, 0);\n    const averagePrice = totalItems > 0 ? totalValue / totalItems : 0;\n\n    // Thống kê theo danh mục\n    const categoriesCount: Record<string, number> = {};\n    items.forEach(item => {\n      const category = item.product.category || 'Khác';\n      categoriesCount[category] = (categoriesCount[category] || 0) + 1;\n    });\n\n    // Thống kê theo thương hiệu\n    const brandsCount: Record<string, number> = {};\n    items.forEach(item => {\n      const brand = item.product.brand || 'Khác';\n      brandsCount[brand] = (brandsCount[brand] || 0) + 1;\n    });\n\n    // Thống kê theo khoảng giá\n    const priceRanges = {\n      under1M: 0,\n      from1Mto5M: 0,\n      from5Mto10M: 0,\n      over10M: 0\n    };\n\n    items.forEach(item => {\n      const price = item.product.price;\n      if (price < 1000000) {\n        priceRanges.under1M++;\n      } else if (price < 5000000) {\n        priceRanges.from1Mto5M++;\n      } else if (price < 10000000) {\n        priceRanges.from5Mto10M++;\n      } else {\n        priceRanges.over10M++;\n      }\n    });\n\n    return {\n      totalItems,\n      totalValue,\n      averagePrice,\n      categoriesCount,\n      brandsCount,\n      priceRanges\n    };\n  }\n\n  /**\n   * Export wishlist data\n   */\n  exportData(): string {\n    return JSON.stringify(this.wishlistData, null, 2);\n  }\n\n  /**\n   * Import wishlist data\n   */\n  importData(data: string): boolean {\n    try {\n      const importedData = JSON.parse(data) as WishlistData;\n      \n      // Validate data structure\n      if (!importedData.items || !Array.isArray(importedData.items)) {\n        throw new Error('Dữ liệu không hợp lệ');\n      }\n\n      this.wishlistData = {\n        ...importedData,\n        totalItems: importedData.items.length,\n        lastUpdated: new Date().toISOString()\n      };\n\n      this.saveToStorage();\n      this.notifyListeners();\n\n      notificationService.success('Đã import danh sách yêu thích thành công');\n      return true;\n    } catch (error) {\n      console.error('Lỗi khi import wishlist:', error);\n      notificationService.error('Không thể import danh sách yêu thích');\n      return false;\n    }\n  }\n\n  /**\n   * Cleanup khi component unmount\n   */\n  destroy(): void {\n    this.stopSync();\n    this.saveToStorage();\n    this.listeners.clear();\n  }\n}\n\n// Export singleton instance\nexport const wishlistService = new WishlistService();\nexport default wishlistService;\n\n// Cleanup khi trang được đóng\nif (typeof window !== 'undefined') {\n  window.addEventListener('beforeunload', () => {\n    wishlistService.destroy();\n  });\n}","import React, { useState, useEffect } from 'react';\nimport { Heart } from 'lucide-react';\nimport { Button } from '../ui/button';\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '../ui/tooltip';\nimport { wishlistService, WishlistData } from '../../services/wishlistService';\nimport { Product } from '../../types';\nimport { cn } from '../../lib/utils';\nimport { analytics } from '../../lib/analytics';\n\n// Interface cho props\nexport interface WishlistButtonProps {\n  product: Product;\n  variant?: 'default' | 'ghost' | 'outline';\n  size?: 'sm' | 'md' | 'lg';\n  showTooltip?: boolean;\n  className?: string;\n  iconOnly?: boolean;\n  notes?: string;\n  onToggle?: (isInWishlist: boolean) => void;\n}\n\n/**\n * Component nút thêm/xóa sản phẩm khỏi danh sách yêu thích\n */\nexport function WishlistButton({\n  product,\n  variant = 'ghost',\n  size = 'md',\n  showTooltip = true,\n  className,\n  iconOnly = false,\n  notes,\n  onToggle\n}: WishlistButtonProps) {\n  const [isInWishlist, setIsInWishlist] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Cập nhật trạng thái khi wishlist thay đổi\n  useEffect(() => {\n    const unsubscribe = wishlistService.subscribe((data: WishlistData) => {\n      setIsInWishlist(wishlistService.isInWishlist(product.id));\n    });\n\n    return unsubscribe;\n  }, [product.id]);\n\n  // Xử lý click\n  const handleClick = async (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (isLoading) return;\n\n    setIsLoading(true);\n\n    try {\n      const wasInWishlist = isInWishlist;\n      const success = wishlistService.toggleItem(product, notes);\n      const newIsInWishlist = wishlistService.isInWishlist(product.id);\n      \n      if (success) {\n        // Track wishlist analytics\n        if (newIsInWishlist && !wasInWishlist) {\n          // Added to wishlist\n          analytics.trackEcommerce('add_to_wishlist', {\n            currency: 'VND',\n            value: product.price,\n            items: [{\n              item_id: product.id.toString(),\n              item_name: product.name,\n              item_category: product.category,\n              item_brand: product.brand,\n              price: product.price,\n              quantity: 1\n            }]\n          });\n          \n          analytics.track('wishlist_add', {\n            product_id: product.id,\n            product_name: product.name,\n            product_category: product.category,\n            product_price: product.price,\n            notes: notes || ''\n          });\n        } else if (!newIsInWishlist && wasInWishlist) {\n          // Removed from wishlist\n          analytics.trackEcommerce('remove_from_wishlist', {\n            currency: 'VND',\n            value: product.price,\n            items: [{\n              item_id: product.id.toString(),\n              item_name: product.name,\n              item_category: product.category,\n              item_brand: product.brand,\n              price: product.price,\n              quantity: 1\n            }]\n          });\n          \n          analytics.track('wishlist_remove', {\n            product_id: product.id,\n            product_name: product.name,\n            product_category: product.category,\n            product_price: product.price\n          });\n        }\n        \n        if (onToggle) {\n          onToggle(newIsInWishlist);\n        }\n      }\n    } catch (error) {\n      console.error('Lỗi khi toggle wishlist:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Tính toán kích thước icon\n  const getIconSize = () => {\n    switch (size) {\n      case 'sm':\n        return 'h-4 w-4';\n      case 'lg':\n        return 'h-6 w-6';\n      default:\n        return 'h-5 w-5';\n    }\n  };\n\n  // Tính toán kích thước button\n  const getButtonSize = () => {\n    switch (size) {\n      case 'sm':\n        return 'sm';\n      case 'lg':\n        return 'lg';\n      default:\n        return 'default';\n    }\n  };\n\n  // Render button content\n  const renderButtonContent = () => (\n    <>\n      <Heart\n        className={cn(\n          getIconSize(),\n          'transition-all duration-200',\n          isInWishlist\n            ? 'fill-red-500 text-red-500 scale-110'\n            : 'text-gray-400 hover:text-red-500',\n          isLoading && 'animate-pulse'\n        )}\n      />\n      {!iconOnly && (\n        <span className={cn(\n          'ml-2 transition-colors duration-200',\n          isInWishlist ? 'text-red-500' : 'text-gray-600'\n        )}>\n          {isInWishlist ? 'Đã thích' : 'Yêu thích'}\n        </span>\n      )}\n    </>\n  );\n\n  // Render với tooltip\n  if (showTooltip) {\n    return (\n      <TooltipProvider>\n        <Tooltip>\n          <TooltipTrigger asChild>\n            <Button\n              variant={variant}\n              size={getButtonSize()}\n              onClick={handleClick}\n              disabled={isLoading}\n              className={cn(\n                'transition-all duration-200',\n                isInWishlist && variant === 'ghost' && 'bg-red-50 hover:bg-red-100',\n                iconOnly && 'p-2',\n                className\n              )}\n              aria-label={isInWishlist ? 'Xóa khỏi danh sách yêu thích' : 'Thêm vào danh sách yêu thích'}\n            >\n              {renderButtonContent()}\n            </Button>\n          </TooltipTrigger>\n          <TooltipContent>\n            <p>\n              {isInWishlist\n                ? 'Xóa khỏi danh sách yêu thích'\n                : 'Thêm vào danh sách yêu thích'\n              }\n            </p>\n          </TooltipContent>\n        </Tooltip>\n      </TooltipProvider>\n    );\n  }\n\n  // Render không có tooltip\n  return (\n    <Button\n      variant={variant}\n      size={getButtonSize()}\n      onClick={handleClick}\n      disabled={isLoading}\n      className={cn(\n        'transition-all duration-200',\n        isInWishlist && variant === 'ghost' && 'bg-red-50 hover:bg-red-100',\n        iconOnly && 'p-2',\n        className\n      )}\n      aria-label={isInWishlist ? 'Xóa khỏi danh sách yêu thích' : 'Thêm vào danh sách yêu thích'}\n    >\n      {renderButtonContent()}\n    </Button>\n  );\n}\n\nexport default WishlistButton;"],"names":["OptimizedImage","src","alt","width","height","className","placeholderSrc","lazyLoad","onLoad","onError","props","isLoaded","setIsLoaded","useState","error","setError","imgRef","useRef","observerRef","useEffect","observer","entries","entry","handleLoad","handleError","jsxs","cn","jsx","TooltipProvider","TooltipPrimitive.Provider","Tooltip","TooltipPrimitive.Root","TooltipTrigger","TooltipPrimitive.Trigger","TooltipContent","React.forwardRef","sideOffset","ref","TooltipPrimitive.Content","NOTIFICATION_CONFIG","NotificationService","__publicField","itemName","username","productName","orderId","message","options","toast","promise","data","_a","_b","id","type","config","notificationService","WISHLIST_CONFIG","WishlistService","stored","listener","filters","items","item","a","b","aValue","bValue","productId","product","notes","newItem","index","removedItem","totalItems","totalValue","sum","averagePrice","categoriesCount","category","brandsCount","brand","priceRanges","price","importedData","wishlistService","WishlistButton","variant","size","showTooltip","iconOnly","onToggle","isInWishlist","setIsInWishlist","isLoading","setIsLoading","handleClick","e","wasInWishlist","success","newIsInWishlist","analytics","getIconSize","getButtonSize","renderButtonContent","Fragment","Heart","Button"],"mappings":"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"}