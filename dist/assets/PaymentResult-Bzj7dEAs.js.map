{"version":3,"file":"PaymentResult-Bzj7dEAs.js","sources":["../../src/pages/PaymentResult.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSearchParams, useNavigate } from 'react-router-dom';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { CheckCircle, XCircle, Clock, ArrowLeft, Home } from 'lucide-react';\nimport { paymentService, PaymentStatus } from '@/services/paymentService';\nimport { supabase } from '@/lib/supabase';\n\n/**\n * Trang hiển thị kết quả thanh toán\n * Xử lý callback từ các payment gateway như VNPay, MoMo\n */\nconst PaymentResult: React.FC = () => {\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const [paymentStatus, setPaymentStatus] = useState<PaymentStatus | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    /**\n     * Xử lý kết quả thanh toán khi component mount\n     */\n    const processPaymentResult = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Lấy thông tin từ URL parameters\n        const paymentMethod = searchParams.get('method') || 'vnpay';\n        const orderId = searchParams.get('vnp_TxnRef') || searchParams.get('orderId');\n\n        if (!orderId) {\n          throw new Error('Không tìm thấy thông tin đơn hàng');\n        }\n\n        // Xác thực kết quả thanh toán\n        const result = await paymentService.verifyPayment(paymentMethod, searchParams);\n        setPaymentStatus(result);\n\n        // Cập nhật trạng thái đơn hàng trong database\n        if (result.status === 'success' && orderId) {\n          try {\n            const { error: updateError } = await supabase\n              .from('orders')\n              .update({\n                status: 'paid',\n                payment_status: 'completed',\n                payment_method: paymentMethod,\n                payment_transaction_id: result.transactionId,\n                paid_at: new Date().toISOString(),\n                updated_at: new Date().toISOString()\n              })\n              .eq('id', orderId);\n\n            if (updateError) {\n              console.error('Lỗi cập nhật trạng thái đơn hàng:', updateError);\n            } else {\n              console.log('Cập nhật trạng thái đơn hàng thành công:', orderId);\n            }\n          } catch (updateErr) {\n            console.error('Lỗi khi cập nhật đơn hàng:', updateErr);\n          }\n        }\n\n      } catch (err) {\n        console.error('Payment result processing error:', err);\n        setError(err instanceof Error ? err.message : 'Có lỗi xảy ra khi xử lý kết quả thanh toán');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    processPaymentResult();\n  }, [searchParams]);\n\n  /**\n   * Render icon trạng thái thanh toán\n   */\n  const renderStatusIcon = () => {\n    if (!paymentStatus) return null;\n\n    switch (paymentStatus.status) {\n      case 'success':\n        return <CheckCircle className=\"w-16 h-16 text-green-500 mx-auto mb-4\" />;\n      case 'failed':\n        return <XCircle className=\"w-16 h-16 text-red-500 mx-auto mb-4\" />;\n      case 'pending':\n        return <Clock className=\"w-16 h-16 text-yellow-500 mx-auto mb-4\" />;\n      case 'cancelled':\n        return <XCircle className=\"w-16 h-16 text-gray-500 mx-auto mb-4\" />;\n      default:\n        return null;\n    }\n  };\n\n  /**\n   * Render tiêu đề trạng thái\n   */\n  const renderStatusTitle = () => {\n    if (!paymentStatus) return 'Đang xử lý...';\n\n    switch (paymentStatus.status) {\n      case 'success':\n        return 'Thanh toán thành công!';\n      case 'failed':\n        return 'Thanh toán thất bại';\n      case 'pending':\n        return 'Thanh toán đang xử lý';\n      case 'cancelled':\n        return 'Thanh toán đã bị hủy';\n      default:\n        return 'Trạng thái không xác định';\n    }\n  };\n\n  /**\n   * Render mô tả trạng thái\n   */\n  const renderStatusDescription = () => {\n    if (!paymentStatus) return 'Vui lòng đợi trong giây lát...';\n\n    switch (paymentStatus.status) {\n      case 'success':\n        return 'Đơn hàng của bạn đã được thanh toán thành công. Chúng tôi sẽ xử lý và giao hàng trong thời gian sớm nhất.';\n      case 'failed':\n        return 'Thanh toán không thành công. Vui lòng thử lại hoặc chọn phương thức thanh toán khác.';\n      case 'pending':\n        return 'Thanh toán đang được xử lý. Chúng tôi sẽ thông báo kết quả qua email khi hoàn tất.';\n      case 'cancelled':\n        return 'Bạn đã hủy thanh toán. Đơn hàng vẫn được lưu và bạn có thể thanh toán lại bất cứ lúc nào.';\n      default:\n        return 'Không thể xác định trạng thái thanh toán.';\n    }\n  };\n\n  /**\n   * Render nút hành động\n   */\n  const renderActionButtons = () => {\n    if (!paymentStatus) return null;\n\n    const buttons = [];\n\n    // Nút xem chi tiết đơn hàng (cho trạng thái thành công)\n    if (paymentStatus.status === 'success') {\n      buttons.push(\n        <Button\n          key=\"view-order\"\n          onClick={() => navigate(`/order-success?orderId=${paymentStatus.orderId}`)}\n          className=\"w-full sm:w-auto\"\n        >\n          Xem chi tiết đơn hàng\n        </Button>\n      );\n    }\n\n    // Nút thử lại thanh toán (cho trạng thái thất bại hoặc hủy)\n    if (paymentStatus.status === 'failed' || paymentStatus.status === 'cancelled') {\n      buttons.push(\n        <Button\n          key=\"retry-payment\"\n          onClick={() => navigate('/checkout')}\n          variant=\"outline\"\n          className=\"w-full sm:w-auto\"\n        >\n          <ArrowLeft className=\"w-4 h-4 mr-2\" />\n          Thử lại thanh toán\n        </Button>\n      );\n    }\n\n    // Nút về trang chủ\n    buttons.push(\n      <Button\n        key=\"home\"\n        onClick={() => navigate('/')}\n        variant={paymentStatus.status === 'success' ? 'outline' : 'default'}\n        className=\"w-full sm:w-auto\"\n      >\n        <Home className=\"w-4 h-4 mr-2\" />\n        Về trang chủ\n      </Button>\n    );\n\n    return (\n      <div className=\"flex flex-col sm:flex-row gap-3 justify-center mt-6\">\n        {buttons}\n      </div>\n    );\n  };\n\n  // Hiển thị loading\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center p-4\">\n        <Card className=\"w-full max-w-md\">\n          <CardContent className=\"p-8 text-center\">\n            <div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n            <h2 className=\"text-xl font-semibold mb-2\">Đang xử lý kết quả thanh toán</h2>\n            <p className=\"text-gray-600\">Vui lòng đợi trong giây lát...</p>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  // Hiển thị lỗi\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center p-4\">\n        <Card className=\"w-full max-w-md\">\n          <CardContent className=\"p-8 text-center\">\n            <XCircle className=\"w-16 h-16 text-red-500 mx-auto mb-4\" />\n            <h2 className=\"text-xl font-semibold mb-2 text-red-600\">Có lỗi xảy ra</h2>\n            <p className=\"text-gray-600 mb-6\">{error}</p>\n            <div className=\"flex flex-col sm:flex-row gap-3 justify-center\">\n              <Button\n                onClick={() => navigate('/checkout')}\n                variant=\"outline\"\n                className=\"w-full sm:w-auto\"\n              >\n                <ArrowLeft className=\"w-4 h-4 mr-2\" />\n                Quay lại thanh toán\n              </Button>\n              <Button\n                onClick={() => navigate('/')}\n                className=\"w-full sm:w-auto\"\n              >\n                <Home className=\"w-4 h-4 mr-2\" />\n                Về trang chủ\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  // Hiển thị kết quả thanh toán\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center p-4\">\n      <Card className=\"w-full max-w-md\">\n        <CardHeader>\n          <CardTitle className=\"text-center\">\n            {renderStatusIcon()}\n            <h1 className=\"text-2xl font-bold\">{renderStatusTitle()}</h1>\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"p-6\">\n          <p className=\"text-gray-600 text-center mb-6\">\n            {renderStatusDescription()}\n          </p>\n\n          {/* Thông tin chi tiết thanh toán */}\n          {paymentStatus && (\n            <div className=\"bg-gray-50 rounded-lg p-4 mb-6 space-y-2\">\n              <div className=\"flex justify-between text-sm\">\n                <span className=\"text-gray-600\">Mã đơn hàng:</span>\n                <span className=\"font-medium\">{paymentStatus.orderId}</span>\n              </div>\n              <div className=\"flex justify-between text-sm\">\n                <span className=\"text-gray-600\">Số tiền:</span>\n                <span className=\"font-medium\">\n                  {paymentStatus.amount.toLocaleString('vi-VN')} ₫\n                </span>\n              </div>\n              <div className=\"flex justify-between text-sm\">\n                <span className=\"text-gray-600\">Phương thức:</span>\n                <span className=\"font-medium capitalize\">\n                  {paymentStatus.paymentMethod === 'vnpay' && 'VNPay'}\n                  {paymentStatus.paymentMethod === 'momo' && 'MoMo'}\n                  {paymentStatus.paymentMethod === 'cod' && 'Thanh toán khi nhận hàng'}\n                  {paymentStatus.paymentMethod === 'bank_transfer' && 'Chuyển khoản ngân hàng'}\n                </span>\n              </div>\n              {paymentStatus.transactionId && (\n                <div className=\"flex justify-between text-sm\">\n                  <span className=\"text-gray-600\">Mã giao dịch:</span>\n                  <span className=\"font-medium\">{paymentStatus.transactionId}</span>\n                </div>\n              )}\n              {paymentStatus.paidAt && (\n                <div className=\"flex justify-between text-sm\">\n                  <span className=\"text-gray-600\">Thời gian:</span>\n                  <span className=\"font-medium\">\n                    {new Date(paymentStatus.paidAt).toLocaleString('vi-VN')}\n                  </span>\n                </div>\n              )}\n            </div>\n          )}\n\n          {renderActionButtons()}\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default PaymentResult;"],"names":["PaymentResult","searchParams","useSearchParams","navigate","useNavigate","paymentStatus","setPaymentStatus","useState","loading","setLoading","error","setError","useEffect","paymentMethod","orderId","result","paymentService","updateError","supabase","updateErr","err","renderStatusIcon","jsx","CheckCircle","XCircle","Clock","renderStatusTitle","renderStatusDescription","renderActionButtons","buttons","Button","jsxs","ArrowLeft","Home","Card","CardContent","CardHeader","CardTitle"],"mappings":"qeAYA,MAAMA,EAA0B,IAAM,CAC9B,KAAA,CAACC,CAAY,EAAIC,IACjBC,EAAWC,IACX,CAACC,EAAeC,CAAgB,EAAIC,WAA+B,IAAI,EACvE,CAACC,EAASC,CAAU,EAAIF,WAAS,EAAI,EACrC,CAACG,EAAOC,CAAQ,EAAIJ,WAAwB,IAAI,EAEtDK,EAAAA,UAAU,IAAM,EAIe,SAAY,CACnC,GAAA,CACFH,EAAW,EAAI,EACfE,EAAS,IAAI,EAGb,MAAME,EAAgBZ,EAAa,IAAI,QAAQ,GAAK,QAC9Ca,EAAUb,EAAa,IAAI,YAAY,GAAKA,EAAa,IAAI,SAAS,EAE5E,GAAI,CAACa,EACG,MAAA,IAAI,MAAM,mCAAmC,EAIrD,MAAMC,EAAS,MAAMC,EAAe,cAAcH,EAAeZ,CAAY,EAIzE,GAHJK,EAAiBS,CAAM,EAGnBA,EAAO,SAAW,WAAaD,EAC7B,GAAA,CACI,KAAA,CAAE,MAAOG,GAAgB,MAAMC,EAClC,KAAK,QAAQ,EACb,OAAO,CACN,OAAQ,OACR,eAAgB,YAChB,eAAgBL,EAChB,uBAAwBE,EAAO,cAC/B,QAAS,IAAI,KAAK,EAAE,YAAY,EAChC,WAAY,IAAI,KAAK,EAAE,YAAY,CACpC,CAAA,EACA,GAAG,KAAMD,CAAO,EAEfG,EACM,QAAA,MAAM,oCAAqCA,CAAW,EAEtD,QAAA,IAAI,2CAA4CH,CAAO,QAE1DK,EAAW,CACV,QAAA,MAAM,6BAA8BA,CAAS,CACvD,QAGKC,EAAK,CACJ,QAAA,MAAM,mCAAoCA,CAAG,EACrDT,EAASS,aAAe,MAAQA,EAAI,QAAU,4CAA4C,CAAA,QAC1F,CACAX,EAAW,EAAK,CAClB,CAAA,IAGmB,EACpB,CAACR,CAAY,CAAC,EAKjB,MAAMoB,EAAmB,IAAM,CACzB,GAAA,CAAChB,EAAsB,OAAA,KAE3B,OAAQA,EAAc,OAAQ,CAC5B,IAAK,UACI,OAAAiB,EAAA,IAACC,EAAY,CAAA,UAAU,uCAAwC,CAAA,EACxE,IAAK,SACI,OAAAD,EAAA,IAACE,EAAQ,CAAA,UAAU,qCAAsC,CAAA,EAClE,IAAK,UACI,OAAAF,EAAA,IAACG,EAAM,CAAA,UAAU,wCAAyC,CAAA,EACnE,IAAK,YACI,OAAAH,EAAA,IAACE,EAAQ,CAAA,UAAU,sCAAuC,CAAA,EACnE,QACS,OAAA,IACX,CAAA,EAMIE,EAAoB,IAAM,CAC1B,GAAA,CAACrB,EAAsB,MAAA,gBAE3B,OAAQA,EAAc,OAAQ,CAC5B,IAAK,UACI,MAAA,yBACT,IAAK,SACI,MAAA,sBACT,IAAK,UACI,MAAA,wBACT,IAAK,YACI,MAAA,uBACT,QACS,MAAA,2BACX,CAAA,EAMIsB,EAA0B,IAAM,CAChC,GAAA,CAACtB,EAAsB,MAAA,iCAE3B,OAAQA,EAAc,OAAQ,CAC5B,IAAK,UACI,MAAA,4GACT,IAAK,SACI,MAAA,uFACT,IAAK,UACI,MAAA,qFACT,IAAK,YACI,MAAA,4FACT,QACS,MAAA,2CACX,CAAA,EAMIuB,EAAsB,IAAM,CAC5B,GAAA,CAACvB,EAAsB,OAAA,KAE3B,MAAMwB,EAAU,CAAA,EAGZ,OAAAxB,EAAc,SAAW,WACnBwB,EAAA,KACNP,EAAA,IAACQ,EAAA,CAEC,QAAS,IAAM3B,EAAS,0BAA0BE,EAAc,OAAO,EAAE,EACzE,UAAU,mBACX,SAAA,uBAAA,EAHK,YAKN,CAAA,GAKAA,EAAc,SAAW,UAAYA,EAAc,SAAW,cACxDwB,EAAA,KACNE,EAAA,KAACD,EAAA,CAEC,QAAS,IAAM3B,EAAS,WAAW,EACnC,QAAQ,UACR,UAAU,mBAEV,SAAA,CAACmB,EAAAA,IAAAU,EAAA,CAAU,UAAU,cAAe,CAAA,EAAE,oBAAA,CAAA,EALlC,eAON,CAAA,EAKIH,EAAA,KACNE,EAAA,KAACD,EAAA,CAEC,QAAS,IAAM3B,EAAS,GAAG,EAC3B,QAASE,EAAc,SAAW,UAAY,UAAY,UAC1D,UAAU,mBAEV,SAAA,CAACiB,EAAAA,IAAAW,EAAA,CAAK,UAAU,cAAe,CAAA,EAAE,cAAA,CAAA,EAL7B,MAON,CAAA,EAICX,EAAAA,IAAA,MAAA,CAAI,UAAU,sDACZ,SACHO,CAAA,CAAA,CAAA,EAKJ,OAAIrB,EAEAc,EAAAA,IAAC,MAAI,CAAA,UAAU,+DACb,SAAAA,EAAAA,IAACY,EAAK,CAAA,UAAU,kBACd,SAAAH,EAAA,KAACI,EAAY,CAAA,UAAU,kBACrB,SAAA,CAACb,EAAAA,IAAA,MAAA,CAAI,UAAU,6EAA8E,CAAA,EAC5FA,EAAA,IAAA,KAAA,CAAG,UAAU,6BAA6B,SAA6B,gCAAA,EACvEA,EAAA,IAAA,IAAA,CAAE,UAAU,gBAAgB,SAA8B,iCAAA,CAAA,EAC7D,EACF,CACF,CAAA,EAKAZ,EAEAY,EAAAA,IAAC,MAAI,CAAA,UAAU,+DACb,SAAAA,EAAAA,IAACY,EAAK,CAAA,UAAU,kBACd,SAAAH,EAAA,KAACI,EAAY,CAAA,UAAU,kBACrB,SAAA,CAACb,EAAAA,IAAAE,EAAA,CAAQ,UAAU,qCAAsC,CAAA,EACxDF,EAAA,IAAA,KAAA,CAAG,UAAU,0CAA0C,SAAa,gBAAA,EACpEA,EAAA,IAAA,IAAA,CAAE,UAAU,qBAAsB,SAAMZ,EAAA,EACzCqB,EAAAA,KAAC,MAAI,CAAA,UAAU,iDACb,SAAA,CAAAA,EAAA,KAACD,EAAA,CACC,QAAS,IAAM3B,EAAS,WAAW,EACnC,QAAQ,UACR,UAAU,mBAEV,SAAA,CAACmB,EAAAA,IAAAU,EAAA,CAAU,UAAU,cAAe,CAAA,EAAE,qBAAA,CAAA,CAExC,EACAD,EAAA,KAACD,EAAA,CACC,QAAS,IAAM3B,EAAS,GAAG,EAC3B,UAAU,mBAEV,SAAA,CAACmB,EAAAA,IAAAW,EAAA,CAAK,UAAU,cAAe,CAAA,EAAE,cAAA,CAAA,CAEnC,CAAA,EACF,CAAA,EACF,EACF,CACF,CAAA,QAMD,MAAI,CAAA,UAAU,+DACb,SAACF,EAAA,KAAAG,EAAA,CAAK,UAAU,kBACd,SAAA,CAAAZ,MAACc,EACC,CAAA,SAAAL,EAAAA,KAACM,EAAU,CAAA,UAAU,cAClB,SAAA,CAAiBhB,EAAA,EACjBC,EAAA,IAAA,KAAA,CAAG,UAAU,qBAAsB,aAAoB,CAAA,CAAA,CAC1D,CACF,CAAA,EACAS,EAAAA,KAACI,EAAY,CAAA,UAAU,MACrB,SAAA,CAAAb,EAAA,IAAC,IAAE,CAAA,UAAU,iCACV,SAAAK,EAAA,EACH,EAGCtB,GACC0B,EAAA,KAAC,MAAI,CAAA,UAAU,2CACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACT,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAY,eAAA,EAC3CA,EAAA,IAAA,OAAA,CAAK,UAAU,cAAe,WAAc,QAAQ,CAAA,EACvD,EACAS,EAAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAACT,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAQ,WAAA,EACxCS,EAAAA,KAAC,OAAK,CAAA,UAAU,cACb,SAAA,CAAc1B,EAAA,OAAO,eAAe,OAAO,EAAE,IAAA,EAChD,CAAA,EACF,EACA0B,EAAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAACT,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAY,eAAA,EAC5CS,EAAAA,KAAC,OAAK,CAAA,UAAU,yBACb,SAAA,CAAA1B,EAAc,gBAAkB,SAAW,QAC3CA,EAAc,gBAAkB,QAAU,OAC1CA,EAAc,gBAAkB,OAAS,2BACzCA,EAAc,gBAAkB,iBAAmB,wBAAA,EACtD,CAAA,EACF,EACCA,EAAc,eACZ0B,OAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACT,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAa,gBAAA,EAC5CA,EAAA,IAAA,OAAA,CAAK,UAAU,cAAe,WAAc,cAAc,CAAA,EAC7D,EAEDjB,EAAc,QACZ0B,OAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACT,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAU,aAAA,EAC1CA,EAAAA,IAAC,OAAK,CAAA,UAAU,cACb,SAAA,IAAI,KAAKjB,EAAc,MAAM,EAAE,eAAe,OAAO,CACxD,CAAA,CAAA,EACF,CAAA,EAEJ,EAGDuB,EAAoB,CAAA,EACvB,CAAA,CACF,CAAA,CACF,CAAA,CAEJ"}